<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_plane_8cpp" kind="file" language="C++">
    <compoundname>Plane.cpp</compoundname>
    <includes refid="_plane_8h" local="yes">Plane.h</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="_ray_8h" local="yes">Ray.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Geometry/Plane.cpp</label>
        <link refid="_plane_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Ray.h</label>
        <link refid="_ray_8h"/>
      </node>
      <node id="4">
        <label>../Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="3">
        <label>../Math/FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="5">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plane_8h" kindref="compound">Plane.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ray_8h" kindref="compound">Ray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_plane_1acf1b7b3dbfa16da8b3030e7e8691b652" refkind="member"><highlight class="normal"><ref refid="class_plane_1acac0d9c003e0ab10d07b146c3566a0c7" kindref="member">Plane::Plane</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>Vector0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>Vector1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>Vector2)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>point0<sp/>=<sp/>Vector0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>point1<sp/>=<sp/>Vector1;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>point2<sp/>=<sp/>Vector2;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(point0<sp/>==<sp/>point1<sp/>||<sp/>point0<sp/>==<sp/>point2<sp/>||<sp/>point1<sp/>==<sp/>point2)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>plane,<sp/>all<sp/>three<sp/>given<sp/>points<sp/>must<sp/>be<sp/>different&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vectorA<sp/>=<sp/>point0<sp/>-<sp/>point1;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vectorB<sp/>=<sp/>point0<sp/>-<sp/>point2;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref><sp/>=<sp/>vectorA.<ref refid="class_f_vector3_1a639d413c4693b112a15c43cb27aebf71" kindref="member">CrossProduct</ref>(vectorB).<ref refid="class_f_vector3_1a858673b76007df4d6c4c416d9dba31a7" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref><sp/>*<sp/>point0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_plane_1add5e27d1600e501a2c5603855156f763" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_plane_1add5e27d1600e501a2c5603855156f763" kindref="member">Plane::InterssectionPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ray" kindref="compound">Ray</ref>&amp;<sp/>ray,<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>interssectionPoint)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="29"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ray.<ref refid="class_ray_1abcb3e0fae1477c35201b32881d47e20f" kindref="member">GetDirection</ref>()<sp/>*<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref><sp/>!=<sp/>0.0f)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>displacement<sp/>=<sp/>(W<sp/>-<sp/>(normal<sp/>*<sp/>ray.GetStartPosition()))<sp/>/<sp/>(normal<sp/>*<sp/>ray.GetDirection());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>displacement<sp/>=<sp/>(<ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref><sp/>*<sp/>ray.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>()<sp/>+<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>)<sp/>/<sp/>(<ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref><sp/>*<sp/>(ray.<ref refid="class_ray_1abcb3e0fae1477c35201b32881d47e20f" kindref="member">GetDirection</ref>()<sp/>-<sp/><sp/>ray.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>()));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ray.<ref refid="class_ray_1aecb82f665b0756fa474c157c76210638" kindref="member">IsInfinit</ref>()<sp/>||<sp/>abs(displacement)<sp/>&lt;=<sp/>ray.<ref refid="class_ray_1a34f880c3a9b123fd35a0a7debe95a313" kindref="member">GetLength</ref>())</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interssectionPoint<sp/>=<sp/>ray.<ref refid="class_ray_1ac7a18134c5cc9c7e1f0e87eb1b8a62ab" kindref="member">GetPositionAtLength</ref>(displacement);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_plane_1a17436cbb9ce8b17227a3602bc606116d" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_plane_1a17436cbb9ce8b17227a3602bc606116d" kindref="member">Plane::GetRandomPointInPlane</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>/<sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(0,<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>/<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(0,<sp/>0,<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>/<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_plane_1a54dd4366bcf9154c35b9810d311cb1ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_plane_1a54dd4366bcf9154c35b9810d311cb1ac" kindref="member">Plane::NormalizePlane</ref>()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1a04e5395fc03bb5791780f1d4e4b43d0d" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/><ref refid="class_plane_1aafd23444ce2d941ec790af1e086507a5" kindref="member">normal</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Geometry/Plane.cpp"/>
  </compounddef>
</doxygen>
