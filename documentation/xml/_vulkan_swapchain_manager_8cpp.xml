<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_vulkan_swapchain_manager_8cpp" kind="file" language="C++">
    <compoundname>VulkanSwapchainManager.cpp</compoundname>
    <includes refid="_vulkan_swapchain_manager_8h" local="yes">VulkanSwapchainManager.h</includes>
    <includes refid="_vulkan_manager_8h" local="yes">VulkanManager.h</includes>
    <includes refid="_uniform_buffer_object_8h" local="yes">Renderers/UniformBufferObject.h</includes>
    <includes refid="_f_vector3_8h" local="yes">Math/FVector3.h</includes>
    <includes refid="_render_object_8h" local="yes">Renderers/RenderObject.h</includes>
    <includes refid="_render_initialization_data_8h" local="yes">Renderers/RenderInitializationData.h</includes>
    <includes refid="_material_8h" local="yes">Renderers/Materials/Material.h</includes>
    <includes refid="_debug_logger_8h" local="yes">DebugLogger.h</includes>
    <includes refid="_texture_loader_8h" local="yes">Graphics/TextureLoader.h</includes>
    <includes refid="_level_graph_8h" local="yes">LevelGraph.h</includes>
    <includes refid="_core_engine_8h" local="yes">CoreEngine.h</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes local="no">SDL_vulkan.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">fstream</includes>
    <includes local="no">array</includes>
    <includes local="no">chrono</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stb_image.h</includes>
    <incdepgraph>
      <node id="33">
        <label>Clock.h</label>
        <link refid="_clock_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>CoreEngine.h</label>
        <link refid="_core_engine_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Core/DebugLogger.h</label>
        <link refid="_debug_logger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>GameInterface.h</label>
        <link refid="_game_interface_8h"/>
      </node>
      <node id="27">
        <label>LevelGraph.h</label>
        <link refid="_level_graph_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Window.h</label>
        <link refid="_window_8h"/>
      </node>
      <node id="26">
        <label>Graphics/TextureLoader.h</label>
        <link refid="_texture_loader_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="11">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="24">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>RenderableComponent.h</label>
        <link refid="_renderable_component_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Objects/Components/StaticMeshComponent.h</label>
        <link refid="_static_mesh_component_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>TransformComponent.h</label>
        <link refid="_transform_component_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Objects/GameObjects/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Renderers/Materials/Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Renderers/RenderInitializationData.h</label>
        <link refid="_render_initialization_data_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Renderers/RenderObject.h</label>
        <link refid="_render_object_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Renderers/Renderer.h</label>
        <link refid="_renderer_8h"/>
      </node>
      <node id="9">
        <label>Renderers/UniformBufferObject.h</label>
        <link refid="_uniform_buffer_object_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Vertex.h</label>
        <link refid="_vertex_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>VulkanManager.h</label>
        <link refid="_vulkan_manager_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanSwapchainManager.cpp</label>
        <link refid="_vulkan_swapchain_manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>VulkanSwapchainManager.h</label>
        <link refid="_vulkan_swapchain_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>SDL_image.h</label>
      </node>
      <node id="37">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="39">
        <label>algorithm</label>
      </node>
      <node id="41">
        <label>array</label>
      </node>
      <node id="34">
        <label>chrono</label>
      </node>
      <node id="38">
        <label>cmath</label>
      </node>
      <node id="35">
        <label>cstdlib</label>
      </node>
      <node id="40">
        <label>fstream</label>
      </node>
      <node id="43">
        <label>iostream</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="28">
        <label>memory</label>
      </node>
      <node id="8">
        <label>optional</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="44">
        <label>stb_image.h</label>
      </node>
      <node id="42">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>unordered_map</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="36">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_vulkan_swapchain_manager_8cpp_1a18372412ad2fc3ce1e3240b3cf0efe78" prot="public" static="no">
        <name>STB_IMAGE_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanSwapchainManager.cpp" line="24" column="9" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanSwapchainManager.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_swapchain_manager_8h" kindref="compound">VulkanSwapchainManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_manager_8h" kindref="compound">VulkanManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_uniform_buffer_object_8h" kindref="compound">Renderers/UniformBufferObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_vector3_8h" kindref="compound">Math/FVector3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_object_8h" kindref="compound">Renderers/RenderObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_initialization_data_8h" kindref="compound">Renderers/RenderInitializationData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_material_8h" kindref="compound">Renderers/Materials/Material.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_debug_logger_8h" kindref="compound">DebugLogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_loader_8h" kindref="compound">Graphics/TextureLoader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_level_graph_8h" kindref="compound">LevelGraph.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_core_engine_8h" kindref="compound">CoreEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="_vulkan_swapchain_manager_8cpp_1a18372412ad2fc3ce1e3240b3cf0efe78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STB_IMAGE_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stb_image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_vulkan_swapchain_manager_1a1ce48cd4916564abbb4144f5f4c75bc8" refkind="member"><highlight class="normal"><ref refid="class_vulkan_swapchain_manager_1a1ce48cd4916564abbb4144f5f4c75bc8" kindref="member">VulkanSwapchainManager::VulkanSwapchainManager</ref>(<ref refid="class_vulkan_manager" kindref="compound">VulkanManager</ref>*<sp/>manager)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref><sp/>=<sp/>manager;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_vulkan_swapchain_manager_1a6eaa08f7cec249594bc9af51047b5e47" refkind="member"><highlight class="normal"><ref refid="class_vulkan_swapchain_manager_1a6eaa08f7cec249594bc9af51047b5e47" kindref="member">VulkanSwapchainManager::~VulkanSwapchainManager</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_vulkan_swapchain_manager_1a8fd8ee951a81ad8a5068bb1ab63a757f" refkind="member"><highlight class="normal">VkSurfaceFormatKHR<sp/><ref refid="class_vulkan_swapchain_manager_1a8fd8ee951a81ad8a5068bb1ab63a757f" kindref="member">VulkanSwapchainManager::ChooseSwapSurfaceFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VkSurfaceFormatKHR&gt;<sp/>availableFormats)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>availableFormat<sp/>:<sp/>availableFormats)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(availableFormat.format<sp/>==<sp/>VK_FORMAT_B8G8R8A8_SRGB<sp/>&amp;&amp;<sp/>availableFormat.colorSpace<sp/>==<sp/>VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>availableFormat;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>availableFormats[0];</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_vulkan_swapchain_manager_1a031a63761f0e337103cdc0c5dc05284a" refkind="member"><highlight class="normal">VkPresentModeKHR<sp/><ref refid="class_vulkan_swapchain_manager_1a031a63761f0e337103cdc0c5dc05284a" kindref="member">VulkanSwapchainManager::ChooseSwapPresentMode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VkPresentModeKHR&gt;&amp;<sp/>availablePresentModes)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>availablePresentMode<sp/>:<sp/>availablePresentModes)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(availablePresentMode<sp/>==<sp/>VK_PRESENT_MODE_MAILBOX_KHR)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>availablePresentMode;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_PRESENT_MODE_FIFO_KHR;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_vulkan_swapchain_manager_1ace75c40a88a0cb7222ed09bf6aa42d77" refkind="member"><highlight class="normal">VkExtent2D<sp/><ref refid="class_vulkan_swapchain_manager_1ace75c40a88a0cb7222ed09bf6aa42d77" kindref="member">VulkanSwapchainManager::ChooseSwapExtent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VkSurfaceCapabilitiesKHR*<sp/>capabilities)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(capabilities-&gt;currentExtent.width<sp/>!=<sp/>UINT32_MAX)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>capabilities-&gt;currentExtent;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDL_Vulkan_GetDrawableSize(<ref refid="class_core_engine_1ac17a29df79fd8f87ecf51a6c0ebf86fa" kindref="member">CoreEngine::GetInstance</ref>()-&gt;GetWindowSDL(),<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkExtent2D<sp/>actualExtent<sp/>=<sp/>{<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(height)<sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actualExtent.width<sp/>=<sp/>std::max(capabilities-&gt;minImageExtent.width,<sp/>std::min(capabilities-&gt;maxImageExtent.width,<sp/>actualExtent.width));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actualExtent.height<sp/>=<sp/>std::max(capabilities-&gt;minImageExtent.height,<sp/>std::min(capabilities-&gt;maxImageExtent.height,<sp/>actualExtent.height));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>actualExtent;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_vulkan_swapchain_manager_1a7723137432b6d07f111510dd4fab6f4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a7723137432b6d07f111510dd4fab6f4e" kindref="member">VulkanSwapchainManager::CreateSwapChain</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_swapchain_support_details" kindref="compound">SwapchainSupportDetails</ref><sp/>swapChainSupport<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1ae389bc59927a3c47de38545a13d78376" kindref="member">GetSwapchainSupportDetails</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceFormatKHR<sp/>surfaceFormat<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a8fd8ee951a81ad8a5068bb1ab63a757f" kindref="member">ChooseSwapSurfaceFormat</ref>(swapChainSupport.<ref refid="struct_swapchain_support_details_1ad80967c39fd3f3c09041d0aa7657b3a1" kindref="member">Formats</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPresentModeKHR<sp/>presentationMode<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a031a63761f0e337103cdc0c5dc05284a" kindref="member">ChooseSwapPresentMode</ref>(swapChainSupport.<ref refid="struct_swapchain_support_details_1a783cb0b46c795c2ad9ebf50713cf24a9" kindref="member">PresentationModes</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>VkExtent2D<sp/>extent<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ace75c40a88a0cb7222ed09bf6aa42d77" kindref="member">ChooseSwapExtent</ref>(swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>imageCount<sp/>=<sp/>swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>-&gt;minImageCount<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>-&gt;maxImageCount<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>imageCount<sp/>&gt;<sp/>swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>-&gt;maxImageCount)<sp/>imageCount<sp/>=<sp/>swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>-&gt;maxImageCount;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSwapchainCreateInfoKHR<sp/>createInfo{};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.surface<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1add9da1a4526616aca6f35e6f56855ca9" kindref="member">GetSurface</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.minImageCount<sp/>=<sp/>imageCount;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.imageFormat<sp/>=<sp/>surfaceFormat.format;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.imageColorSpace<sp/>=<sp/>surfaceFormat.colorSpace;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.imageExtent<sp/>=<sp/>extent;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.imageArrayLayers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.imageUsage<sp/>=<sp/>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_queue_family_indices" kindref="compound">QueueFamilyIndices</ref><sp/>indices<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a83fa696ceab6dee9118110033db23a7d" kindref="member">FindQueueFamilies</ref>(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1aa2b520b38ac96355a3c6f435b6519d03" kindref="member">GetPhysicalDevice</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>queueFamilyIndices[]<sp/>=<sp/>{<sp/>indices.<ref refid="struct_queue_family_indices_1af8fbfd2dfdf24e0741ebe51a1a84055f" kindref="member">GraphicsFamily</ref>.value(),<sp/>indices.<ref refid="struct_queue_family_indices_1acc6594f5576b6e83be67e89733e9e380" kindref="member">PresentationFamily</ref>.value()<sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.<ref refid="struct_queue_family_indices_1af8fbfd2dfdf24e0741ebe51a1a84055f" kindref="member">GraphicsFamily</ref><sp/>!=<sp/>indices.<ref refid="struct_queue_family_indices_1acc6594f5576b6e83be67e89733e9e380" kindref="member">PresentationFamily</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.imageSharingMode<sp/>=<sp/>VK_SHARING_MODE_CONCURRENT;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.queueFamilyIndexCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.pQueueFamilyIndices<sp/>=<sp/>queueFamilyIndices;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.imageSharingMode<sp/>=<sp/>VK_SHARING_MODE_EXCLUSIVE;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.queueFamilyIndexCount<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.pQueueFamilyIndices<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.preTransform<sp/>=<sp/>swapChainSupport.<ref refid="struct_swapchain_support_details_1ac96f1dd51f5b6c42495d886a7485be3b" kindref="member">Capabilities</ref>-&gt;currentTransform;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.compositeAlpha<sp/>=<sp/>VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.presentMode<sp/>=<sp/>presentationMode;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.clipped<sp/>=<sp/>VK_TRUE;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.oldSwapchain<sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateSwapchainKHR(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;createInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1acd645defc4a72233211f8366fb8239e9" kindref="member">Swapchain</ref>)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>Swapchain!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetSwapchainImagesKHR(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1acd645defc4a72233211f8366fb8239e9" kindref="member">Swapchain</ref>,<sp/>&amp;imageCount,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.resize(imageCount);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetSwapchainImagesKHR(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1acd645defc4a72233211f8366fb8239e9" kindref="member">Swapchain</ref>,<sp/>&amp;imageCount,<sp/><ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.data());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1afc7bd364fb3e3a41bca4f62f4f675fef" kindref="member">ImageFormat</ref><sp/>=<sp/>surfaceFormat.format;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VkExtent2D(extent);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_vulkan_swapchain_manager_1ad073c1e97745d57d28a1b8d5d66a1e0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1ad073c1e97745d57d28a1b8d5d66a1e0b" kindref="member">VulkanSwapchainManager::CreateImageViews</ref>()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>.resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>[i]<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a14c9c0d5e0fdd52f0d4a1ae3e4688a9e" kindref="member">CreateImageView</ref>(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>[i],<sp/><ref refid="class_vulkan_swapchain_manager_1afc7bd364fb3e3a41bca4f62f4f675fef" kindref="member">ImageFormat</ref>,<sp/>VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_vulkan_swapchain_manager_1a14c9c0d5e0fdd52f0d4a1ae3e4688a9e" refkind="member"><highlight class="normal">VkImageView_T*<sp/><ref refid="class_vulkan_swapchain_manager_1a14c9c0d5e0fdd52f0d4a1ae3e4688a9e" kindref="member">VulkanSwapchainManager::CreateImageView</ref>(VkImage_T*<sp/>image,<sp/>VkFormat<sp/>format,<sp/><ref refid="_vulkan_renderer_8h_1a1dc6a69eefc5cddb8237b87d5c22d1ec" kindref="member">VkImageAspectFlags</ref><sp/>aspectFlags)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageViewCreateInfo<sp/>viewInfo{};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.image<sp/>=<sp/>image;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.viewType<sp/>=<sp/>VK_IMAGE_VIEW_TYPE_2D;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.format<sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.aspectMask<sp/>=<sp/>aspectFlags;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.baseMipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.levelCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.layerCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageView<sp/>imageView;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateImageView(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;viewInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;imageView)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>texture<sp/>image<sp/>view!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>imageView;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="class_vulkan_swapchain_manager_1a9687d1e5b5289269e183c3d8f0674c4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a9687d1e5b5289269e183c3d8f0674c4c" kindref="member">VulkanSwapchainManager::CreateRenderPass</ref>()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>VkAttachmentDescription<sp/>colorAttachment{};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.format<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1afc7bd364fb3e3a41bca4f62f4f675fef" kindref="member">ImageFormat</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.samples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.loadOp<sp/>=<sp/>VK_ATTACHMENT_LOAD_OP_CLEAR;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.storeOp<sp/>=<sp/>VK_ATTACHMENT_STORE_OP_STORE;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.stencilLoadOp<sp/>=<sp/>VK_ATTACHMENT_LOAD_OP_DONT_CARE;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.stencilStoreOp<sp/>=<sp/>VK_ATTACHMENT_STORE_OP_DONT_CARE;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.initialLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_UNDEFINED;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachment.finalLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>VkAttachmentReference<sp/>colorAttachmentRef{};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachmentRef.attachment<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>colorAttachmentRef.layout<sp/>=<sp/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>VkAttachmentDescription<sp/>depthAttachment{};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.format<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a66c6909cc00edc58f87f94cb258aef96" kindref="member">FindDepthFormat</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.samples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.loadOp<sp/>=<sp/>VK_ATTACHMENT_LOAD_OP_CLEAR;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.storeOp<sp/>=<sp/>VK_ATTACHMENT_STORE_OP_DONT_CARE;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.stencilLoadOp<sp/>=<sp/>VK_ATTACHMENT_LOAD_OP_DONT_CARE;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.stencilStoreOp<sp/>=<sp/>VK_ATTACHMENT_STORE_OP_DONT_CARE;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.initialLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_UNDEFINED;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachment.finalLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>VkAttachmentReference<sp/>depthAttachmentRef{};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachmentRef.attachment<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>depthAttachmentRef.layout<sp/>=<sp/>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubpassDescription<sp/>subpass{};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>subpass.pipelineBindPoint<sp/>=<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>subpass.colorAttachmentCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>subpass.pColorAttachments<sp/>=<sp/>&amp;colorAttachmentRef;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>subpass.pDepthStencilAttachment<sp/>=<sp/>&amp;depthAttachmentRef;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubpassDependency<sp/>dependency{};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.srcSubpass<sp/>=<sp/>VK_SUBPASS_EXTERNAL;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.dstSubpass<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.srcStageMask<sp/>=<sp/>VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT<sp/>|<sp/>VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.dstStageMask<sp/>=<sp/>VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT<sp/>|<sp/>VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.srcAccessMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>dependency.dstAccessMask<sp/>=<sp/>VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT<sp/>|<sp/>VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;VkAttachmentDescription,<sp/>2&gt;<sp/>attachments<sp/>=<sp/>{<sp/>colorAttachment,<sp/>depthAttachment<sp/>};</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderPassCreateInfo<sp/>renderPassInfo{};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.attachmentCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(attachments.size());</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.pAttachments<sp/>=<sp/>attachments.data();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.subpassCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.pSubpasses<sp/>=<sp/>&amp;subpass;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.dependencyCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>renderPassInfo.pDependencies<sp/>=<sp/>&amp;dependency;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateRenderPass(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;renderPassInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1ab3dd5f27e0862acff6bd7636db6f606b" kindref="member">RenderPass</ref>)<sp/>!=<sp/>VK_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>render<sp/>pass!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_vulkan_swapchain_manager_1ac805e3c32dd1a7f47a19e33afdf9f0af" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1ac805e3c32dd1a7f47a19e33afdf9f0af" kindref="member">VulkanSwapchainManager::CreateImage</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/>VkFormat<sp/>format,<sp/>VkImageTiling<sp/>tiling,<sp/><ref refid="_vulkan_renderer_8h_1a2c990c0c189d0a9bd02c5d911d5cc5f7" kindref="member">VkImageUsageFlags</ref><sp/>usage,<sp/><ref refid="_vulkan_manager_8h_1a06f71178c68bf5712dbec35d6f124122" kindref="member">VkMemoryPropertyFlags</ref><sp/>properties,<sp/>VkImage_T*&amp;<sp/>image,<sp/>VkDeviceMemory_T*&amp;<sp/>imageMemory)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageCreateInfo<sp/>imageInfo{};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.imageType<sp/>=<sp/>VK_IMAGE_TYPE_2D;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.extent.width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.extent.height<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.extent.depth<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.mipLevels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.arrayLayers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.format<sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.tiling<sp/>=<sp/>tiling;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.initialLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_UNDEFINED;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.usage<sp/>=<sp/>usage;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.samples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo.sharingMode<sp/>=<sp/>VK_SHARING_MODE_EXCLUSIVE;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateImage(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;imageInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;image)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>image!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>VkMemoryRequirements<sp/>memRequirements;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetImageMemoryRequirements(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>image,<sp/>&amp;memRequirements);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>VkMemoryAllocateInfo<sp/>allocInfo{};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.allocationSize<sp/>=<sp/>memRequirements.size;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.memoryTypeIndex<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a00263d73a509a1314c313cf494d5543e" kindref="member">FindMemoryType</ref>(memRequirements.memoryTypeBits,<sp/>properties);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkAllocateMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;allocInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;imageMemory)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>image<sp/>memory!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>vkBindImageMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>image,<sp/>imageMemory,<sp/>0);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_vulkan_swapchain_manager_1a7b354080d3cfbb054fdc9772db643b56" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a7b354080d3cfbb054fdc9772db643b56" kindref="member">VulkanSwapchainManager::CreateDepthResources</ref>()</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFormat<sp/>depthFormat<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a66c6909cc00edc58f87f94cb258aef96" kindref="member">FindDepthFormat</ref>();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1ac805e3c32dd1a7f47a19e33afdf9f0af" kindref="member">CreateImage</ref>(<ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref>-&gt;width,<sp/><ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref>-&gt;height,<sp/>depthFormat,<sp/>VK_IMAGE_TILING_OPTIMAL,<sp/>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,<sp/>VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1a76393f92d2691518b0ad387dced8f024" kindref="member">DepthImage</ref>,<sp/><ref refid="class_vulkan_swapchain_manager_1aefd057eddafaeadc6fdce0f5150228f0" kindref="member">DepthImageMemory</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a4e48a3506a6fd06444dbeeed5d50fdb4" kindref="member">DepthImageView</ref><sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a14c9c0d5e0fdd52f0d4a1ae3e4688a9e" kindref="member">CreateImageView</ref>(<ref refid="class_vulkan_swapchain_manager_1a76393f92d2691518b0ad387dced8f024" kindref="member">DepthImage</ref>,<sp/>depthFormat,<sp/>VK_IMAGE_ASPECT_DEPTH_BIT);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1acd8bb5022376987fc6e376d204458225" kindref="member">TransitionImageLayout</ref>(<ref refid="class_vulkan_swapchain_manager_1a76393f92d2691518b0ad387dced8f024" kindref="member">DepthImage</ref>,<sp/>depthFormat,<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="class_vulkan_swapchain_manager_1a0f5362626d30524092d3c1f2cd89ce1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a0f5362626d30524092d3c1f2cd89ce1c" kindref="member">VulkanSwapchainManager::CreateFramebuffers</ref>()</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1aac1688c5f1edc455f33391a7174478e3" kindref="member">Framebuffers</ref>.resize(<ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>.size());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;VkImageView,<sp/>2&gt;<sp/>attachments<sp/>=<sp/>{<sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>[i],<sp/><ref refid="class_vulkan_swapchain_manager_1a4e48a3506a6fd06444dbeeed5d50fdb4" kindref="member">DepthImageView</ref><sp/>};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkFramebufferCreateInfo<sp/>framebufferInfo{};</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.renderPass<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ab3dd5f27e0862acff6bd7636db6f606b" kindref="member">RenderPass</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.attachmentCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(attachments.size());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.pAttachments<sp/>=<sp/>attachments.data();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.width<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref>-&gt;width;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.height<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ab7ad479a7f5095e062a008fc46832ce6" kindref="member">Extent</ref>-&gt;height;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framebufferInfo.layers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateFramebuffer(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;framebufferInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1aac1688c5f1edc455f33391a7174478e3" kindref="member">Framebuffers</ref>[i])<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>framebuffer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_vulkan_swapchain_manager_1a22df6a1996a2afc5b3cee779ded2c7d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a22df6a1996a2afc5b3cee779ded2c7d6" kindref="member">VulkanSwapchainManager::CreateUniformBuffers</ref>()</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>cameraBufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniform_camera_object" kindref="compound">UniformCameraObject</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>matrixBufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>intBufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>.resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>.resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>.resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(cameraBufferSize,<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>[i].Buffer,<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>[i].Memory);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.empty())</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(matrixBufferSize<sp/>*<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.size(),<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>[i].Buffer,<sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>[i].Memory);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(intBufferSize,<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>[i].Buffer,<sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>[i].Memory);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shader<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>material<sp/>:<sp/>shader.second)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material].resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>image<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material])<sp/>image<sp/>=<sp/>std::vector&lt;S_BufferData&gt;();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*const<sp/>auto&amp;<sp/>data<sp/>=<sp/>material-&gt;GetShaderVariablesData();</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto&amp;<sp/>info<sp/>=<sp/>material-&gt;GetShaderVariablesInfo();</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>data.size();<sp/>j++)</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(info[j].Type<sp/>!=<sp/>E_ShaderVariableType::UNIFORM_BUFFER)<sp/>continue;</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Manager-&gt;CreateBuffer(info[j].VariableSize,<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/>MaterialMap[material][i][j].Buffer,<sp/>MaterialMap[material][i][j].Memory);</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model.first].resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(matrixBufferSize,<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model.first][i].Buffer,<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model.first][i].Memory);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="class_vulkan_swapchain_manager_1a1fb4d08af0053fd690cdf10b2aeaa4c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a1fb4d08af0053fd690cdf10b2aeaa4c4" kindref="member">VulkanSwapchainManager::CreateDescriptorSetLayouts</ref>()</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shader<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_material" kindref="compound">Material</ref>*<sp/>material<sp/>=<sp/>(*shader.second.begin());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkDescriptorSetLayoutBinding&gt;<sp/>bindings;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.reserve(material-&gt;<ref refid="class_material_1ad0498bf7f098c0ecb406039b5b83decc" kindref="member">GetShaderVariablesInfo</ref>().size()<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutBinding<sp/>cameraLayoutBinding{};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraLayoutBinding.binding<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraLayoutBinding.pImmutableSamplers<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.push_back(cameraLayoutBinding);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutBinding<sp/>modelLayoutBinding{};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelLayoutBinding.binding<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelLayoutBinding.pImmutableSamplers<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.push_back(modelLayoutBinding);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutBinding<sp/>numberOfLightsLayoutBinding{};</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsLayoutBinding.binding<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsLayoutBinding.pImmutableSamplers<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.push_back(numberOfLightsLayoutBinding);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutBinding<sp/>lightsLayoutBinding{};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsLayoutBinding.binding<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsLayoutBinding.pImmutableSamplers<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.push_back(lightsLayoutBinding);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*VkDescriptorSetLayoutBinding<sp/>samplerLayoutBinding{};</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplerLayoutBinding.binding<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplerLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplerLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplerLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplerLayoutBinding.pImmutableSamplers<sp/>=<sp/>nullptr;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*VkDescriptorSetLayoutBinding<sp/>materialLayoutBinding{};</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.binding<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.pImmutableSamplers<sp/>=<sp/>nullptr;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bidingCount<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info<sp/>:<sp/>material-&gt;<ref refid="class_material_1ad0498bf7f098c0ecb406039b5b83decc" kindref="member">GetShaderVariablesInfo</ref>())</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutBinding<sp/>materialLayoutBinding{};</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.binding<sp/>=<sp/>bidingCount;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.descriptorType<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a6e4b42e7924470dc7148e559339a00db" kindref="member">GetVulkanDescriptorType</ref>(info.Type);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.stageFlags<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ab86ff194e02a4d2e68eef1555b3334db" kindref="member">GetVulkanShaderStageFlag</ref>(info.Stage);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialLayoutBinding.pImmutableSamplers<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bindings.push_back(materialLayoutBinding);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bidingCount++;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::array&lt;VkDescriptorSetLayoutBinding,<sp/>6&gt;<sp/>bindings<sp/>=<sp/>{<sp/>cameraLayoutBinding,<sp/>modelLayoutBinding,<sp/>samplerLayoutBinding,<sp/>lightsLayoutBinding,<sp/>numberOfLightsLayoutBinding,<sp/>materialLayoutBinding<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetLayoutCreateInfo<sp/>layoutInfo{};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutInfo.bindingCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(bindings.size());</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>layoutInfo.pBindings<sp/>=<sp/>bindings.data();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a019773dcdc0c9d6561fbcd85eea2f2eb" kindref="member">DescriptorLayoutsByShader</ref>[shader.first]<sp/>=<sp/>VkDescriptorSetLayout();</highlight><highlight class="comment">//TODO<sp/>see<sp/>if<sp/>I<sp/>can<sp/>get<sp/>rid<sp/>of<sp/>this<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateDescriptorSetLayout(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;layoutInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1a019773dcdc0c9d6561fbcd85eea2f2eb" kindref="member">DescriptorLayoutsByShader</ref>[shader.first])<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>descriptor<sp/>set<sp/>layout!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="class_vulkan_swapchain_manager_1a78317ec976a8be58656dda76310d24c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a78317ec976a8be58656dda76310d24c4" kindref="member">VulkanSwapchainManager::CreateDescriptorPool</ref>()</highlight></codeline>
<codeline lineno="426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>.empty())</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a55a028ea9f947a742efd70d6de7f9425" kindref="member">DebugLogger::Warning</ref>(</highlight><highlight class="stringliteral">&quot;Nothing<sp/>to<sp/>be<sp/>rendered,<sp/>no<sp/>descriptor<sp/>pool<sp/>created&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Renderers/Vulkan/VulkanSwapchainManager.cppp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;VkDescriptorPoolSize,<sp/>2&gt;<sp/>poolSizes{};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>poolSizes[0].type<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>poolSizes[0].descriptorCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size()<sp/>*<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>.size());</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>poolSizes[1].type<sp/>=<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>poolSizes[1].descriptorCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size()<sp/>*<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>.size());</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPoolCreateInfo<sp/>poolInfo{};</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.poolSizeCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(poolSizes.size());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.pPoolSizes<sp/>=<sp/>poolSizes.data();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.maxSets<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size()<sp/>*<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>.size());</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateDescriptorPool(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;poolInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1aa16c2004dd1b2ef28666ebce88766951" kindref="member">DescriptorPool</ref>)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>descriptor<sp/>pool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="class_vulkan_swapchain_manager_1a5f87eaa2ed9df4c246df5b0136c647eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a5f87eaa2ed9df4c246df5b0136c647eb" kindref="member">VulkanSwapchainManager::CreateDescriptorSets</ref>()</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>.empty())</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a55a028ea9f947a742efd70d6de7f9425" kindref="member">DebugLogger::Warning</ref>(</highlight><highlight class="stringliteral">&quot;Nothing<sp/>to<sp/>be<sp/>rendered,<sp/>no<sp/>descriptor<sp/>set<sp/>created&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Renderers/Vulkan/VulkanSwapchainManager.cppp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shader<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkDescriptorSetLayout&gt;<sp/>layouts(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size(),<sp/><ref refid="class_vulkan_swapchain_manager_1a019773dcdc0c9d6561fbcd85eea2f2eb" kindref="member">DescriptorLayoutsByShader</ref>[shader.first]);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>material<sp/>:<sp/>shader.second)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>[material])</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>[mesh])</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorSetAllocateInfo<sp/>allocInfo{};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocInfo.descriptorPool<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1aa16c2004dd1b2ef28666ebce88766951" kindref="member">DescriptorPool</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocInfo.descriptorSetCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocInfo.pSetLayouts<sp/>=<sp/>layouts.data();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model].resize(<ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size());</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkAllocateDescriptorSets(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;allocInfo,<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model].data())<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>descriptor<sp/>sets!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>currentImage<sp/>=<sp/>0;<sp/>currentImage<sp/>&lt;<sp/><ref refid="class_vulkan_swapchain_manager_1a832b418d1979b268ac3404b667d0e270" kindref="member">Images</ref>.size();<sp/>currentImage++)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo<sp/>cameraInfo{};</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraInfo.buffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>[currentImage].Buffer;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraInfo.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cameraInfo.range<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniform_camera_object" kindref="compound">UniformCameraObject</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo<sp/>lightsInfo{};</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsInfo.buffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>[currentImage].Buffer;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsInfo.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lightsInfo.range<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>)<sp/>*<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.size();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo<sp/>numberOfLightsInfo{};</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsInfo.buffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>[currentImage].Buffer;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsInfo.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfLightsInfo.range<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*VkDescriptorBufferInfo<sp/>materialInfo{};</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialInfo.buffer<sp/>=<sp/>MaterialMap[&amp;material.first-&gt;Data][i].Buffer;</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialInfo.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>materialInfo.range<sp/>=<sp/>sizeof(FMatrix4);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*VkDescriptorImageInfo<sp/>imageInfo{};</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageInfo.imageLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageInfo.imageView<sp/>=<sp/>TextureDataMap[material.first-&gt;TextureDifuse].TextureImageView;</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageInfo.sampler<sp/>=<sp/>TextureDataMap[material.first-&gt;TextureDifuse].TextureSampler;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo<sp/>modelInfo{};</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelInfo.buffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model][currentImage].Buffer;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelInfo.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelInfo.range<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;VkWriteDescriptorSet&gt;<sp/>descriptorWrites;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.reserve(material-&gt;GetShaderVariablesInfo().size());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.push_back(VkWriteDescriptorSet());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].dstSet<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model][currentImage];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].dstBinding<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[0].pBufferInfo<sp/>=<sp/>&amp;cameraInfo;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.push_back(VkWriteDescriptorSet());</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].dstSet<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model][currentImage];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].dstBinding<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[1].pBufferInfo<sp/>=<sp/>&amp;modelInfo;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.push_back(VkWriteDescriptorSet());</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].dstSet<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model][currentImage];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].dstBinding<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[2].pBufferInfo<sp/>=<sp/>&amp;numberOfLightsInfo;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.push_back(VkWriteDescriptorSet());</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].dstSet<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model][currentImage];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].dstBinding<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[3].pBufferInfo<sp/>=<sp/>&amp;lightsInfo;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tempVector<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a095dac47c778274379064eea014ea600" kindref="member">CreateDescriptorWritesFromMaterial</ref>(material,<sp/>currentImage);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tempVector.size();<sp/>i++)</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempVector[i].dstSet<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a385330f2ef9e616a3d84b8dd5e67fd48" kindref="member">DescriptorSetsMap</ref>[model][currentImage];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempVector[i].dstBinding<sp/>=<sp/>i<sp/>+<sp/>descriptorWrites.size();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Counter<sp/>starting<sp/>on<sp/>how<sp/>many<sp/>descriptors<sp/>were<sp/>pre-defined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>to<sp/>delete<sp/>some<sp/>pointers<sp/>latter<sp/>on<sp/>to<sp/>avoid<sp/>memory<sp/>leak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>descriptorCounter<sp/>=<sp/>descriptorWrites.size();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites.insert(descriptorWrites.end(),<sp/>tempVector.begin(),<sp/>tempVector.end());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*descriptorWrites[4].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].dstSet<sp/>=<sp/>DescriptorSetsMap[model][i];</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].dstBinding<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[4].pImageInfo<sp/>=<sp/>&amp;imageInfo;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*descriptorWrites[5].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].dstSet<sp/>=<sp/>DescriptorSetsMap[model][i];</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].dstBinding<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptorWrites[5].pBufferInfo<sp/>=<sp/>&amp;materialInfo;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUpdateDescriptorSets(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(descriptorWrites.size()),<sp/>descriptorWrites.data(),<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(descriptorCounter;<sp/>descriptorCounter<sp/>&lt;<sp/>descriptorWrites.size();<sp/>descriptorCounter++)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptorWrites[descriptorCounter].pBufferInfo)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(descriptorWrites[descriptorCounter].pBufferInfo);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptorWrites[descriptorCounter].pImageInfo)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(descriptorWrites[descriptorCounter].pImageInfo);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="class_vulkan_swapchain_manager_1a8065f8027198ed42a4b6213f4ee0e418" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a8065f8027198ed42a4b6213f4ee0e418" kindref="member">VulkanSwapchainManager::CreateTextureImage</ref>()</highlight><highlight class="comment">//TODO<sp/>remove<sp/>depricated<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>texture<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0be5fe25e207cf174293348b4f6428f7" kindref="member">Textures</ref>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TextureLoader::LoadTexture(material-&gt;TextureDifuse-&gt;Path,<sp/>material-&gt;TextureDifuse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textureWidth<sp/>=<sp/>texture-&gt;Width;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textureHeight<sp/>=<sp/>texture-&gt;Height;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>texturePixels<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(texture-&gt;Pixels);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void*<sp/>texturePixels<sp/>=<sp/>texture.first-&gt;TextureDifuse-&gt;Pixels;//TODO<sp/>this<sp/>may<sp/>break<sp/>Vulakn!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>imageSize<sp/>=<sp/>textureWidth<sp/>*<sp/>textureHeight<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!texturePixels)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>texture<sp/>image!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBuffer<sp/>stagingBuffer;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceMemory<sp/>stagingBufferMemory;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(imageSize,<sp/>VK_BUFFER_USAGE_TRANSFER_SRC_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/>stagingBuffer,<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/>0,<sp/>imageSize,<sp/>0,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/>texturePixels,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(imageSize));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1ac805e3c32dd1a7f47a19e33afdf9f0af" kindref="member">CreateImage</ref>(textureWidth,<sp/>textureHeight,<sp/>VK_FORMAT_R8G8B8A8_SRGB,<sp/>VK_IMAGE_TILING_OPTIMAL,<sp/>VK_IMAGE_USAGE_TRANSFER_DST_BIT<sp/>|<sp/>VK_IMAGE_USAGE_SAMPLED_BIT,<sp/>VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImage,<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImageMemory);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1acd8bb5022376987fc6e376d204458225" kindref="member">TransitionImageLayout</ref>(<ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImage,<sp/>VK_FORMAT_R8G8B8A8_SRGB,<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1ae88c46b746790210aa06147c3df1eb1c" kindref="member">CopyBufferToImage</ref>(stagingBuffer,<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImage,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(textureWidth),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(textureHeight));</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1acd8bb5022376987fc6e376d204458225" kindref="member">TransitionImageLayout</ref>(<ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImage,<sp/>VK_FORMAT_R8G8B8A8_SRGB,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImageView<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a14c9c0d5e0fdd52f0d4a1ae3e4688a9e" kindref="member">CreateImageView</ref>(<ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureImage,<sp/>VK_FORMAT_R8G8B8A8_SRGB,<sp/>VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1aa3ee47b6718a426803cabd199e6be1f9" kindref="member">CreateTextureSampler</ref>(<ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[texture].TextureSampler);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="class_vulkan_swapchain_manager_1aa3ee47b6718a426803cabd199e6be1f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1aa3ee47b6718a426803cabd199e6be1f9" kindref="member">VulkanSwapchainManager::CreateTextureSampler</ref>(VkSampler_T*&amp;<sp/>sampler)</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSamplerCreateInfo<sp/>samplerInfo{};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.magFilter<sp/>=<sp/>VK_FILTER_LINEAR;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.minFilter<sp/>=<sp/>VK_FILTER_LINEAR;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.addressModeU<sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_REPEAT;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.addressModeV<sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_REPEAT;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.addressModeW<sp/>=<sp/>VK_SAMPLER_ADDRESS_MODE_REPEAT;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.anisotropyEnable<sp/>=<sp/>VK_TRUE;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.maxAnisotropy<sp/>=<sp/>16.0f;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.borderColor<sp/>=<sp/>VK_BORDER_COLOR_INT_OPAQUE_BLACK;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.unnormalizedCoordinates<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.compareEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.compareOp<sp/>=<sp/>VK_COMPARE_OP_ALWAYS;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.mipmapMode<sp/>=<sp/>VK_SAMPLER_MIPMAP_MODE_LINEAR;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.mipLodBias<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.minLod<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>samplerInfo.maxLod<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateSampler(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;samplerInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;sampler)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>texture<sp/>sampler!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="class_vulkan_swapchain_manager_1a65efa17d731847cee0f6c85607f37faa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a65efa17d731847cee0f6c85607f37faa" kindref="member">VulkanSwapchainManager::RecreationCleanUp</ref>()</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a4e48a3506a6fd06444dbeeed5d50fdb4" kindref="member">DepthImageView</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyImage(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a76393f92d2691518b0ad387dced8f024" kindref="member">DepthImage</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1aefd057eddafaeadc6fdce0f5150228f0" kindref="member">DepthImageMemory</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>framebuffer<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1aac1688c5f1edc455f33391a7174478e3" kindref="member">Framebuffers</ref>)<sp/>vkDestroyFramebuffer(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>framebuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyRenderPass(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1ab3dd5f27e0862acff6bd7636db6f606b" kindref="member">RenderPass</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>.size();<sp/>i++)<sp/>vkDestroyImageView(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a5b2ce79658a0417f60b23668fd6632db" kindref="member">ImageViews</ref>[i],<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroySwapchainKHR(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1acd645defc4a72233211f8366fb8239e9" kindref="member">Swapchain</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>data<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>data.Buffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>data.Memory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>modelData<sp/>:<sp/>model.second)<sp/></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>modelData.Buffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>modelData.Memory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyDescriptorPool(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1aa16c2004dd1b2ef28666ebce88766951" kindref="member">DescriptorPool</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="class_vulkan_swapchain_manager_1aa8ce875c0b30d7706b7ecd18094c2e59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1aa8ce875c0b30d7706b7ecd18094c2e59" kindref="member">VulkanSwapchainManager::FinalCleanUp</ref>()</highlight></codeline>
<codeline lineno="689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a65efa17d731847cee0f6c85607f37faa" kindref="member">RecreationCleanUp</ref>();</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>textureData<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySampler(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>textureData.second.TextureSampler,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>textureData.second.TextureImageView,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyImage(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>textureData.second.TextureImage,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>textureData.second.TextureImageMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>descriptorLayout<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a019773dcdc0c9d6561fbcd85eea2f2eb" kindref="member">DescriptorLayoutsByShader</ref>)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/>descriptorLayout.second,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="class_vulkan_swapchain_manager_1a8e13115e202a8e3f5e67e2cfa6010bc9" refkind="member"><highlight class="normal">VkFormat<sp/><ref refid="class_vulkan_swapchain_manager_1a8e13115e202a8e3f5e67e2cfa6010bc9" kindref="member">VulkanSwapchainManager::FindSupportedFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;VkFormat&gt;&amp;<sp/>candidates,<sp/>VkImageTiling<sp/>tiling,<sp/><ref refid="_vulkan_renderer_8h_1a8f6c3cb203ed2eabe1f2093bf9c6352a" kindref="member">VkFormatFeatureFlags</ref><sp/>features)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VkFormat<sp/>format<sp/>:<sp/>candidates)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkFormatProperties<sp/>props;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkGetPhysicalDeviceFormatProperties(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1aa2b520b38ac96355a3c6f435b6519d03" kindref="member">GetPhysicalDevice</ref>(),<sp/>format,<sp/>&amp;props);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tiling<sp/>==<sp/>VK_IMAGE_TILING_LINEAR<sp/>&amp;&amp;<sp/>(props.linearTilingFeatures<sp/>&amp;<sp/>features)<sp/>==<sp/>features)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tiling<sp/>==<sp/>VK_IMAGE_TILING_OPTIMAL<sp/>&amp;&amp;<sp/>(props.optimalTilingFeatures<sp/>&amp;<sp/>features)<sp/>==<sp/>features)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>supported<sp/>format!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="class_vulkan_swapchain_manager_1a66c6909cc00edc58f87f94cb258aef96" refkind="member"><highlight class="normal">VkFormat<sp/><ref refid="class_vulkan_swapchain_manager_1a66c6909cc00edc58f87f94cb258aef96" kindref="member">VulkanSwapchainManager::FindDepthFormat</ref>()</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a8e13115e202a8e3f5e67e2cfa6010bc9" kindref="member">FindSupportedFormat</ref>({<sp/>VK_FORMAT_D32_SFLOAT,<sp/>VK_FORMAT_D32_SFLOAT_S8_UINT,<sp/>VK_FORMAT_D24_UNORM_S8_UINT<sp/>},<sp/>VK_IMAGE_TILING_OPTIMAL,<sp/>VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="class_vulkan_swapchain_manager_1acd8bb5022376987fc6e376d204458225" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1acd8bb5022376987fc6e376d204458225" kindref="member">VulkanSwapchainManager::TransitionImageLayout</ref>(VkImage_T*<sp/>image,<sp/>VkFormat<sp/>format,<sp/>VkImageLayout<sp/>oldLayout,<sp/>VkImageLayout<sp/>newLayout)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>commandBuffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1ae365fdf6e22fd07dab94a2e3e6d912ed" kindref="member">BeginSingleTimeCommands</ref>();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageMemoryBarrier<sp/>barrier{};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.oldLayout<sp/>=<sp/>oldLayout;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.newLayout<sp/>=<sp/>newLayout;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.srcQueueFamilyIndex<sp/>=<sp/>VK_QUEUE_FAMILY_IGNORED;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.dstQueueFamilyIndex<sp/>=<sp/>VK_QUEUE_FAMILY_IGNORED;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.image<sp/>=<sp/>image;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.subresourceRange.baseMipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.subresourceRange.levelCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.subresourceRange.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier.subresourceRange.layerCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.subresourceRange.aspectMask<sp/>=<sp/>VK_IMAGE_ASPECT_DEPTH_BIT;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_swapchain_manager_1ad4f23eb999d9a8f90870852fa8d97dea" kindref="member">HasStencilComponent</ref>(format))</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.subresourceRange.aspectMask<sp/>|=<sp/>VK_IMAGE_ASPECT_STENCIL_BIT;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.subresourceRange.aspectMask<sp/>=<sp/>VK_IMAGE_ASPECT_COLOR_BIT;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineStageFlags<sp/>sourceStage;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineStageFlags<sp/>destinationStage;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_UNDEFINED<sp/>&amp;&amp;<sp/>newLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.srcAccessMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.dstAccessMask<sp/>=<sp/>VK_ACCESS_TRANSFER_WRITE_BIT;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceStage<sp/>=<sp/>VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destinationStage<sp/>=<sp/>VK_PIPELINE_STAGE_TRANSFER_BIT;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL<sp/>&amp;&amp;<sp/>newLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.srcAccessMask<sp/>=<sp/>VK_ACCESS_TRANSFER_WRITE_BIT;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.dstAccessMask<sp/>=<sp/>VK_ACCESS_SHADER_READ_BIT;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceStage<sp/>=<sp/>VK_PIPELINE_STAGE_TRANSFER_BIT;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destinationStage<sp/>=<sp/>VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_UNDEFINED<sp/>&amp;&amp;<sp/>newLayout<sp/>==<sp/>VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.srcAccessMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barrier.dstAccessMask<sp/>=<sp/>VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT<sp/>|<sp/>VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourceStage<sp/>=<sp/>VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destinationStage<sp/>=<sp/>VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;unsupported<sp/>layout<sp/>transition!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdPipelineBarrier(commandBuffer,<sp/>sourceStage,<sp/>destinationStage,<sp/>0,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>1,<sp/>&amp;barrier);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a13d4e800fbbfef7726f5fdcad7ade31e" kindref="member">EndSingleTimeCommands</ref>(commandBuffer);</highlight></codeline>
<codeline lineno="797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="class_vulkan_swapchain_manager_1ad4f23eb999d9a8f90870852fa8d97dea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1ad4f23eb999d9a8f90870852fa8d97dea" kindref="member">VulkanSwapchainManager::HasStencilComponent</ref>(VkFormat<sp/>format)</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format<sp/>==<sp/>VK_FORMAT_D32_SFLOAT_S8_UINT<sp/>||<sp/>format<sp/>==<sp/>VK_FORMAT_D24_UNORM_S8_UINT;</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="class_vulkan_swapchain_manager_1ae88c46b746790210aa06147c3df1eb1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1ae88c46b746790210aa06147c3df1eb1c" kindref="member">VulkanSwapchainManager::CopyBufferToImage</ref>(VkBuffer_T*<sp/>buffer,<sp/>VkImage_T*<sp/>image,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>commandBuffer<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1ae365fdf6e22fd07dab94a2e3e6d912ed" kindref="member">BeginSingleTimeCommands</ref>();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBufferImageCopy<sp/>region{};</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>region.bufferOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>region.bufferRowLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>region.bufferImageHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageSubresource.aspectMask<sp/>=<sp/>VK_IMAGE_ASPECT_COLOR_BIT;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageSubresource.mipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageSubresource.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageSubresource.layerCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageOffset<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>region.imageExtent<sp/>=<sp/>{<sp/>width,<sp/>height,<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdCopyBufferToImage(commandBuffer,<sp/>buffer,<sp/>image,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,<sp/>1,<sp/>&amp;region);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a13d4e800fbbfef7726f5fdcad7ade31e" kindref="member">EndSingleTimeCommands</ref>(commandBuffer);</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="class_vulkan_swapchain_manager_1a0498973d310eb7ed7f3f37fad78c279e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager_1a0498973d310eb7ed7f3f37fad78c279e" kindref="member">VulkanSwapchainManager::UpdateBuffers</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentImageIndex)</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vulkanCamera<sp/>=<sp/>*<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1aa99d87eaf61dc47d7dc01f268e34cbf3" kindref="member">Camera</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>vulkanCamera.<ref refid="struct_uniform_camera_object_1aa5c1a2f791dedca49601954247d68715" kindref="member">Projection</ref>[1][1]<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>cameraData;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>[currentImageIndex].Memory,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniform_camera_object" kindref="compound">UniformCameraObject</ref>),<sp/>0,<sp/>&amp;cameraData);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(cameraData,<sp/>&amp;vulkanCamera,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_uniform_camera_object" kindref="compound">UniformCameraObject</ref>));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a07bd99f3e1316c2a5299db42bd905da1" kindref="member">CameraData</ref>[currentImageIndex].Memory);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>numberOfLightsData;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>[currentImageIndex].Memory,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>0,<sp/>&amp;numberOfLightsData);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfLights<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.size();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(numberOfLightsData,<sp/>&amp;numberOfLights,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1af7517a5155ee97425118ac63e2b7d32b" kindref="member">NumberOfLightsData</ref>[currentImageIndex].Memory);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>lightsData;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>[currentImageIndex].Memory,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>)<sp/>*<sp/>numberOfLights,<sp/>0,<sp/>&amp;lightsData);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(lightsData,<sp/>*<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.data(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>)<sp/>*<sp/>numberOfLights);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1a4568ca8f75fee05e3847e8aef63a43a2" kindref="member">LightsData</ref>[currentImageIndex].Memory);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>material<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1abe3ee66555b2588eaf21c22ffb1b005c" kindref="member">Materials</ref>)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>materialData;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>info<sp/>=<sp/>material-&gt;GetShaderVariablesInfo();</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>info.size();<sp/>i++)</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkMapMemory(Manager-&gt;GetLogicalDevice(),<sp/>MaterialMap[material][currentImageIndex][i].Memory,<sp/>0,<sp/>sizeof(FMatrix4),<sp/>0,<sp/>&amp;materialData);</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(materialData,<sp/>material,<sp/>info[i].VariableSize);</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUnmapMemory(Manager-&gt;GetLogicalDevice(),<sp/>MaterialMap[material][currentImageIndex][i].Memory);</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model<sp/>:<sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2ce69acaacdd39f32a1795770c35ac7b" kindref="member">GetRenderData</ref>()-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>modelData;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model.first][currentImageIndex].Memory,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>),<sp/>0,<sp/>&amp;modelData);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(modelData,<sp/>model.first,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>));</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_swapchain_manager_1aac741b9efcd880d77d01027c15eefa89" kindref="member">ModelMap</ref>[model.first][currentImageIndex].Memory);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867" refid="class_vulkan_swapchain_manager_1ab86ff194e02a4d2e68eef1555b3334db" refkind="member"><highlight class="normal">VkShaderStageFlagBits<sp/><ref refid="class_vulkan_swapchain_manager_1ab86ff194e02a4d2e68eef1555b3334db" kindref="member">VulkanSwapchainManager::GetVulkanShaderStageFlag</ref>(<ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4f" kindref="member">E_ShaderStage</ref><sp/>stage)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="868"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(stage)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4faf5442e5bd0e96ed07b9e48f3c5771654" kindref="member">E_ShaderStage::VERTEX_BIT</ref>:</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4fadc44a667f58337c100f51464e0f7f070" kindref="member">E_ShaderStage::TESSELLATION_CONTROL_BIT</ref>:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4fab581ea55404fe91044167ec3fa4790e0" kindref="member">E_ShaderStage::TESSELLATION_EVALUATION_BIT</ref>:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4fa4ef0a9caabe0478aad028063fe100e52" kindref="member">E_ShaderStage::GEOMETRY_BIT</ref>:</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_GEOMETRY_BIT;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4fa5cf9191e432129e1432e3d697c63a1d2" kindref="member">E_ShaderStage::FRAGMENT_BIT</ref>:</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4facf14ff46c018c252cbc951b24ce0f174" kindref="member">E_ShaderStage::COMPUTE_BIT</ref>:</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_COMPUTE_BIT;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1a0aefdb8e5fdee72495d2b6419f3a0c4fa1b88f31774becdfc8ccef062b2496f5b" kindref="member">E_ShaderStage::ALL_GRAPHICS</ref>:</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>VK_SHADER_STAGE_ALL_GRAPHICS;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890" refid="class_vulkan_swapchain_manager_1a6e4b42e7924470dc7148e559339a00db" refkind="member"><highlight class="normal">VkDescriptorType<sp/><ref refid="class_vulkan_swapchain_manager_1a6e4b42e7924470dc7148e559339a00db" kindref="member">VulkanSwapchainManager::GetVulkanDescriptorType</ref>(<ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226e" kindref="member">E_ShaderVariableType</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="891"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eaaa4fc1f642950410dd11d691fe974cca" kindref="member">E_ShaderVariableType::SAMPLER</ref>:</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_SAMPLER;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea6c27215153b819697fb1403d8bb9a05e" kindref="member">E_ShaderVariableType::COMBINED_IMAGE_SAMPLER</ref>:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea5962997ee79a425d6e827f89fc2ced78" kindref="member">E_ShaderVariableType::SAMPLED_IMAGE</ref>:</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea17a99bfdcbe59e8209f17c4da5de6ff9" kindref="member">E_ShaderVariableType::STORAGE_IMAGE</ref>:</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea30fc6e58f6c60c1e725ddfd70541e3a3" kindref="member">E_ShaderVariableType::UNIFORM_TEXEL_BUFFER</ref>:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ead9cb2eb96675c43a55a8d6e23cba4de5" kindref="member">E_ShaderVariableType::STORAGE_TEXEL_BUFFER</ref>:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea8d0be820da8f4fe5aa49e0ef3065ca29" kindref="member">E_ShaderVariableType::UNIFORM_BUFFER</ref>:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eaa486db75420308f63af20d85e2b6489d" kindref="member">E_ShaderVariableType::STORAGE_BUFFER</ref>:</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea528ccb1323427c36a890fc89894a9441" kindref="member">E_ShaderVariableType::UNIFORM_BUFFER_DYNAMIC</ref>:</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea8a9af46bf5d2c7fcdcb9096f1b7ebcbe" kindref="member">E_ShaderVariableType::STORAGE_BUFFER_DYNAMIC</ref>:</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea08ea2c247044640bd3e2d3ad238e0ac6" kindref="member">E_ShaderVariableType::INPUT_ATTACHMENT</ref>:</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea9fadc3a94070fa3ac6a6f824d1d4991c" kindref="member">E_ShaderVariableType::INLINE_UNIFORM_BLOCK_EXT</ref>:</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eafbfee44520cdd4b96bf05a8c92f3b008" kindref="member">E_ShaderVariableType::ACCELERATION_STRUCTURE_KHR</ref>:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VK_DESCRIPTOR_TYPE_MAX_ENUM;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal">}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925" refid="class_vulkan_swapchain_manager_1a095dac47c778274379064eea014ea600" refkind="member"><highlight class="normal">std::vector&lt;VkWriteDescriptorSet&gt;<sp/><ref refid="class_vulkan_swapchain_manager_1a095dac47c778274379064eea014ea600" kindref="member">VulkanSwapchainManager::CreateDescriptorWritesFromMaterial</ref>(<ref refid="class_material" kindref="compound">Material</ref>*<sp/>material,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentImage)</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;VkWriteDescriptorSet&gt;<sp/>returnVector;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variableInfos<sp/>=<sp/>material-&gt;<ref refid="class_material_1ad0498bf7f098c0ecb406039b5b83decc" kindref="member">GetShaderVariablesInfo</ref>();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>variableDatas<sp/>=<sp/>material-&gt;<ref refid="class_material_1a979f2c45e705d37185cbb22f5916bb5e" kindref="member">GetShaderVariablesData</ref>();</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVector.reserve(variableInfos.size());</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>material-&gt;<ref refid="class_material_1ad0498bf7f098c0ecb406039b5b83decc" kindref="member">GetShaderVariablesInfo</ref>().size();<sp/>i++)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(variableInfos[i].Type)</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eaaa4fc1f642950410dd11d691fe974cca" kindref="member">E_ShaderVariableType::SAMPLER</ref>:</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea6c27215153b819697fb1403d8bb9a05e" kindref="member">E_ShaderVariableType::COMBINED_IMAGE_SAMPLER</ref>:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnVector.push_back(<ref refid="class_vulkan_swapchain_manager_1a7c89e8240cc56e10f786f5a76844ce56" kindref="member">CreateCombinedImageSamplerWrite</ref>(variableInfos[i],<sp/>variableDatas[i]));</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea5962997ee79a425d6e827f89fc2ced78" kindref="member">E_ShaderVariableType::SAMPLED_IMAGE</ref>:</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea17a99bfdcbe59e8209f17c4da5de6ff9" kindref="member">E_ShaderVariableType::STORAGE_IMAGE</ref>:</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea30fc6e58f6c60c1e725ddfd70541e3a3" kindref="member">E_ShaderVariableType::UNIFORM_TEXEL_BUFFER</ref>:</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ead9cb2eb96675c43a55a8d6e23cba4de5" kindref="member">E_ShaderVariableType::STORAGE_TEXEL_BUFFER</ref>:</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea8d0be820da8f4fe5aa49e0ef3065ca29" kindref="member">E_ShaderVariableType::UNIFORM_BUFFER</ref>:</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returnVector.push_back(<ref refid="class_vulkan_swapchain_manager_1a230d765c0fb7fe1777a0bafeca1e1586" kindref="member">CreateUniformBufferWrite</ref>(material,<sp/>currentImage,<sp/>variableInfos[i],<sp/>variableDatas[i]));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eaa486db75420308f63af20d85e2b6489d" kindref="member">E_ShaderVariableType::STORAGE_BUFFER</ref>:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea528ccb1323427c36a890fc89894a9441" kindref="member">E_ShaderVariableType::UNIFORM_BUFFER_DYNAMIC</ref>:</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea8a9af46bf5d2c7fcdcb9096f1b7ebcbe" kindref="member">E_ShaderVariableType::STORAGE_BUFFER_DYNAMIC</ref>:</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea08ea2c247044640bd3e2d3ad238e0ac6" kindref="member">E_ShaderVariableType::INPUT_ATTACHMENT</ref>:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226ea9fadc3a94070fa3ac6a6f824d1d4991c" kindref="member">E_ShaderVariableType::INLINE_UNIFORM_BLOCK_EXT</ref>:</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_material_8h_1ad0905b90e69dacecbc5389b41c82226eafbfee44520cdd4b96bf05a8c92f3b008" kindref="member">E_ShaderVariableType::ACCELERATION_STRUCTURE_KHR</ref>:</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVector;</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="class_vulkan_swapchain_manager_1a7c89e8240cc56e10f786f5a76844ce56" refkind="member"><highlight class="normal">VkWriteDescriptorSet<sp/><ref refid="class_vulkan_swapchain_manager_1a7c89e8240cc56e10f786f5a76844ce56" kindref="member">VulkanSwapchainManager::CreateCombinedImageSamplerWrite</ref>(<ref refid="struct_shader_variable_info" kindref="compound">ShaderVariableInfo</ref><sp/>info,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorImageInfo*<sp/>imageInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VkDescriptorImageInfo();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo-&gt;imageLayout<sp/>=<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo-&gt;imageView<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[(<ref refid="struct_s___texture" kindref="compound">S_Texture</ref>*)data].TextureImageView;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>imageInfo-&gt;sampler<sp/>=<sp/><ref refid="class_vulkan_swapchain_manager_1ad60d8fac8797493d6c82ac4ba5a151ec" kindref="member">TextureDataMap</ref>[(<ref refid="struct_s___texture" kindref="compound">S_Texture</ref>*)data].TextureSampler;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>VkWriteDescriptorSet<sp/>descriptorWrite<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptorWrite.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptorWrite.dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptorWrite.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptorWrite.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptorWrite.pImageInfo<sp/>=<sp/>imageInfo;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>descriptorWrite;</highlight></codeline>
<codeline lineno="976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="class_vulkan_swapchain_manager_1a230d765c0fb7fe1777a0bafeca1e1586" refkind="member"><highlight class="normal">VkWriteDescriptorSet<sp/><ref refid="class_vulkan_swapchain_manager_1a230d765c0fb7fe1777a0bafeca1e1586" kindref="member">VulkanSwapchainManager::CreateUniformBufferWrite</ref>(<ref refid="class_material" kindref="compound">Material</ref>*<sp/>material,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentImage,<sp/><ref refid="struct_shader_variable_info" kindref="compound">ShaderVariableInfo</ref><sp/>info,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)</highlight></codeline>
<codeline lineno="979"><highlight class="normal">{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material][currentImage].push_back(<ref refid="struct_s___buffer_data" kindref="compound">S_BufferData</ref>());</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>test<sp/>=<sp/>&amp;<ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material][currentImage].back();</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_swapchain_manager_1a00c82010251f25a3b7260cb1b2b895c2" kindref="member">Manager</ref>-&gt;<ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(info.<ref refid="struct_shader_variable_info_1adc2d9b93e03528818f249b79ad540638" kindref="member">VariableSize</ref>,<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/>(<ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material][currentImage].back()).Buffer,<sp/>(<ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material][currentImage].back()).Memory);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorBufferInfo*<sp/>uniformBufferInfo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VkDescriptorBufferInfo();</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferInfo-&gt;buffer<sp/>=<sp/>(<ref refid="class_vulkan_swapchain_manager_1a864db93bf880909b5150dc139d627ad2" kindref="member">MaterialMap</ref>[material][currentImage].back()).Buffer;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferInfo-&gt;offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferInfo-&gt;range<sp/>=<sp/>info.<ref refid="struct_shader_variable_info_1adc2d9b93e03528818f249b79ad540638" kindref="member">VariableSize</ref>;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>VkWriteDescriptorSet<sp/>uniformBufferWrite<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferWrite.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferWrite.dstArrayElement<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferWrite.descriptorType<sp/>=<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferWrite.descriptorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>uniformBufferWrite.pBufferInfo<sp/>=<sp/>uniformBufferInfo;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uniformBufferWrite;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanSwapchainManager.cpp"/>
  </compounddef>
</doxygen>
