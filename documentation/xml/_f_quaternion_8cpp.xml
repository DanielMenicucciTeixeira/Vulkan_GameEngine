<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_f_quaternion_8cpp" kind="file" language="C++">
    <compoundname>FQuaternion.cpp</compoundname>
    <includes refid="_f_quaternion_8h" local="yes">FQuaternion.h</includes>
    <includes refid="_f_matrix4_8h" local="yes">FMatrix4.h</includes>
    <includes refid="_f_vector3_8h" local="yes">FVector3.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="4">
        <label>FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FQuaternion.cpp</label>
        <link refid="_f_quaternion_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>FQuaternion.h</label>
        <link refid="_f_quaternion_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="3">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_f_quaternion_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FQuaternion.cpp" line="6" column="9" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FQuaternion.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_quaternion_8h" kindref="compound">FQuaternion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_matrix4_8h" kindref="compound">FMatrix4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_vector3_8h" kindref="compound">FVector3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="_f_quaternion_8cpp_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_f_quaternion_1a713ce1647047928cedc830536607b50f" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion_1a3761bbb5d665d77d9ae462f0553a5b42" kindref="member">FQuaternion::FQuaternion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>axis,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRotation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inRadians)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRotation)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vector;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inRadians)<sp/>angle<sp/>*=<sp/>M_PI<sp/>/<sp/>180;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector<sp/>=<sp/>axis<sp/>*<sp/>(sinf(angle<sp/>*<sp/>0.5f));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/>cosf(angle<sp/>*<sp/>0.5f);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/>vector.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/>vector.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/>vector.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/>axis.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/>axis.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/>axis.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/>angle;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_f_quaternion_1a6926a91b073bb62ceccd76f466b9a24b" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion_1a3761bbb5d665d77d9ae462f0553a5b42" kindref="member">FQuaternion::FQuaternion</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>euler,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inRadians)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vector;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inRadians)<sp/>vector<sp/>=<sp/>euler<sp/>*<sp/>M_PI<sp/>/<sp/>180;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>vector<sp/>=<sp/>euler;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abbreviations<sp/>for<sp/>the<sp/>various<sp/>angular<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cy<sp/>=<sp/>cos(vector.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sy<sp/>=<sp/>sin(vector.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cp<sp/>=<sp/>cos(vector.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sp<sp/>=<sp/>sin(vector.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cr<sp/>=<sp/>cos(vector.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sr<sp/>=<sp/>sin(vector.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>*<sp/>0.5);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/>cr<sp/>*<sp/>cp<sp/>*<sp/>cy<sp/>+<sp/>sr<sp/>*<sp/>sp<sp/>*<sp/>sy;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/>sr<sp/>*<sp/>cp<sp/>*<sp/>cy<sp/>-<sp/>cr<sp/>*<sp/>sp<sp/>*<sp/>sy;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/>cr<sp/>*<sp/>sp<sp/>*<sp/>cy<sp/>+<sp/>sr<sp/>*<sp/>cp<sp/>*<sp/>sy;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/>cr<sp/>*<sp/>cp<sp/>*<sp/>sy<sp/>-<sp/>sr<sp/>*<sp/>sp<sp/>*<sp/>cy;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_f_quaternion_1afaf2b364534bed4d384643c9708339ce" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/><ref refid="class_f_quaternion_1afaf2b364534bed4d384643c9708339ce" kindref="member">FQuaternion::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>quaternion)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vector0<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vector1<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(quaternion.<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/>quaternion.<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/>quaternion.<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>vectorFinal<sp/>=<sp/>(vector1<sp/>*<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>)<sp/>+<sp/>(vector0<sp/>*<sp/>quaternion.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>)<sp/>+<sp/>(vector0.<ref refid="class_f_vector3_1a639d413c4693b112a15c43cb27aebf71" kindref="member">CrossProduct</ref>(vector1));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar<sp/>=<sp/>(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/>quaternion.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>)<sp/>-<sp/>(vector0<sp/>*<sp/>vector1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1a3761bbb5d665d77d9ae462f0553a5b42" kindref="member">FQuaternion</ref>(vectorFinal,<sp/>scalar,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_f_quaternion_1af27ca273fe70cd5ca69e4e734a50f794" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/><ref refid="class_f_quaternion_1afaf2b364534bed4d384643c9708339ce" kindref="member">FQuaternion::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>scalar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="63"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>w<sp/>=<sp/>cosf(acosf(W)<sp/>*<sp/>scalar);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1a3761bbb5d665d77d9ae462f0553a5b42" kindref="member">FQuaternion</ref>(<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>*<sp/>scalar,<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>*<sp/>scalar,<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>*<sp/>scalar,<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/>scalar);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_f_quaternion_1af0a0c5e331436b8dcee8501c08215ad2" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/><ref refid="class_f_quaternion_1af0a0c5e331436b8dcee8501c08215ad2" kindref="member">FQuaternion::MultiplyRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>scalar)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="69"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>cosf(acosf(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>)<sp/>*<sp/>scalar);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1a3761bbb5d665d77d9ae462f0553a5b42" kindref="member">FQuaternion</ref>(<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>,<sp/>w).GetNormal();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_f_quaternion_1ae55da3b1365b30cb218a2c9a71c4a756" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1ae55da3b1365b30cb218a2c9a71c4a756" kindref="member">FQuaternion::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>quaternion)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/>quaternion.<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/>quaternion.<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/>quaternion.<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/>quaternion.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_f_quaternion_1ae6f95ca3871f6179cb8b41e1905366c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1ae6f95ca3871f6179cb8b41e1905366c9" kindref="member">FQuaternion::Invert</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_quaternion_1aa87f15a6bcc85cdd5b689dc7a2669b01" kindref="member">Conjugate</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>=<sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>/<sp/><ref refid="class_f_vector4_1a4ff174c7c7f43dde8afd399f24342c07" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>/<sp/><ref refid="class_f_vector4_1a4ff174c7c7f43dde8afd399f24342c07" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>=<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>/<sp/><ref refid="class_f_vector4_1a4ff174c7c7f43dde8afd399f24342c07" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>=<sp/><ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>/<sp/><ref refid="class_f_vector4_1a4ff174c7c7f43dde8afd399f24342c07" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_f_quaternion_1a0c69996b44cc9a334cc1fdb76d78977f" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_f_quaternion_1a0c69996b44cc9a334cc1fdb76d78977f" kindref="member">FQuaternion::GetEulerAngle</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>atan2(2<sp/>*<sp/>(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>+<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>*<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>),<sp/>1<sp/>-<sp/>2<sp/>*<sp/>(pow(<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/>2)<sp/>+<sp/>pow(<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/>2)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>asin(2<sp/>*<sp/>(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>-<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>*<sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>atan2(2<sp/>*<sp/>(<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/><ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>+<sp/><ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>*<sp/><ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>),<sp/>1<sp/>-<sp/>2<sp/>*<sp/>(pow(<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/>2)<sp/>+<sp/>pow(<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>,<sp/>2)));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(a,<sp/>b,<sp/>c);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_f_quaternion_1aa93d031afd2297f1179d44b2d9c81005" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_f_quaternion_1aa93d031afd2297f1179d44b2d9c81005" kindref="member">FQuaternion::GetRotatedVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>quaternion)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector.<ref refid="class_f_vector3_1a245640b9a3440d2f24384f252ec80a59" kindref="member">GetRotatedVector</ref>(quaternion);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_f_quaternion_1af115e8afca1fb0257876881645c41609" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/><ref refid="class_f_quaternion_1af115e8afca1fb0257876881645c41609" kindref="member">FQuaternion::SLerp</ref>(<ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/>quaternion0,<sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/>quaternion1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>unit<sp/>quaternions<sp/>are<sp/>valid<sp/>rotations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>to<sp/>avoid<sp/>undefined<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>quaternion0.<ref refid="class_f_vector4_1a4a1b0daae57b363a41ebd26bf21e3345" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>quaternion1.<ref refid="class_f_vector4_1a4a1b0daae57b363a41ebd26bf21e3345" kindref="member">Normalize</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>cosine<sp/>of<sp/>the<sp/>angle<sp/>between<sp/>the<sp/>two<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/><ref refid="class_f_quaternion_1a304807bc26642438e6492d334ca4a6e9" kindref="member">DotProduct</ref>(quaternion0,<sp/>quaternion1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>dot<sp/>product<sp/>is<sp/>negative,<sp/>slerp<sp/>won&apos;t<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>shorter<sp/>path.<sp/>Note<sp/>that<sp/>v1<sp/>and<sp/>-v1<sp/>are<sp/>equivalent<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>negation<sp/>is<sp/>applied<sp/>to<sp/>all<sp/>four<sp/>components.<sp/>Fix<sp/>by<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reversing<sp/>one<sp/>quaternion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot<sp/>&lt;<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quaternion1<sp/>=<sp/>quaternion1<sp/>*<sp/>-1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot<sp/>=<sp/>-dot;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>DOT_THRESHOLD<sp/>=<sp/>0.9995;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dot<sp/>&gt;<sp/>DOT_THRESHOLD)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>inputs<sp/>are<sp/>too<sp/>close<sp/>for<sp/>comfort,<sp/>linearly<sp/>interpolate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>normalize<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/>result<sp/>=<sp/>quaternion0<sp/>+<sp/>(quaternion1<sp/>-<sp/>quaternion0)<sp/>*<sp/>deltaTime;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>dot<sp/>is<sp/>in<sp/>range<sp/>[0,<sp/>DOT_THRESHOLD],<sp/>acos<sp/>is<sp/>safe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta0<sp/>=<sp/>acos(dot);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>theta_0<sp/>=<sp/>angle<sp/>between<sp/>input<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/>theta0<sp/>*<sp/>deltaTime;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>theta<sp/>=<sp/>angle<sp/>between<sp/>v0<sp/>and<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinTheta<sp/>=<sp/>sin(theta);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>this<sp/>value<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sinTheta0<sp/>=<sp/>sin(theta0);<sp/></highlight><highlight class="comment">//<sp/>compute<sp/>this<sp/>value<sp/>only<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar0<sp/>=<sp/>cos(theta)<sp/>-<sp/>dot<sp/>*<sp/>sinTheta<sp/>/<sp/>sinTheta0;<sp/><sp/></highlight><highlight class="comment">//<sp/>==<sp/>sin(theta_0<sp/>-<sp/>theta)<sp/>/<sp/>sin(theta_0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scalar1<sp/>=<sp/>sinTheta<sp/>/<sp/>sinTheta0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref><sp/>result<sp/>=<sp/>(quaternion0<sp/>*<sp/>scalar0)<sp/>+<sp/>(quaternion1<sp/>*<sp/>scalar1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((quaternion0<sp/>*<sp/>scalar0)<sp/>+<sp/>(quaternion1<sp/>*<sp/>scalar1));</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_f_quaternion_1a304807bc26642438e6492d334ca4a6e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1a304807bc26642438e6492d334ca4a6e9" kindref="member">FQuaternion::DotProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>quaternion0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>quaternion1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>quaternion0.<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref><sp/>*<sp/>quaternion1.<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>quaternion0.<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref><sp/>*<sp/>quaternion1.<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>quaternion0.<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref><sp/>*<sp/>quaternion1.<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>quaternion0.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref><sp/>*<sp/>quaternion1.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>y<sp/>+<sp/>z<sp/>+<sp/>w;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_f_quaternion_1abc2667c7824fe333dfe20723e723915f" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_f_quaternion_1abc2667c7824fe333dfe20723e723915f" kindref="member">FQuaternion::GetUpVector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1aa93d031afd2297f1179d44b2d9c81005" kindref="member">GetRotatedVector</ref>(<ref refid="class_f_vector3" kindref="compound">FVector3</ref>(0.0f,<sp/>1.0f,<sp/>0.0f),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="class_f_vector3_1a858673b76007df4d6c4c416d9dba31a7" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_f_quaternion_1ab7ff0894e5a730df032299ca7c619bbc" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_f_quaternion_1ab7ff0894e5a730df032299ca7c619bbc" kindref="member">FQuaternion::GetForwardVector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1aa93d031afd2297f1179d44b2d9c81005" kindref="member">GetRotatedVector</ref>(<ref refid="class_f_vector3" kindref="compound">FVector3</ref>(0.0f,<sp/>0.0f,<sp/>-1.0f),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="class_f_vector3_1a858673b76007df4d6c4c416d9dba31a7" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_f_quaternion_1add03b08051448814911ba91daaab5a12" refkind="member"><highlight class="normal"><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/><ref refid="class_f_quaternion_1add03b08051448814911ba91daaab5a12" kindref="member">FQuaternion::GetRightVector</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="165"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion_1aa93d031afd2297f1179d44b2d9c81005" kindref="member">GetRotatedVector</ref>(<ref refid="class_f_vector3" kindref="compound">FVector3</ref>(1.0f,<sp/>0.0f,<sp/>0.0f),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="class_f_vector3_1a858673b76007df4d6c4c416d9dba31a7" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_f_quaternion_1a3e837db732462e4b357c43643eadc7bd" refkind="member"><highlight class="normal"><ref refid="class_f_quaternion_1a3e837db732462e4b357c43643eadc7bd" kindref="member">FQuaternion::~FQuaternion</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FQuaternion.cpp"/>
  </compounddef>
</doxygen>
