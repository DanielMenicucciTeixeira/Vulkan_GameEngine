<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_event_listener_8cpp" kind="file" language="C++">
    <compoundname>EventListener.cpp</compoundname>
    <includes refid="_event_listener_8h" local="yes">EventListener.h</includes>
    <includes refid="_core_engine_8h" local="yes">../Core/CoreEngine.h</includes>
    <includes refid="_object_8h" local="yes">../Objects/Object.h</includes>
    <includes refid="_renderer_8h" local="yes">../Renderers/Renderer.h</includes>
    <includes refid="_level_graph_8h" local="yes">../Core/LevelGraph.h</includes>
    <includes refid="_mouse_event_handler_8h" local="yes">MouseEventHandler.h</includes>
    <includes refid="_debug_logger_8h" local="yes">../Core/DebugLogger.h</includes>
    <includes local="no">SDL.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="12">
        <label>Clock.h</label>
        <link refid="_clock_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../Core/CoreEngine.h</label>
        <link refid="_core_engine_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Core/DebugLogger.h</label>
        <link refid="_debug_logger_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>GameInterface.h</label>
        <link refid="_game_interface_8h"/>
      </node>
      <node id="17">
        <label>../Core/LevelGraph.h</label>
        <link refid="_level_graph_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Window.h</label>
        <link refid="_window_8h"/>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Event/EventListener.cpp</label>
        <link refid="_event_listener_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EventListener.h</label>
        <link refid="_event_listener_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>MouseEventHandler.h</label>
        <link refid="_mouse_event_handler_8h"/>
      </node>
      <node id="18">
        <label>../Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="19">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="15">
        <label>../Objects/Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Renderers/Materials/Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Renderers/RenderObject.h</label>
        <link refid="_render_object_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../Renderers/Renderer.h</label>
        <link refid="_renderer_8h"/>
      </node>
      <node id="22">
        <label>UniformBufferObject.h</label>
        <link refid="_uniform_buffer_object_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Vertex.h</label>
        <link refid="_vertex_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>SDL.h</label>
      </node>
      <node id="26">
        <label>SDL_image.h</label>
      </node>
      <node id="13">
        <label>chrono</label>
      </node>
      <node id="14">
        <label>cstdlib</label>
      </node>
      <node id="3">
        <label>map</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="5">
        <label>set</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_event_listener_8h" kindref="compound">EventListener.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Core/CoreEngine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Objects/Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Renderers/Renderer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Core/LevelGraph.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mouse_event_handler_8h" kindref="compound">MouseEventHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Core/DebugLogger.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">std::unordered_map&lt;inputKey,<sp/>std::set&lt;eventName_t&gt;,<sp/><ref refid="struct_event_listener_1_1_h_a_s_h___input_key" kindref="compound">EventListener::HASH_InputKey</ref>&gt;<sp/><ref refid="class_event_listener_1ad5e3f2b22fab8bd29ff4e866c2412719" kindref="member">EventListener::EventsByInput</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">std::unordered_map&lt;inputKey,<sp/>functionMap_t,<sp/>EventListener::HASH_InputKey&gt;<sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">EventListener::InputMap</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">std::unordered_map&lt;eventName_t,<sp/>std::set&lt;inputFunction_t&gt;&gt;<sp/><ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventListener::EventMap</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="_event_listener_8h_1ae3976bf44585a1c412813af465a11870" kindref="member">functionMap_t</ref><sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">EventListener::FunctionMap</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_event_listener_1af84ee9b8c64d1f2773ab77ab6e45f7b1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1af84ee9b8c64d1f2773ab77ab6e45f7b1" kindref="member">EventListener::HandleEvents</ref>()</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Event<sp/>event;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/>key;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(SDL_PollEvent(&amp;event))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.first<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.type;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>event<sp/>is<sp/>keyboard<sp/>or<sp/>button<sp/>realted,<sp/>set<sp/>key.second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(key.first)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_CONTROLLERBUTTONUP:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_CONTROLLERBUTTONDOWN:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.second<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.cbutton.button;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_KEYUP:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_KEYDOWN:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.second<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.key.keysym.sym;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEBUTTONUP:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEBUTTONDOWN:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.second<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.button.button;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEMOTION:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SDL_MOUSEWHEEL:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mouse_event_handler_1a208ac80c0a518cd284c5cb7e7840c593" kindref="member">MouseEventHandler::UpdateCursorPosition</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key.second<sp/>=<sp/>SDLK_UNKNOWN;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Then<sp/>find<sp/>the<sp/>function<sp/>in<sp/>the<sp/>map<sp/>using<sp/>the<sp/>event<sp/>type<sp/>and<sp/>keycode<sp/>as<sp/>directions,<sp/>if<sp/>it<sp/>exists,<sp/>call<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1a2dae0030a768953cb767502c2886bc41" kindref="member">CallFunctions</ref>(key,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_event_listener_1a2dae0030a768953cb767502c2886bc41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a2dae0030a768953cb767502c2886bc41" kindref="member">EventListener::CallFunctions</ref>(<ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/>key,<sp/>SDL_Event*<sp/>event)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>Event<sp/>:<sp/><ref refid="class_event_listener_1ad5e3f2b22fab8bd29ff4e866c2412719" kindref="member">EventsByInput</ref>[key])</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>function<sp/>:<sp/><ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>[Event])</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>:<sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>[function])<sp/>function(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>event);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>function<sp/>:<sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key])</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>:<sp/>function.second)<sp/>function.first(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>event);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_event_listener_1a93bd6b80837ecd9ce4a49740b798010a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a93bd6b80837ecd9ce4a49740b798010a" kindref="member">EventListener::AddEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>event)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>.count(event))<sp/><ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>[event]<sp/>=<sp/>std::set&lt;inputFunction_t&gt;();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_event_listener_1aa8ee53f7c682c9033f2d2b9825f5a74b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1aa8ee53f7c682c9033f2d2b9825f5a74b" kindref="member">EventListener::AddInputToEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>event,<sp/><ref refid="_core_engine_8h_1a44a759a76b9296235bc038dde3e596eb" kindref="member">sdlEventType</ref><sp/>type,<sp/><ref refid="_core_engine_8h_1a2a74f059a0b6495a0e40890a4a4d1bab" kindref="member">sdlKeycode</ref><sp/>keyCode)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>.count(event))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>event<sp/>found<sp/>with<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(event)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event/EventListener.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/>key(type,<sp/>keyCode);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1ad5e3f2b22fab8bd29ff4e866c2412719" kindref="member">EventsByInput</ref>.count(key))<sp/><ref refid="class_event_listener_1ad5e3f2b22fab8bd29ff4e866c2412719" kindref="member">EventsByInput</ref>[key]<sp/>=<sp/>std::set&lt;eventName_t&gt;();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1ad5e3f2b22fab8bd29ff4e866c2412719" kindref="member">EventsByInput</ref>[key].insert(event);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_event_listener_1a50cfc2e20cbdec06fdfeabfdc3f065c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a50cfc2e20cbdec06fdfeabfdc3f065c7" kindref="member">EventListener::AddObjectToFunctionMap</ref>(<ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!function)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>function<sp/>in<sp/>EventListener::AddObjectToFunctionMap&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event/EventListener.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>.count(function))<sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>[function]<sp/>=<sp/>std::set&lt;O_Object*&gt;();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>[function].insert(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_event_listener_1afa94d36981ed930f989245c4b9e22591" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1afa94d36981ed930f989245c4b9e22591" kindref="member">EventListener::RemoveObjectToFunctionMap</ref>(<ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>||<sp/>!function<sp/>||<sp/>!!<ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>.count(function))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>[function].erase(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_event_listener_1a893b021427255b4318a38fde5b417c39" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a893b021427255b4318a38fde5b417c39" kindref="member">EventListener::Initialize</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_mouse_event_handler_1af91d761ede2e286b09c99198aa66905b" kindref="member">MouseEventHandler::Initialize</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="class_event_listener_1a7cc493c3e3df36d14e33504d8a92c898" refkind="member"><highlight class="normal"><ref refid="class_event_listener_1a7cc493c3e3df36d14e33504d8a92c898" kindref="member">EventListener::~EventListener</ref>()</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_event_listener_1ab893672ba39106e8d4ca6773ecb06df2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1ab893672ba39106e8d4ca6773ecb06df2" kindref="member">EventListener::AddFunctionByInput</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="_core_engine_8h_1a44a759a76b9296235bc038dde3e596eb" kindref="member">sdlEventType</ref><sp/>type,<sp/><ref refid="_core_engine_8h_1a2a74f059a0b6495a0e40890a4a4d1bab" kindref="member">sdlKeycode</ref><sp/>keyCode)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!function)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>function,<sp/>no<sp/>function<sp/>added!&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event/EventListener.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/>key(type,<sp/>keyCode);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>.count(key))<sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key]<sp/>=<sp/><ref refid="_event_listener_8h_1ae3976bf44585a1c412813af465a11870" kindref="member">functionMap_t</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key].count(function))<sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key][function]<sp/>=<sp/>std::set&lt;O_Object*&gt;();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key][function].insert(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_event_listener_1a545dbeb562359503c8aecd503dd63aa9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a545dbeb562359503c8aecd503dd63aa9" kindref="member">EventListener::RemoveObjectFromInput</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="_core_engine_8h_1a44a759a76b9296235bc038dde3e596eb" kindref="member">sdlEventType</ref><sp/>type,<sp/><ref refid="_core_engine_8h_1a2a74f059a0b6495a0e40890a4a4d1bab" kindref="member">sdlKeycode</ref><sp/>keyCode)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!function<sp/>||<sp/>!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/>key(type,<sp/>keyCode);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>.count(key)<sp/>||<sp/>!<ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key].count(function))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a9f6e6e0ed0cc53b4693ab1bf7aa16f3d" kindref="member">InputMap</ref>[key][function].erase(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_event_listener_1a9c753c85c8779ed5d74a0d193bfc7c16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a9c753c85c8779ed5d74a0d193bfc7c16" kindref="member">EventListener::AddFunctionByEvent</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="_event_listener_8h_1a63507a8c22f83ddb013486c1cb21d307" kindref="member">eventName_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>.count(event))</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;Undefined<sp/>Event<sp/>in<sp/>EventListener::AddFunctionByEvent&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Event/EventListener.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1abb24783768508c386f202b11c7b0097b" kindref="member">EventMap</ref>[event].insert(function);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a50cfc2e20cbdec06fdfeabfdc3f065c7" kindref="member">AddObjectToFunctionMap</ref>(function,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_event_listener_1a568e9cefb5425bfd150040f1916027b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_event_listener_1a568e9cefb5425bfd150040f1916027b7" kindref="member">EventListener::RemoveFunctionFromEvent</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/><ref refid="_event_listener_8h_1a7a4c7f253d52a2c4c7682a7b8393c320" kindref="member">inputFunction_t</ref><sp/>function,<sp/><ref refid="_event_listener_8h_1a63507a8c22f83ddb013486c1cb21d307" kindref="member">eventName_t</ref><sp/>event)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>||<sp/>!function<sp/>||<sp/>!<ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>.count(function))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_listener_1a624151af6147d74b05b4ea6dbd64a5dc" kindref="member">FunctionMap</ref>[function].erase(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="struct_event_listener_1_1_h_a_s_h___input_key_1ae73ea14f342d562191a7e6f8d458e9e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_event_listener_1_1_h_a_s_h___input_key_1ae73ea14f342d562191a7e6f8d458e9e7" kindref="member">EventListener::HASH_InputKey::operator()</ref>(<ref refid="_event_listener_8h_1a6afa489c7c562f0dafb3015ba25be92b" kindref="member">inputKey</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="169"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(size_t(key.first)<sp/>&lt;&lt;<sp/>32)<sp/>+<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">(key.second);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>*=<sp/>1231231557ull;<sp/></highlight><highlight class="comment">//<sp/>&quot;random&quot;<sp/>uneven<sp/>integer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>^=<sp/>(result<sp/>&gt;&gt;<sp/>32);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Event/EventListener.cpp"/>
  </compounddef>
</doxygen>
