<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_i_vector2_8cpp" kind="file" language="C++">
    <compoundname>IVector2.cpp</compoundname>
    <includes refid="_i_vector2_8h" local="yes">IVector2.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector2.cpp</label>
        <link refid="_i_vector2_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IVector2.h</label>
        <link refid="_i_vector2_8h"/>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_i_vector2_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector2.cpp" line="2" column="10" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector2.cpp" bodystart="2" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_vector2_8h" kindref="compound">IVector2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2" refid="_i_vector2_8cpp_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//Constructor<sp/>using<sp/>initial<sp/>values<sp/>for<sp/>each<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_i_vector2_1ac7e4c0686b5d7596f810d0254bd93ad9" refkind="member"><highlight class="normal"><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2::IVector2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//Constructor<sp/>initializing<sp/>all<sp/>components<sp/>to<sp/>a<sp/>single<sp/>int<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_i_vector2_1a9bb54016e1636f8859d019118134130e" refkind="member"><highlight class="normal"><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2::IVector2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_i_vector2_1a9bb97b0e7302f4cb4f3e65bd11243edf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2::IVector2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_i_vector2_1a0f08e36aee8b9d13ed885af78eabce24" refkind="member"><highlight class="normal"><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2::IVector2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[2])</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//Default<sp/>Constructor,<sp/>initializes<sp/>all<sp/>values<sp/>to<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" refkind="member"><highlight class="normal"><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2::IVector2</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_i_vector2_1aebc08957b6797774bc05434476b66a0f" refkind="member"><highlight class="normal"><ref refid="class_i_vector2_1aebc08957b6797774bc05434476b66a0f" kindref="member">IVector2::~IVector2</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;+&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>plus<sp/>vector<sp/>addition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_i_vector2_1ad96a6ad9d97f96eda50da99543652ad0" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1ad96a6ad9d97f96eda50da99543652ad0" kindref="member">IVector2::operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="51"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>result;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>+<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>+<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;+=&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>plus<sp/>vector<sp/>addition<sp/>changing<sp/>the<sp/>current<sp/>vector<sp/>to<sp/>equal<sp/>to<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_i_vector2_1a6604e6db9debd817db24dc8a0bad6b36" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a6604e6db9debd817db24dc8a0bad6b36" kindref="member">IVector2::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>+=<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>+=<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;-=&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>minus<sp/>vector<sp/>subtraction.<sp/>changing<sp/>the<sp/>current<sp/>vector<sp/>to<sp/>equal<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_i_vector2_1a5fdcea55aa059a7d3a1806b7899b4c22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a5fdcea55aa059a7d3a1806b7899b4c22" kindref="member">IVector2::operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>-=<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>-=<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_i_vector2_1a309650f1fceb03ede04f3f8a617cf081" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a309650f1fceb03ede04f3f8a617cf081" kindref="member">IVector2::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="75"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>==<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>&amp;&amp;<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>==<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;-&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>minus<sp/>vector<sp/>subtraction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_i_vector2_1a445f9b639ecd83129b760d69245d01c4" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1a445f9b639ecd83129b760d69245d01c4" kindref="member">IVector2::operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="81"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>Result;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>Result.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>-<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>Result.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>-<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;*&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>times<sp/>scalar<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_i_vector2_1a6ff3a9691d266844072b8cbefc7a3204" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1a6ff3a9691d266844072b8cbefc7a3204" kindref="member">IVector2::operator*</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplier)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="93"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2</ref>(<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/>multiplier,<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/>multiplier);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;/&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>divided<sp/>by<sp/>scalar<sp/>division.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_i_vector2_1a3781ed5b6591855650136310a86e144d" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1a3781ed5b6591855650136310a86e144d" kindref="member">IVector2::operator/</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divisor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="99"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2</ref>(<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>/<sp/>divisor,<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>/<sp/>divisor);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;*&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>times<sp/>vector<sp/>dot<sp/>product.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_i_vector2_1a5dca29dfb34aa10ba05a9762207273a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a6ff3a9691d266844072b8cbefc7a3204" kindref="member">IVector2::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>+<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;=&quot;<sp/>operator,<sp/>makes<sp/>each<sp/>component<sp/>of<sp/>the<sp/>vector<sp/>equal<sp/>to<sp/>the<sp/>equivalent<sp/>component<sp/>of<sp/>a<sp/>given<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_i_vector2_1a70bf00e7206d580aeee6351a144c2a5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a70bf00e7206d580aeee6351a144c2a5a" kindref="member">IVector2::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_i_vector2_1a0c64401a3ae1ed5ec48fa4475fc30ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a70bf00e7206d580aeee6351a144c2a5a" kindref="member">IVector2::operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[3])</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>vector<sp/>(or<sp/>vector&apos;s<sp/>scalar<sp/>lenght)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">IVector2::Length</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="126"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>+<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>angle<sp/>between<sp/>this<sp/>vector<sp/>and<sp/>another<sp/>given<sp/>vector<sp/>in<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_i_vector2_1a68bbf7660e7394cdeac84836f02db2a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a68bbf7660e7394cdeac84836f02db2a5" kindref="member">IVector2::GetAngle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inRadians)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inRadians)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>vector)<sp/>/<sp/>(<ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>()<sp/>*<sp/>vector.<ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>()));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>vector)<sp/>/<sp/>(<ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>()<sp/>*<sp/>vector.<ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>()))<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>Cross<sp/>product<sp/>of<sp/>this<sp/>vector<sp/>and<sp/>another<sp/>given<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_i_vector2_1a81c4f39a3150cf395a97c1fac6948def" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1a81c4f39a3150cf395a97c1fac6948def" kindref="member">IVector2::CrossProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a5398df9d1d74a715e29bdf87d43202e0" kindref="member">IVector2</ref>(<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/>vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>-<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/>vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//Gets<sp/>the<sp/>normalized<sp/>form<sp/>of<sp/>this<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_i_vector2_1adc94bfc5a8e6f6c2a10ea39adb91693d" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1adc94bfc5a8e6f6c2a10ea39adb91693d" kindref="member">IVector2::GetNormal</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="151"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/><ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//Divides<sp/>the<sp/>vector<sp/>by<sp/>its<sp/>Magnitude<sp/>to<sp/>get<sp/>the<sp/>normalized<sp/>unit<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_i_vector2_1aa913abbb3516a3abf76574e890119094" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1aa913abbb3516a3abf76574e890119094" kindref="member">IVector2::Normalize</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/><ref refid="class_i_vector2_1a768d547e0c64e5271fb66d5e8958f3ed" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_i_vector2_1a35cacc594655edc204daf4b0ce7b44b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a35cacc594655edc204daf4b0ce7b44b3" kindref="member">IVector2::Rotate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRadian)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isRadian)<sp/>angle<sp/>*=<sp/>M_PI<sp/>/<sp/>180.0f;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/>cos(angle)<sp/>-<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/>sin(angle);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>*<sp/>sin(angle)<sp/>+<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>*<sp/>cos(angle);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_i_vector2_1a021cb22bfc8b102abb03fb2e2ea90580" refkind="member"><highlight class="normal"><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/><ref refid="class_i_vector2_1a021cb22bfc8b102abb03fb2e2ea90580" kindref="member">IVector2::GetVectorByAngle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRadian)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>returnVector(0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVector.<ref refid="class_i_vector2_1a35cacc594655edc204daf4b0ce7b44b3" kindref="member">Rotate</ref>(angle,<sp/>isRadian);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVector.<ref refid="class_i_vector2_1adc94bfc5a8e6f6c2a10ea39adb91693d" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_i_vector2_1a8ece09a9f611fbdb7edaafde7b667bcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a8ece09a9f611fbdb7edaafde7b667bcc" kindref="member">IVector2::GetDistance</ref>(<ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>-<sp/>vector).Length();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_i_vector2_1a12a0c419c5d6033aecb2ecf8efae3aba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1a8ece09a9f611fbdb7edaafde7b667bcc" kindref="member">IVector2::GetDistance</ref>(<ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>vector1,<sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref><sp/>vector2)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector1.<ref refid="class_i_vector2_1a8ece09a9f611fbdb7edaafde7b667bcc" kindref="member">GetDistance</ref>(vector2);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_i_vector2_1ab556bced7256e11eee9e1e9c68169462" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2_1ab556bced7256e11eee9e1e9c68169462" kindref="member">IVector2::Print</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;[%i,\t%i]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>,<sp/><ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="struct_h_a_s_h___i_vector2_1ac09f2f4defff0ba342d2cb083007c138" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_h_a_s_h___i_vector2_1ac09f2f4defff0ba342d2cb083007c138" kindref="member">HASH_IVector2::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector2" kindref="compound">IVector2</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="194"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>vectorX<sp/>=<sp/>std::hash&lt;int&gt;()(vector.<ref refid="class_i_vector2_1ad7a8142d65cc58bf4da9dd10ad8d9845" kindref="member">X</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>vectorY<sp/>=<sp/>std::hash&lt;int&gt;()(vector.<ref refid="class_i_vector2_1a55c7ce04311435f90055b7d0bcb8e52a" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vectorX<sp/>^<sp/>vectorY;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector2.cpp"/>
  </compounddef>
</doxygen>
