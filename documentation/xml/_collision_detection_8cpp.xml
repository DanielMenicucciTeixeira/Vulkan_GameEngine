<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_collision_detection_8cpp" kind="file" language="C++">
    <compoundname>CollisionDetection.cpp</compoundname>
    <includes refid="_collision_detection_8h" local="yes">CollisionDetection.h</includes>
    <includes refid="_box_bounds_8h" local="yes">Geometry/BoxBounds.h</includes>
    <includes refid="_box_8h" local="yes">Geometry/Box.h</includes>
    <includes refid="_sphere_8h" local="yes">Geometry/Sphere.h</includes>
    <includes refid="_ray_8h" local="yes">Geometry/Ray.h</includes>
    <includes refid="_camera_component_8h" local="yes">Objects/Components/CameraComponent.h</includes>
    <includes refid="_level_graph_8h" local="yes">LevelGraph.h</includes>
    <incdepgraph>
      <node id="19">
        <label>LevelGraph.h</label>
        <link refid="_level_graph_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Geometry/Box.h</label>
        <link refid="_box_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Geometry/BoxBounds.h</label>
        <link refid="_box_bounds_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Geometry/Ray.h</label>
        <link refid="_ray_8h"/>
      </node>
      <node id="11">
        <label>Geometry/Sphere.h</label>
        <link refid="_sphere_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="7">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="8">
        <label>Math/Math.h</label>
        <link refid="_math_8h"/>
      </node>
      <node id="13">
        <label>Objects/Components/CameraComponent.h</label>
        <link refid="_camera_component_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>TransformComponent.h</label>
        <link refid="_transform_component_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CollisionData.h</label>
        <link refid="_collision_data_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Physics/CollisionDetection.cpp</label>
        <link refid="_collision_detection_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CollisionDetection.h</label>
        <link refid="_collision_detection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Renderers/Materials/Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Renderers/RenderObject.h</label>
        <link refid="_render_object_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>UniformBufferObject.h</label>
        <link refid="_uniform_buffer_object_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Vertex.h</label>
        <link refid="_vertex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>SDL_image.h</label>
      </node>
      <node id="22">
        <label>map</label>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="17">
        <label>set</label>
      </node>
      <node id="18">
        <label>string</label>
      </node>
      <node id="21">
        <label>unordered_map</label>
      </node>
      <node id="27">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collision_detection_8h" kindref="compound">CollisionDetection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_bounds_8h" kindref="compound">Geometry/BoxBounds.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_8h" kindref="compound">Geometry/Box.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sphere_8h" kindref="compound">Geometry/Sphere.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ray_8h" kindref="compound">Geometry/Ray.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_component_8h" kindref="compound">Objects/Components/CameraComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_level_graph_8h" kindref="compound">LevelGraph.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="struct_s___collision_data" kindref="compound">S_CollisionData</ref><sp/>CollisionDetection::collisionData<sp/>=<sp/><ref refid="struct_s___collision_data" kindref="compound">S_CollisionData</ref>();</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_collision_detection_1a02163f314ae4c76cfda1a3e214ff9b68" refkind="member"><highlight class="normal"><ref refid="class_collision_detection_1a02163f314ae4c76cfda1a3e214ff9b68" kindref="member">CollisionDetection::~CollisionDetection</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_collision_detection_1a9bb42241d83ea2c517fc2e4fe52f4e50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a9bb42241d83ea2c517fc2e4fe52f4e50" kindref="member">CollisionDetection::RayAABBIntersection</ref>(<ref refid="class_ray" kindref="compound">Ray</ref><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref><sp/>b)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>rayDirection<sp/>=<sp/>a.<ref refid="class_ray_1abcb3e0fae1477c35201b32881d47e20f" kindref="member">GetDirection</ref>().<ref refid="class_f_vector3_1a858673b76007df4d6c4c416d9dba31a7" kindref="member">GetNormal</ref>();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>boxMin<sp/>=<sp/>b.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>boxMax<sp/>=<sp/>b.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref><sp/>modelMatrix<sp/>=<sp/>b.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tMin<sp/>=<sp/><ref refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" kindref="member">LevelGraph::GetInstance</ref>()-&gt;<ref refid="class_level_graph_1aff627e213cfddab2a02fba146f5c4b14" kindref="member">GetActiveCamera</ref>()-&gt;<ref refid="class_c___camera_component_1a9a7aa35e7dfbea61d6cc9b5c8778cdbf" kindref="member">GetNearPlane</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tMax<sp/>=<sp/><ref refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" kindref="member">LevelGraph::GetInstance</ref>()-&gt;<ref refid="class_level_graph_1aff627e213cfddab2a02fba146f5c4b14" kindref="member">GetActiveCamera</ref>()-&gt;<ref refid="class_c___camera_component_1a9bc6adfc009b74336bcfe85e4e5a9c9e" kindref="member">GetFarPlane</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>worldPosition(modelMatrix[3].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>,<sp/>modelMatrix[3].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<sp/>modelMatrix[3].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>delta<sp/>=<sp/>worldPosition<sp/>-<sp/>a.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//X<sp/>Axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>axis(modelMatrix[0].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>,<sp/>modelMatrix[0].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<sp/>modelMatrix[0].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaDot<sp/>=<sp/>delta.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>directionDot<sp/>=<sp/>rayDirection.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(directionDot)<sp/>&gt;<sp/>0.0001f)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>t2)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>tMax)<sp/>tMax<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>tMin)<sp/>tMin<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tMax<sp/>&lt;<sp/>tMin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&gt;<sp/>0.0f<sp/>||<sp/>-deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Y<sp/>Axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>axis<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(modelMatrix[1].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>,<sp/>modelMatrix[1].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<sp/>modelMatrix[1].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaDot<sp/>=<sp/>delta.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>directionDot<sp/>=<sp/>rayDirection.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(directionDot)<sp/>&gt;<sp/>0.0001f)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>t2)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>tMax)<sp/>tMax<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>tMin)<sp/>tMin<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tMax<sp/>&lt;<sp/>tMin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&gt;<sp/>0.0f<sp/>||<sp/>-deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Z<sp/>Axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>axis<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(modelMatrix[2].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a58833a3110c570fb05130d40c365d1e4" kindref="member">X</ref>,<sp/>modelMatrix[2].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5a5596231eabd6cf29050967d5ac83ad84" kindref="member">Y</ref>,<sp/>modelMatrix[2].<ref refid="_f_matrix_8h_1ade63c8058df0b4629fea17b50c36ced5aa70478ce277ffc322f8e1e3418e07355" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>deltaDot<sp/>=<sp/>delta.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>directionDot<sp/>=<sp/>rayDirection.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(axis);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(directionDot)<sp/>&gt;<sp/>0.0001f)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t2<sp/>=<sp/>(deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)<sp/>/<sp/>directionDot;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>t2)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t2<sp/>&lt;<sp/>tMax)<sp/>tMax<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>tMin)<sp/>tMin<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tMax<sp/>&lt;<sp/>tMin)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-deltaDot<sp/>+<sp/>boxMin.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&gt;<sp/>0.0f<sp/>||<sp/>-deltaDot<sp/>+<sp/>boxMax.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&lt;<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="class_ray_1a4bd23f0a025d5371ae1e61c4df5a391c" kindref="member">SetIntersectDistance</ref>(tMin);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>collisionData.<ref refid="struct_s___collision_data_1a0c194485e8a69d3095b1c57ede822caa" kindref="member">CollisionPoint</ref><sp/>=<sp/>a.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>()<sp/>+<sp/>tMin;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105" refid="class_collision_detection_1aa5307ed3a1236cd2917caab7f6b222ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1aa5307ed3a1236cd2917caab7f6b222ff" kindref="member">CollisionDetection::RaySphereIntersection</ref>(<ref refid="class_ray" kindref="compound">Ray</ref><sp/>a,<sp/><ref refid="class_sphere" kindref="compound">Sphere</ref><sp/>b)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>l<sp/>=<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref><sp/>-<sp/>a.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tca<sp/>=<sp/>l.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(a.<ref refid="class_ray_1abcb3e0fae1477c35201b32881d47e20f" kindref="member">GetDirection</ref>());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tca<sp/>&lt;<sp/>0)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d2<sp/>=<sp/>l.<ref refid="class_f_vector3_1a969c948d845a1c16d90aaeadb4f4089e" kindref="member">GetDotProduct</ref>(l)<sp/>-<sp/>tca<sp/>*<sp/>tca;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius2<sp/>=<sp/>b.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>*<sp/>b.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d2<sp/>&gt;<sp/>radius2)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thc<sp/>=<sp/>sqrt(radius2<sp/>-<sp/>d2);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>tca<sp/>-<sp/>thc;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/>tca<sp/>+<sp/>thc;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>t1)<sp/>{<sp/>std::swap(t0,<sp/>t1);<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>t1;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>t0<sp/>is<sp/>negative,<sp/>let&apos;s<sp/>use<sp/>t1<sp/>instead<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>both<sp/>t0<sp/>and<sp/>t1<sp/>are<sp/>negative<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="class_ray_1a4bd23f0a025d5371ae1e61c4df5a391c" kindref="member">SetIntersectDistance</ref>(t0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>collisionData.<ref refid="struct_s___collision_data_1a0c194485e8a69d3095b1c57ede822caa" kindref="member">CollisionPoint</ref><sp/>=<sp/>a.<ref refid="class_ray_1a2859e9188636187d64dc28fd70b9bce5" kindref="member">GetOrigin</ref>()<sp/>+<sp/>t0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134" refid="class_collision_detection_1a580407c59cb10d3aca31854d9a6abe66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a580407c59cb10d3aca31854d9a6abe66" kindref="member">CollisionDetection::RayOBBIntersection</ref>(<ref refid="class_ray" kindref="compound">Ray</ref><sp/>a,<sp/><ref refid="class_box" kindref="compound">Box</ref><sp/>b)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Finish<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>interssection[6];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;plane<sp/>:<sp/>b.<ref refid="class_box_1ac02608b590cef9d8f83d96a55fc8971f" kindref="member">box</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(plane.InterssectionPoint(a,<sp/>interssection[i])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interssection[i].<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&amp;&amp;<sp/>interssection[i].<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interssection[i].<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&amp;&amp;<sp/>interssection[i].<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interssection[i].<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&amp;&amp;<sp/>interssection[i].<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&gt;=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>2)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(stopAtFirstCollision)</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FVector3<sp/>closestPoint<sp/>=<sp/>interssection[0];</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>i;<sp/>j++)</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((a.GetOrigin()<sp/>-<sp/>interssection[j]).Length()<sp/>&lt;<sp/>(a.GetOrigin()<sp/>-<sp/>closestPoint).Length())</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestPoint<sp/>=<sp/>interssection[j];</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collisionPoints[0]<sp/>=<sp/>closestPoint;</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;=<sp/>i;<sp/>j++)</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collisionPoints[j]<sp/>=<sp/>interssection[j];</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/>a.SetIntersectDistance(collisionPoints[0])</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179" refid="class_collision_detection_1a56710aa6672a5dea36e34c476a994d8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a56710aa6672a5dea36e34c476a994d8e" kindref="member">CollisionDetection::SphereAABBIntersection</ref>(<ref refid="class_sphere" kindref="compound">Sphere</ref><sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref><sp/>b)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO://Add<sp/>in<sp/>point<sp/>of<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>Math::Clamp(b.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>,<sp/>Math::Clamp(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>,<sp/>b.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>Math::Clamp(b.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>,<sp/>Math::Clamp(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>,<sp/>b.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>Math::Clamp(b.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>,<sp/>Math::Clamp(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>,<sp/>b.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>((x<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>*<sp/>(x<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>+</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(y<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>*<sp/>(y<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>+</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(z<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)<sp/>*<sp/>(z<sp/>-<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/>&lt;<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>*<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_collision_detection_1a11d8843cccbc47dd20a7cb3461931254" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a11d8843cccbc47dd20a7cb3461931254" kindref="member">CollisionDetection::SphereOBBIntersection</ref>(<ref refid="class_sphere" kindref="compound">Sphere</ref><sp/>a,<sp/><ref refid="class_box" kindref="compound">Box</ref><sp/>b)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO://Add<sp/>in<sp/>point<sp/>of<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>-<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>+<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&amp;&amp;<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>+<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&gt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>-<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>+<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&amp;&amp;<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>+<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&gt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>-<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&lt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>+<sp/>b.<ref refid="class_box_1a68f253f0fe77b3e27e5de0f37b17814b" kindref="member">GetExtent</ref>().<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&amp;&amp;<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>+<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>&gt;=<sp/>b.<ref refid="class_box_1ab60efc45d66c7447b26801701f16caaf" kindref="member">GetPosition</ref>().<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>plane<sp/>:<sp/>b.<ref refid="class_box_1ac02608b590cef9d8f83d96a55fc8971f" kindref="member">box</ref>)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref><sp/>-<sp/>plane.GetRandomPointInPlane())<sp/>*<sp/>plane.GetPlaneNormal();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>&lt;<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collisionData.<ref refid="struct_s___collision_data_1a0c194485e8a69d3095b1c57ede822caa" kindref="member">CollisionPoint</ref><sp/>=<sp/>(plane.GetPlaneNormal()<sp/>*<sp/>a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>)<sp/>+<sp/>a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="class_collision_detection_1a0549e8c76a2e6d5eec0bdcbaea73d327" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a0549e8c76a2e6d5eec0bdcbaea73d327" kindref="member">CollisionDetection::SphereIntersection</ref>(<ref refid="class_sphere" kindref="compound">Sphere</ref><sp/>a,<sp/><ref refid="class_sphere" kindref="compound">Sphere</ref><sp/>b)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO://Add<sp/>in<sp/>point<sp/>of<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>sqrtf((a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>*<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref>)<sp/>+</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>*<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref>)<sp/>+</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)<sp/>*<sp/>(a.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>-<sp/>b.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref>.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/>&lt;<sp/>(a.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>+<sp/>b.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_collision_detection_1a07986f1a23e3e6f9a304e729fdfa1133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a07986f1a23e3e6f9a304e729fdfa1133" kindref="member">CollisionDetection::AABBIntersection</ref>(<ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref><sp/>a,<sp/><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref><sp/>b)</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO://Add<sp/>in<sp/>point<sp/>of<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>aTransformPos<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(a.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].X,<sp/>a.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].Y,<sp/>a.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].Z);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>bTransformPos<sp/>=<sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>(b.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].X,<sp/>b.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].Y,<sp/>b.<ref refid="struct_s___box_bounds_1a6494f47ba3c18fc50fe6bcd6302c9b68" kindref="member">Model</ref>[3].Z);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>minCorner<sp/>=<sp/>a.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref><sp/>+<sp/>aTransformPos;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>maxCorner<sp/>=<sp/>a.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref><sp/>+<sp/>aTransformPos;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>otherMinCorner<sp/>=<sp/>b.<ref refid="struct_s___box_bounds_1a31bacd04007c374d0416bcc3db4700d3" kindref="member">Min</ref><sp/>+<sp/>bTransformPos;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref><sp/>otherMaxCorner<sp/>=<sp/>b.<ref refid="struct_s___box_bounds_1a35e3516aca8aac0252b4598f97b3c3eb" kindref="member">Max</ref><sp/>+<sp/>bTransformPos;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minCorner.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&lt;=<sp/>otherMaxCorner.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&amp;&amp;<sp/>maxCorner.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&gt;=<sp/>otherMinCorner.<ref refid="class_f_vector3_1aa6655e85376fd79f5e0b0fd89ba0258e" kindref="member">X</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minCorner.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&lt;=<sp/>otherMaxCorner.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&amp;&amp;<sp/>maxCorner.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&gt;=<sp/>otherMinCorner.<ref refid="class_f_vector3_1a10ba3ed47b315d00151e218878a3f1b9" kindref="member">Y</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minCorner.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&lt;=<sp/>otherMaxCorner.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&amp;&amp;<sp/>maxCorner.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref><sp/>&gt;=<sp/>otherMinCorner.<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="class_collision_detection_1af5dc0ab6675b56268e703bf10b4f80c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1af5dc0ab6675b56268e703bf10b4f80c2" kindref="member">CollisionDetection::AABBOBBIntersection</ref>(<ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref><sp/>a,<sp/><ref refid="class_box" kindref="compound">Box</ref><sp/>b)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Finish<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_collision_detection_1a2b97235db6e30ad5aa2a8e3e6f269243" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collision_detection_1a2b97235db6e30ad5aa2a8e3e6f269243" kindref="member">CollisionDetection::OBBIntersection</ref>(<ref refid="class_box" kindref="compound">Box</ref><sp/>a,<sp/><ref refid="class_box" kindref="compound">Box</ref><sp/>b)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Fill<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_collision_detection_1a209dfbe104f76f772388f0be101263d2" refkind="member"><highlight class="normal"><ref refid="struct_s___collision_data" kindref="compound">S_CollisionData</ref><sp/><ref refid="class_collision_detection_1a209dfbe104f76f772388f0be101263d2" kindref="member">CollisionDetection::GetCollisionData</ref>()</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collisionData;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Physics/CollisionDetection.cpp"/>
  </compounddef>
</doxygen>
