<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_level_graph_8cpp" kind="file" language="C++">
    <compoundname>LevelGraph.cpp</compoundname>
    <includes refid="_level_graph_8h" local="yes">LevelGraph.h</includes>
    <includes local="no">typeinfo</includes>
    <includes refid="_game_object_8h" local="yes">Objects/GameObjects/GameObject.h</includes>
    <includes refid="_render_object_8h" local="yes">Renderers/RenderObject.h</includes>
    <includes refid="_debug_logger_8h" local="yes">DebugLogger.h</includes>
    <includes refid="_static_mesh_component_8h" local="yes">Objects/Components/StaticMeshComponent.h</includes>
    <includes refid="_camera_component_8h" local="yes">Objects/Components/CameraComponent.h</includes>
    <includes refid="_collision_component_8h" local="yes">Objects/Components/Colliders/CollisionComponent.h</includes>
    <includes refid="_collision_handler_8h" local="yes">CollisionHandler.h</includes>
    <includes refid="_texture_handler_8h" local="yes">Renderers/TextureHandler.h</includes>
    <incdepgraph>
      <node id="32">
        <label>CollisionHandler.h</label>
        <link refid="_collision_handler_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Core/DebugLogger.h</label>
        <link refid="_debug_logger_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/LevelGraph.cpp</label>
        <link refid="_level_graph_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>LevelGraph.h</label>
        <link refid="_level_graph_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>OctSpatialPartition.h</label>
        <link refid="_oct_spatial_partition_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Geometry/BoxBounds.h</label>
        <link refid="_box_bounds_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>Geometry/Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Geometry/Simplex.h</label>
        <link refid="_simplex_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../Math/FMatrix.h</label>
        <link refid="_f_matrix_8h"/>
      </node>
      <node id="9">
        <label>../Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="10">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="25">
        <label>Objects/Components/CameraComponent.h</label>
        <link refid="_camera_component_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>Objects/Components/Colliders/CollisionComponent.h</label>
        <link refid="_collision_component_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>RenderableComponent.h</label>
        <link refid="_renderable_component_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Objects/Components/StaticMeshComponent.h</label>
        <link refid="_static_mesh_component_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>TransformComponent.h</label>
        <link refid="_transform_component_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Objects/GameObjects/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../Objects/Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Physics/CollisionData.h</label>
        <link refid="_collision_data_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Renderers/Materials/Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Renderers/RenderObject.h</label>
        <link refid="_render_object_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>Renderers/TextureHandler.h</label>
        <link refid="_texture_handler_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>UniformBufferObject.h</label>
        <link refid="_uniform_buffer_object_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Vertex.h</label>
        <link refid="_vertex_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>SDL_image.h</label>
      </node>
      <node id="31">
        <label>array</label>
      </node>
      <node id="35">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="18">
        <label>typeinfo</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_level_graph_8h" kindref="compound">LevelGraph.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_game_object_8h" kindref="compound">Objects/GameObjects/GameObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_object_8h" kindref="compound">Renderers/RenderObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_debug_logger_8h" kindref="compound">DebugLogger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_static_mesh_component_8h" kindref="compound">Objects/Components/StaticMeshComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_component_8h" kindref="compound">Objects/Components/CameraComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collision_component_8h" kindref="compound">Objects/Components/Colliders/CollisionComponent.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collision_handler_8h" kindref="compound">CollisionHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_texture_handler_8h" kindref="compound">Renderers/TextureHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//Static<sp/>Re-declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">std::unique_ptr&lt;LevelGraph&gt;<sp/><ref refid="class_level_graph_1a9f729df7d4529f8e35f526bdf069ba63" kindref="member">LevelGraph::Instance</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">std::set&lt;O_Object*&gt;<sp/><ref refid="class_level_graph_1acb97a1682d9ff9226b66e11cb1b14fc6" kindref="member">LevelGraph::UnloadedObjects</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">std::map&lt;std::string,<sp/>std::set&lt;O_Object*&gt;&gt;<sp/><ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">LevelGraph::GameObjectsByTag</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">std::map&lt;size_t,<sp/>std::set&lt;O_Object*&gt;&gt;<sp/><ref refid="class_level_graph_1acd3785f1775d984fd931cd5078454601" kindref="member">LevelGraph::GameObjectsByClass</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" refkind="member"><highlight class="normal"><ref refid="class_level_graph" kindref="compound">LevelGraph</ref>*<sp/><ref refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" kindref="member">LevelGraph::GetInstance</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_level_graph_1a9f729df7d4529f8e35f526bdf069ba63" kindref="member">Instance</ref>.get()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/><ref refid="class_level_graph_1a9f729df7d4529f8e35f526bdf069ba63" kindref="member">Instance</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_level_graph" kindref="compound">LevelGraph</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a9f729df7d4529f8e35f526bdf069ba63" kindref="member">Instance</ref>.get();</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_level_graph_1a19847506cd821792fde4f02a896e6648" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a19847506cd821792fde4f02a896e6648" kindref="member">LevelGraph::Render</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_level_graph_1a5e36438e3ec23d29f7ba0f6ff2507830" kindref="member">StaticMehes</ref>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mesh-&gt;SetInFrustum(<ref refid="class_level_graph_1a8b521d5f3e67390747b4fb4c81486284" kindref="member">ActiveCamera</ref>-&gt;<ref refid="class_c___camera_component_1a5542cabed7392c0dbe045d6208b10614" kindref="member">FrustumCheck</ref>(mesh-&gt;GetBoundingBox()));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_level_graph_1a7bdc5367cfe11eb4c9abe421bb76640d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a7bdc5367cfe11eb4c9abe421bb76640d" kindref="member">LevelGraph::AddObject</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/>gameObject)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameObject)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>classID<sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*gameObject).hash_code();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1acd3785f1775d984fd931cd5078454601" kindref="member">GameObjectsByClass</ref>.count(classID))<sp/><ref refid="class_level_graph_1acd3785f1775d984fd931cd5078454601" kindref="member">GameObjectsByClass</ref>[classID]<sp/>=<sp/>std::set&lt;O_Object*&gt;();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1acd3785f1775d984fd931cd5078454601" kindref="member">GameObjectsByClass</ref>[classID].insert(gameObject);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>tag<sp/>:<sp/>gameObject-&gt;<ref refid="class_o___object_1ac1bb49ba3efbafdbad4afbc54543aa95" kindref="member">GetTags</ref>())</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>.count(tag))<sp/><ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>[tag]<sp/>=<sp/>std::set&lt;O_Object*&gt;();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>[tag].insert(gameObject);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>gameObject-&gt;<ref refid="class_o___object_1aea776c0459d191d18d05ba5ba0d59386" kindref="member">GetName</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameObject-&gt;<ref refid="class_o___object_1aea776c0459d191d18d05ba5ba0d59386" kindref="member">GetName</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*gameObject).name();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>name.substr(6);</highlight><highlight class="comment">//Remove<sp/>the<sp/>&quot;class<sp/>&quot;<sp/>part<sp/>of<sp/>the<sp/>typeid<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>.count(name))</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>newName;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newName<sp/>=<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(i)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>.count(newName))<sp/>i++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>newName;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>[name]<sp/>=<sp/>gameObject;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gameObject-&gt;SetName(name);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_level_graph_1a265ee8df873fcbb03fa4c6ef3ea02550" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a265ee8df873fcbb03fa4c6ef3ea02550" kindref="member">LevelGraph::RemoveObjectFromTagList</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/>gameObject,<sp/>std::string<sp/>tag)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gameObject-&gt;<ref refid="class_o___object_1a4bea012d6779d28a455928a714c4238f" kindref="member">Tags</ref>.count(tag))<sp/>gameObject-&gt;<ref refid="class_o___object_1a4bea012d6779d28a455928a714c4238f" kindref="member">Tags</ref>.erase(tag);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>[tag].count(gameObject))<sp/><ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>[tag].erase(gameObject);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_level_graph_1ab9a4a64ca6ff4160fda42b521014f372" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1ab9a4a64ca6ff4160fda42b521014f372" kindref="member">LevelGraph::AddObjectToTagList</ref>(<ref refid="class_o___object" kindref="compound">O_Object</ref>*<sp/>gameObject,<sp/>std::string<sp/>tag)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>gameObject-&gt;<ref refid="class_o___object_1a4bea012d6779d28a455928a714c4238f" kindref="member">Tags</ref>.insert(tag);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1ac8695cb3441ce3d00b9eaafc68f71d78" kindref="member">GameObjectsByTag</ref>[tag].insert(gameObject);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_level_graph_1a3d9ca586b2930f995477ea1ed042ee8e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a3d9ca586b2930f995477ea1ed042ee8e" kindref="member">LevelGraph::SetActiveCamera</ref>(<ref refid="class_c___camera_component" kindref="compound">C_CameraComponent</ref>*<sp/>camera)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a8b521d5f3e67390747b4fb4c81486284" kindref="member">ActiveCamera</ref><sp/>=<sp/>camera;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aa99d87eaf61dc47d7dc01f268e34cbf3" kindref="member">Camera</ref><sp/>=<sp/>camera-&gt;<ref refid="class_c___camera_component_1a0a843e9ddd85b822aa93dc84c51a962a" kindref="member">GetUCO</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_level_graph_1acc60de5dc70d05741104ad08c3332561" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1acc60de5dc70d05741104ad08c3332561" kindref="member">LevelGraph::FrameBufferResizeCallback</ref>()</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a8b521d5f3e67390747b4fb4c81486284" kindref="member">ActiveCamera</ref>-&gt;<ref refid="class_c___camera_component_1ae26a0497341cf67e6d7791bef622c4e1" kindref="member">UpdateProjection</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_level_graph_1ae96c62572f74a05b8bf9f5b3c8fe77d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1ae96c62572f74a05b8bf9f5b3c8fe77d5" kindref="member">LevelGraph::AddMesh</ref>(<ref refid="struct_s___mesh" kindref="compound">S_Mesh</ref>*<sp/>mesh)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aac5e543ece52fc35fd469174381e2a11" kindref="member">MeshesByName</ref>[mesh-&gt;<ref refid="struct_s___mesh_1ae8a92a2949d30b3e14b3ebd86873cb80" kindref="member">Name</ref>]<sp/>=<sp/>mesh;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aeeee63d17a25010a2b1ed585d74d5b6b" kindref="member">Meshes</ref>.insert(mesh);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="class_level_graph_1a98b7e374a919e409326bb129182b6a4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a98b7e374a919e409326bb129182b6a4d" kindref="member">LevelGraph::AddMeshComponent</ref>(<ref refid="class_c___static_mesh_component" kindref="compound">C_StaticMeshComponent</ref>*<sp/>meshComponent)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>.count(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()-&gt;<ref refid="class_material_1aba3466eeb8d4e826942b8b199bef8437" kindref="member">GetShaderInfo</ref>().<ref refid="struct_s___shader_info_1a60a3cc87724f17d105e20355ebcd3bef" kindref="member">Name</ref>))<sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()-&gt;<ref refid="class_material_1aba3466eeb8d4e826942b8b199bef8437" kindref="member">GetShaderInfo</ref>().<ref refid="struct_s___shader_info_1a60a3cc87724f17d105e20355ebcd3bef" kindref="member">Name</ref>]<sp/>=<sp/>std::set&lt;Material*&gt;();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()-&gt;<ref refid="class_material_1aba3466eeb8d4e826942b8b199bef8437" kindref="member">GetShaderInfo</ref>().<ref refid="struct_s___shader_info_1a60a3cc87724f17d105e20355ebcd3bef" kindref="member">Name</ref>].insert(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>.count(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()))<sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()]<sp/>=<sp/>std::set&lt;S_Mesh*&gt;();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()].insert(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>.count(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>()))<sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>()]<sp/>=<sp/>std::set&lt;FMatrix4*&gt;();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>()].insert(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1ab45913895e64a4dff34037f5b654934f" kindref="member">GetModelMatrix</ref>());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1ab45913895e64a4dff34037f5b654934f" kindref="member">GetModelMatrix</ref>()]<sp/>=<sp/>meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2600216668af353e018a4342adfb6030" kindref="member">IsInFrustum</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1abe3ee66555b2588eaf21c22ffb1b005c" kindref="member">Materials</ref>.insert(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>());</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(meshComponent-&gt;GetMaterial()-&gt;TextureDifuse)<sp/>RenderData.Textures.insert(meshComponent-&gt;GetMaterial()-&gt;TextureDifuse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(meshComponent-&gt;GetMaterial()-&gt;TextureSpecular)<sp/>RenderData.Textures.insert(meshComponent-&gt;GetMaterial()-&gt;TextureSpecular);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aeeee63d17a25010a2b1ed585d74d5b6b" kindref="member">Meshes</ref>.insert(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>());</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a5e36438e3ec23d29f7ba0f6ff2507830" kindref="member">StaticMehes</ref>.insert(meshComponent);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_level_graph_1a7e56003ca0d074a7dbea3f7abbca66ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a7e56003ca0d074a7dbea3f7abbca66ca" kindref="member">LevelGraph::AddCollisionComponent</ref>(<ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref>*<sp/>component)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ColliderSpationPartition-&gt;AddCollider(component);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_level_graph_1a8db7fe0e00ee7163bf9a0a47fa5c173f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a8db7fe0e00ee7163bf9a0a47fa5c173f" kindref="member">LevelGraph::RemoveMeshComponent</ref>(<ref refid="class_c___static_mesh_component" kindref="compound">C_StaticMeshComponent</ref>*<sp/>meshComponent)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()-&gt;<ref refid="class_material_1aba3466eeb8d4e826942b8b199bef8437" kindref="member">GetShaderInfo</ref>().<ref refid="struct_s___shader_info_1a60a3cc87724f17d105e20355ebcd3bef" kindref="member">Name</ref>].erase(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a2ccedc36e1db4723be7489aa5743b272" kindref="member">GetMaterial</ref>()].erase(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>[meshComponent-&gt;<ref refid="class_c___static_mesh_component_1a577fd94f13e70078934bd9af553e47d5" kindref="member">GetMesh</ref>()].erase(meshComponent-&gt;<ref refid="class_c___static_mesh_component_1ab45913895e64a4dff34037f5b654934f" kindref="member">GetModelMatrix</ref>());</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_level_graph_1a8c7a0e1176876920437c57f222b4a2ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a8c7a0e1176876920437c57f222b4a2ba" kindref="member">LevelGraph::AddTexture</ref>(<ref refid="struct_s___texture" kindref="compound">S_Texture</ref>*<sp/>texture)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a03d37b92658f820445427a41cfbff9f7" kindref="member">TexturesByName</ref>[texture-&gt;<ref refid="struct_s___texture_1a41177ccaf52c3aea6579c6dab46df2da" kindref="member">Name</ref>]<sp/>=<sp/>texture;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a0be5fe25e207cf174293348b4f6428f7" kindref="member">Textures</ref>.insert(texture);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_level_graph_1aaae8d0f385eb65df65e67e7154088567" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1aaae8d0f385eb65df65e67e7154088567" kindref="member">LevelGraph::AddMaterial</ref>(<ref refid="class_material" kindref="compound">Material</ref>*<sp/>material)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1acb914c443cb398e020fc6ae8b2aa2644" kindref="member">MaterialsByName</ref>[material-&gt;<ref refid="class_material_1aee804889ef8934c67323fb2f985c1f39" kindref="member">GetMaterialName</ref>()]<sp/>=<sp/>material;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1abe3ee66555b2588eaf21c22ffb1b005c" kindref="member">Materials</ref>.insert(material);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1ae9e66ebd5954dc22693a303be1a03ca8" kindref="member">LoadMaterial</ref>(material);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_level_graph_1a6c0ca934f13e744f747af71d9b188e5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a6c0ca934f13e744f747af71d9b188e5c" kindref="member">LevelGraph::RemoveLight</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>[index]<sp/>=<sp/><ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>(0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a4efb1596cee003f56d5a796a68a54445" kindref="member">FreeLightSlots</ref>.insert(index);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_level_graph_1aebea7a15f3ec2fbb65699af75473f5bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1aebea7a15f3ec2fbb65699af75473f5bc" kindref="member">LevelGraph::AddLight</ref>(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>*&amp;<sp/>matrix,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>index)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_level_graph_1a4efb1596cee003f56d5a796a68a54445" kindref="member">FreeLightSlots</ref>.empty())</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.push_back(<ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref>());</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/>&amp;<ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>[index];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>breakPoint<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>*<ref refid="class_level_graph_1a4efb1596cee003f56d5a796a68a54445" kindref="member">FreeLightSlots</ref>.begin();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a4efb1596cee003f56d5a796a68a54445" kindref="member">FreeLightSlots</ref>.erase(index);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>=<sp/>&amp;<ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>[index];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>This<sp/>needs<sp/>to<sp/>get<sp/>called<sp/>somewhere.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_level_graph_1aea686db8b6b044ffff5481f8c6a31807" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1aea686db8b6b044ffff5481f8c6a31807" kindref="member">LevelGraph::CleanUp</ref>()</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>.empty())</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>:<sp/><ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.second)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">.second);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1afe92e4a6d32cb1eda091ea70fb703d57" kindref="member">GameObjectsByName</ref>.clear();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1aac5e543ece52fc35fd469174381e2a11" kindref="member">MeshesByName</ref>.empty())</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_level_graph_1aac5e543ece52fc35fd469174381e2a11" kindref="member">MeshesByName</ref>)<sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mesh.second)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(mesh.second);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aac5e543ece52fc35fd469174381e2a11" kindref="member">MeshesByName</ref>.clear();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_level_graph_1acb914c443cb398e020fc6ae8b2aa2644" kindref="member">MaterialsByName</ref>.empty())</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>material<sp/>:<sp/><ref refid="class_level_graph_1acb914c443cb398e020fc6ae8b2aa2644" kindref="member">MaterialsByName</ref>)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(material.second)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(material.second);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1acb914c443cb398e020fc6ae8b2aa2644" kindref="member">MaterialsByName</ref>.clear();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1ae8cb70fe14ca4e6bdfe9152617045d26" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_level_graph_1aefbaaca82f8cc9be88db9d4e01af3b00" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1aefbaaca82f8cc9be88db9d4e01af3b00" kindref="member">LevelGraph::Pause</ref>()</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isPaused)<sp/>{<sp/>isPaused<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>isPaused<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_level_graph_1a2d9610fa80d11237f8974112d9674e79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1a2d9610fa80d11237f8974112d9674e79" kindref="member">LevelGraph::LoadMesh</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_level_graph_1ac4e714a3c2f0d9ed96402e8723962bca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1ac4e714a3c2f0d9ed96402e8723962bca" kindref="member">LevelGraph::LoadModel</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_level_graph_1ae9e66ebd5954dc22693a303be1a03ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1ae9e66ebd5954dc22693a303be1a03ca8" kindref="member">LevelGraph::LoadMaterial</ref>(<ref refid="class_material" kindref="compound">Material</ref>*<sp/>material)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(material-&gt;TextureNameDifuse<sp/>!=<sp/>&quot;&quot;)<sp/>LoadTexture(material-&gt;TextureDifuse,<sp/>material-&gt;TextureNameDifuse);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(material-&gt;TextureNameSpecular<sp/>!=<sp/>&quot;&quot;)<sp/>LoadTexture(material-&gt;TextureSpecular,<sp/>material-&gt;TextureNameSpecular);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_level_graph_1aee522fefa0b22fa7259d6f803c9b0958" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_level_graph_1aee522fefa0b22fa7259d6f803c9b0958" kindref="member">LevelGraph::LoadTexture</ref>(<ref refid="struct_s___texture" kindref="compound">S_Texture</ref>*&amp;<sp/>texture,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>textureName)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>textures<sp/>=<sp/><ref refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" kindref="member">LevelGraph::GetInstance</ref>()-&gt;<ref refid="class_level_graph_1a710422a8b9a753bd3ae78faf059c5071" kindref="member">GetTextures</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!textures[textureName])</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>texture<sp/>with<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>texture-&gt;<ref refid="struct_s___texture_1a41177ccaf52c3aea6579c6dab46df2da" kindref="member">Name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Core/Level.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!textures[textureName]-&gt;Pixels)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_texture_handler_1a4a3f6b52cdcbb3b075fd9451412cecf7" kindref="member">TextureHandler::LoadTexture</ref>(textureName,<sp/>textures[textureName]-&gt;Path,<sp/>textures[textureName]))</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_debug_logger_1a080eef140c878bc0f4db4905cff24598" kindref="member">DebugLogger::Error</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>texture:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>texture-&gt;<ref refid="struct_s___texture_1a41177ccaf52c3aea6579c6dab46df2da" kindref="member">Name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>texture-&gt;<ref refid="struct_s___texture_1a3588d14f8279d5597a4ddbd382ab2765" kindref="member">Path</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Core/Level.cpp&quot;</highlight><highlight class="normal">,<sp/>__LINE__);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>texture<sp/>=<sp/>textures[textureName];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">LevelGraph::LevelGraph()</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aa9a5939d278626b478e0da882d460005" kindref="member">RenderData</ref>.<ref refid="struct_s___render_data_1a09dc625b17c94e08c9aa2b4500d76f74" kindref="member">LightSources</ref>.reserve(30);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1a4efb1596cee003f56d5a796a68a54445" kindref="member">FreeLightSlots</ref><sp/>=<sp/>std::set&lt;unsigned<sp/>int&gt;();</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">LevelGraph::~LevelGraph()</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_graph_1aea686db8b6b044ffff5481f8c6a31807" kindref="member">CleanUp</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/LevelGraph.cpp"/>
  </compounddef>
</doxygen>
