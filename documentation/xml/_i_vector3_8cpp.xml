<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_i_vector3_8cpp" kind="file" language="C++">
    <compoundname>IVector3.cpp</compoundname>
    <includes refid="_i_vector3_8h" local="yes">IVector3.h</includes>
    <includes refid="_f_quaternion_8h" local="yes">FQuaternion.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">iostream</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="3">
        <label>FQuaternion.h</label>
        <link refid="_f_quaternion_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector3.cpp</label>
        <link refid="_i_vector3_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>IVector3.h</label>
        <link refid="_i_vector3_8h"/>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>type_traits</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_i_vector3_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector3.cpp" line="4" column="9" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector3.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_vector3_8h" kindref="compound">IVector3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_quaternion_8h" kindref="compound">FQuaternion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="_i_vector3_8cpp_1a525335710b53cb064ca56b936120431e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//Constructor<sp/>using<sp/>initial<sp/>values<sp/>for<sp/>each<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_i_vector3_1a4e0dfff4ebfb6d1f5078db1ccf7e30f7" refkind="member"><highlight class="normal"><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3::IVector3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//Constructor<sp/>initializing<sp/>all<sp/>components<sp/>to<sp/>a<sp/>single<sp/>int<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_i_vector3_1ae5addfb490a789fc9449cffd1f3bc31d" refkind="member"><highlight class="normal"><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3::IVector3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_i_vector3_1a0d40e7d3758ce819466c708c1242f84a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3::IVector3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a5b14b2665c382a01e4360e2ec1cc15c7" kindref="member">Load</ref>(vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>,<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>,<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_i_vector3_1afc55e49530e522aa556d90bb822ffb65" refkind="member"><highlight class="normal"><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3::IVector3</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[3])</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//Default<sp/>Constructor,<sp/>initializes<sp/>all<sp/>values<sp/>to<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" refkind="member"><highlight class="normal"><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3::IVector3</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_i_vector3_1a3cbe840c3535681918e9496a0504baa2" refkind="member"><highlight class="normal"><ref refid="class_i_vector3_1a3cbe840c3535681918e9496a0504baa2" kindref="member">IVector3::~IVector3</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;+&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>plus<sp/>vector<sp/>addition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_i_vector3_1a1b794443e4abdccf950f55642afeade9" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1a1b794443e4abdccf950f55642afeade9" kindref="member">IVector3::operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/>result;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>+<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>+<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>+<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;+=&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>plus<sp/>vector<sp/>addition<sp/>changing<sp/>the<sp/>current<sp/>vector<sp/>to<sp/>equal<sp/>to<sp/>sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_i_vector3_1a939938c1e60176e5b5155c7993db6831" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a939938c1e60176e5b5155c7993db6831" kindref="member">IVector3::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>+=<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>+=<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>+=<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;-=&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>minus<sp/>vector<sp/>subtraction.<sp/>changing<sp/>the<sp/>current<sp/>vector<sp/>to<sp/>equal<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_i_vector3_1a1e1fc32327c4a503ff774e3681ce916e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a1e1fc32327c4a503ff774e3681ce916e" kindref="member">IVector3::operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>-=<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>-=<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>-=<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_i_vector3_1a0cc69a06d4da4961d9baeed39ce371fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a0cc69a06d4da4961d9baeed39ce371fa" kindref="member">IVector3::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>==<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>&amp;&amp;<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>==<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>&amp;&amp;<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>==<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;-&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>minus<sp/>vector<sp/>subtraction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_i_vector3_1a175eea13c1c671883af134b04b74456f" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1a175eea13c1c671883af134b04b74456f" kindref="member">IVector3::operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="90"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/>Result;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>Result.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>-<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Result.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>-<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Result.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>-<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Result;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;*&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>times<sp/>scalar<sp/>multiplication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_i_vector3_1ad43cc94827ff6b7cad9afe40db47f3ac" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1ad43cc94827ff6b7cad9afe40db47f3ac" kindref="member">IVector3::operator*</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplier)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="103"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3</ref>(<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>*<sp/>multiplier,<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>*<sp/>multiplier,<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>*<sp/>multiplier);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;/&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>divided<sp/>by<sp/>scalar<sp/>division.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_i_vector3_1a119698c4f09e50b2dade005eecfa3524" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1a119698c4f09e50b2dade005eecfa3524" kindref="member">IVector3::operator/</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divisor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3</ref>(<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>/<sp/>divisor,<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>/<sp/>divisor,<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>/<sp/>divisor);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;*&quot;<sp/>operator,<sp/>makes<sp/>a<sp/>vector<sp/>times<sp/>vector<sp/>dot<sp/>product.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_i_vector3_1ac0d843319d5c871afbabb06ae72eca48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ad43cc94827ff6b7cad9afe40db47f3ac" kindref="member">IVector3::operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>+<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>+<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//Overload<sp/>of<sp/>the<sp/>&quot;=&quot;<sp/>operator,<sp/>makes<sp/>each<sp/>component<sp/>of<sp/>the<sp/>vector<sp/>equal<sp/>to<sp/>the<sp/>equivalent<sp/>component<sp/>of<sp/>a<sp/>given<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_i_vector3_1ac96b863e45f117fd856ea345c9623f13" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ac96b863e45f117fd856ea345c9623f13" kindref="member">IVector3::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_i_vector3_1a7f76b03635d70eb8e5862ce4e78aeb15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ac96b863e45f117fd856ea345c9623f13" kindref="member">IVector3::operator=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>values[3])</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>values[0];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>values[1];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>values[2];</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>vector<sp/>(or<sp/>vector&apos;s<sp/>scalar<sp/>lenght)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">IVector3::Length</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>*<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>+<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>*<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>+<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>*<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>angle<sp/>between<sp/>this<sp/>vector<sp/>and<sp/>another<sp/>given<sp/>vector<sp/>in<sp/>degrees.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_i_vector3_1a76a0b31947822341fcd4fe3dcb0cc0fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a76a0b31947822341fcd4fe3dcb0cc0fd" kindref="member">IVector3::GetAngle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inRadians)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inRadians)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>vector)<sp/>/<sp/>(<ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>()<sp/>*<sp/>vector.<ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>()));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>acos((*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>vector)<sp/>/<sp/>(<ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>()<sp/>*<sp/>vector.<ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>()))<sp/>*<sp/>180.0f<sp/>/<sp/>M_PI;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//Returns<sp/>the<sp/>Cross<sp/>product<sp/>of<sp/>this<sp/>vector<sp/>and<sp/>another<sp/>given<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_i_vector3_1ad6afcab9904b39a1fa99150f4eb8522f" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1ad6afcab9904b39a1fa99150f4eb8522f" kindref="member">IVector3::CrossProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ad01bf3592ffc2ce890aa3bb12e60195f" kindref="member">IVector3</ref>(<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>-<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>,<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>-<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>,<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>-<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>*<sp/>vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//Gets<sp/>the<sp/>normalized<sp/>form<sp/>of<sp/>this<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_i_vector3_1a993cc1d5c2b9375684bf3c74de0f5c9e" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1a993cc1d5c2b9375684bf3c74de0f5c9e" kindref="member">IVector3::GetNormal</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="163"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/><ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//Divides<sp/>the<sp/>vector<sp/>by<sp/>its<sp/>Magnitude<sp/>to<sp/>get<sp/>the<sp/>normalized<sp/>unit<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_i_vector3_1a050b906d0c2d30d7981a28790d05a4bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a050b906d0c2d30d7981a28790d05a4bb" kindref="member">IVector3::Normalize</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>/<sp/><ref refid="class_i_vector3_1a3caf0bf02266e2bffb6d9a2d94f26990" kindref="member">Length</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_i_vector3_1aba676ea1012f72d0e95edbfb80fc197c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1aba676ea1012f72d0e95edbfb80fc197c" kindref="member">IVector3::Rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>rotation)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>vector<sp/>part<sp/>of<sp/>the<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/>vector(rotation.<ref refid="class_f_vector4_1adde7d6c779d671097d93be10971ab469" kindref="member">X</ref>,<sp/>rotation.<ref refid="class_f_vector4_1a8860ab20cf7c21dd9d814600ed7a65cd" kindref="member">Y</ref>,<sp/>rotation.<ref refid="class_f_vector4_1ade0ea8e42af4f492968e7209b7c12bca" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>scalar<sp/>part<sp/>of<sp/>the<sp/>quaternion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scalar<sp/>=<sp/>rotation.<ref refid="class_f_vector4_1a001090eab2a652cb0397ffc677f1553f" kindref="member">W</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>math</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>(vector<sp/>*<sp/>(2.0f<sp/>*<sp/>(vector<sp/>*<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>*<sp/>(scalar<sp/>*<sp/>scalar<sp/>-<sp/>(vector<sp/>*<sp/>vector)))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(vector.<ref refid="class_i_vector3_1ad6afcab9904b39a1fa99150f4eb8522f" kindref="member">CrossProduct</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>*<sp/>2.0f<sp/>*<sp/>scalar);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_i_vector3_1a03a98a91df5361634b68454e2490a34e" refkind="member"><highlight class="normal"><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/><ref refid="class_i_vector3_1a03a98a91df5361634b68454e2490a34e" kindref="member">IVector3::GetRotatedVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref>&amp;<sp/>rotation)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref><sp/>temp<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_i_vector3_1aba676ea1012f72d0e95edbfb80fc197c" kindref="member">Rotate</ref>(rotation);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_i_vector3_1a5b14b2665c382a01e4360e2ec1cc15c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1a5b14b2665c382a01e4360e2ec1cc15c7" kindref="member">IVector3::Load</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref><sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_i_vector3_1ab65f839a27256f425f98edf5eecea452" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3_1ab65f839a27256f425f98edf5eecea452" kindref="member">IVector3::Print</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;[<sp/>%f,\t%f,\t%f<sp/>]\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>,<sp/><ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>,<sp/><ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="struct_h_a_s_h___f_vector3_1a7da803334d6180fa3657a2eed4462033" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_h_a_s_h___f_vector3_1a6c01ea6bbb901393cf507f2abbac2d41" kindref="member">HASH_FVector3::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_vector3" kindref="compound">IVector3</ref>&amp;<sp/>vector)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="208"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>vectorX<sp/>=<sp/>std::hash&lt;int&gt;()(vector.<ref refid="class_i_vector3_1a37a98a539596d80e880397bbed675ba7" kindref="member">X</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>vectorY<sp/>=<sp/>std::hash&lt;int&gt;()(vector.<ref refid="class_i_vector3_1a38a6b53e8648c7363ed25b15f5093304" kindref="member">Y</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>vectorZ<sp/>=<sp/>std::hash&lt;int&gt;()(vector.<ref refid="class_i_vector3_1a608303f8ad7ecdc2dc5597caf450e224" kindref="member">Z</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vectorX<sp/>^<sp/>vectorY<sp/>^<sp/>vectorZ;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/IVector3.cpp"/>
  </compounddef>
</doxygen>
