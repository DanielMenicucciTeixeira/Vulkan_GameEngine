<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_sphere_collider_8cpp" kind="file" language="C++">
    <compoundname>SphereCollider.cpp</compoundname>
    <includes refid="_sphere_collider_8h" local="yes">SphereCollider.h</includes>
    <includes refid="_box_collider_8h" local="yes">BoxCollider.h</includes>
    <includes refid="_box_8h" local="yes">Geometry/Box.h</includes>
    <includes refid="_game_object_8h" local="yes">Objects/GameObjects/GameObject.h</includes>
    <includes refid="_collision_handler_8h" local="yes">CollisionHandler.h</includes>
    <incdepgraph>
      <node id="22">
        <label>CollisionHandler.h</label>
        <link refid="_collision_handler_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>Core/DebugLogger.h</label>
        <link refid="_debug_logger_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>OctSpatialPartition.h</label>
        <link refid="_oct_spatial_partition_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Geometry/Box.h</label>
        <link refid="_box_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Geometry/BoxBounds.h</label>
        <link refid="_box_bounds_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Plane.h</label>
        <link refid="_plane_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Geometry/Simplex.h</label>
        <link refid="_simplex_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Geometry/Sphere.h</label>
        <link refid="_sphere_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../Math/FMatrix.h</label>
        <link refid="_f_matrix_8h"/>
      </node>
      <node id="25">
        <label>../Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="13">
        <label>../Math/FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="17">
        <label>BoxCollider.h</label>
        <link refid="_box_collider_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CollisionComponent.h</label>
        <link refid="_collision_component_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Objects/Components/Colliders/SphereCollider.cpp</label>
        <link refid="_sphere_collider_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>SphereCollider.h</label>
        <link refid="_sphere_collider_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../TransformComponent.h</label>
        <link refid="_transform_component_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Objects/GameObjects/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>Physics/CollisionData.h</label>
        <link refid="_collision_data_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>array</label>
      </node>
      <node id="26">
        <label>iostream</label>
      </node>
      <node id="27">
        <label>memory</label>
      </node>
      <node id="7">
        <label>set</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sphere_collider_8h" kindref="compound">SphereCollider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_collider_8h" kindref="compound">BoxCollider.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_box_8h" kindref="compound">Geometry/Box.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_game_object_8h" kindref="compound">Objects/GameObjects/GameObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collision_handler_8h" kindref="compound">CollisionHandler.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_c___sphere_collider_1a8ed2fc0620588f1fcc743b7cbddd2de3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1a8ed2fc0620588f1fcc743b7cbddd2de3" kindref="member">C_SphereCollider::SetComponentPosition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>position)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___transform_component_1aa9d5ee105ac143d71d72c01916d40671" kindref="member">C_TransformComponent::SetComponentPosition</ref>(position);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref><sp/>=<sp/><ref refid="class_c___transform_component_1abb154089ca4b93b39b34ba0de32c54c4" kindref="member">GetComponentAbsolutePosition</ref>();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collision_handler_1a03b9dfc62f9725220f84320c5407c9f0" kindref="member">CollisionHandler::GetInstance</ref>()-&gt;<ref refid="class_collision_handler_1a8d598c1b8ab18a12fa1f098b1390dc5d" kindref="member">SphereSpatialCheck</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="class_c___sphere_collider_1a5f625db705457765cb122eceaf2eac49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1a5f625db705457765cb122eceaf2eac49" kindref="member">C_SphereCollider::SetComponentScale</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_vector3" kindref="compound">FVector3</ref>&amp;<sp/>scale)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___transform_component_1afe3327409fed00d0a2358c80ac643447" kindref="member">C_TransformComponent::SetComponentScale</ref>(scale);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>=<sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>*<sp/><ref refid="class_c___transform_component_1a8e4718fb5e3f4f1079af9918b5e709ef" kindref="member">GetComponentAbsoluteScale</ref>().<ref refid="class_f_vector3_1a4a84942e8ea39dd717b9ade9ba0cfe36" kindref="member">Z</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_c___sphere_collider_1aed17f3020e0646391724dd026e5fb76a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1aed17f3020e0646391724dd026e5fb76a" kindref="member">C_SphereCollider::SetComponentTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_transform" kindref="compound">FTransform</ref>&amp;<sp/>transform)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___transform_component_1ae1e262db4b4e2953a58af0885bd4b691" kindref="member">C_TransformComponent::SetComponentTransform</ref>(transform);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref><sp/>=<sp/><ref refid="class_c___transform_component_1abb154089ca4b93b39b34ba0de32c54c4" kindref="member">GetComponentAbsolutePosition</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_c___sphere_collider_1acb8a6c94b73bc430a2bf6cddfe594346" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1acb8a6c94b73bc430a2bf6cddfe594346" kindref="member">C_SphereCollider::GetRadius</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_c___sphere_collider_1aabdbb469c92e1ddb93b82b4e69e63eee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1aabdbb469c92e1ddb93b82b4e69e63eee" kindref="member">C_SphereCollider::SetRadius</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&amp;<sp/>radius)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1ae6f42f0da6679a2f0b4a22681ccccf38" kindref="member">radius</ref><sp/>=<sp/>radius;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_c___sphere_collider_1a927dc7cba0b910fd5f48579588e6a8fd" refkind="member"><highlight class="normal"><ref refid="class_sphere" kindref="compound">Sphere</ref><sp/><ref refid="class_c___sphere_collider_1a927dc7cba0b910fd5f48579588e6a8fd" kindref="member">C_SphereCollider::GetCollisionSphere</ref>()</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_c___sphere_collider_1a1e39e724f0e79ebecc714a1e0a44c07c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c___sphere_collider_1a1e39e724f0e79ebecc714a1e0a44c07c" kindref="member">C_SphereCollider::Update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>deltaTime)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___collision_component_1ad72cdb3fe415cf6501891f8e7e3e2012" kindref="member">C_CollisionComponent::Update</ref>(deltaTime);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref>.<ref refid="class_sphere_1a4eb6f93f37ac009d4a1a08c2f20b2257" kindref="member">position</ref><sp/>=<sp/><ref refid="class_c___transform_component_1af55be14e486babdfe7fbb6ed643f2205" kindref="member">GetComponentPosition</ref>()<sp/>+<sp/><ref refid="class_o___component_1a1c41248880dad7961e94e9b539598354" kindref="member">GetOwner</ref>()-&gt;<ref refid="class_o___game_object_1acecc5cb8fdc72e9035273265d9b6b125" kindref="member">GetPosition</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//bool<sp/>C_SphereCollision::Collide(C_CollisionComponent*<sp/>otherCollider,<sp/>S_CollisionData&amp;<sp/>data)<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(dynamic_cast&lt;C_BoxCollision*&gt;(otherCollider))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SphereBoxCollision(*CollisionSphere,<sp/>dynamic_cast&lt;C_BoxCollision*&gt;(otherCollider)-&gt;GetCollisionBox(),<sp/>data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(dynamic_cast&lt;C_SphereCollision*&gt;(otherCollider))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>this;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SphereSphereCollision(*CollisionSphere,<sp/>dynamic_cast&lt;C_SphereCollision*&gt;(otherCollider)-&gt;GetCollisionSphere(),<sp/>data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_c___sphere_collider_1a4f70dfcc9a7cc28eafeccd3b671ee7a9" refkind="member"><highlight class="normal"><ref refid="class_c___sphere_collider_1a4f70dfcc9a7cc28eafeccd3b671ee7a9" kindref="member">C_SphereCollider::C_SphereCollider</ref>(<ref refid="class_o___game_object" kindref="compound">O_GameObject</ref>*<sp/>owner)<sp/>:<sp/><ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref>(owner)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//CollisionSphere<sp/>=<sp/>new<sp/>Sphere(GetComponentPosition()<sp/>+<sp/>GetOwner()-&gt;GetPosition(),<sp/>1.0f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___sphere_collider_1ad8876bdb3a2961e2f684680a50062fa8" kindref="member">CollisionSphere</ref><sp/>=<sp/><ref refid="_collision_component_8h_1a7f138e75fc3cc79e825c39e040690395ab7095f057db3fefa7325ad93a04e14fd" kindref="member">Sphere</ref>(<ref refid="class_c___transform_component_1af55be14e486babdfe7fbb6ed643f2205" kindref="member">GetComponentPosition</ref>()<sp/>+<sp/><ref refid="class_o___component_1a1c41248880dad7961e94e9b539598354" kindref="member">GetOwner</ref>()-&gt;GetPosition(),<sp/>1.0f);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_c___sphere_collider_1a117afb1b4d17a1636b9cb7be095b14bb" refkind="member"><highlight class="normal"><ref refid="class_c___sphere_collider_1a117afb1b4d17a1636b9cb7be095b14bb" kindref="member">C_SphereCollider::~C_SphereCollider</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(CollisionSphere)<sp/>delete(CollisionSphere);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Objects/Components/Colliders/SphereCollider.cpp"/>
  </compounddef>
</doxygen>
