<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="struct_f_transform" kind="struct" language="C++" prot="public">
    <compoundname>FTransform</compoundname>
    <includes refid="_f_transform_8h" local="no">FTransform.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_f_transform_1a87cf7a43bc519df3ec9280716dc8d532" prot="public" static="no" mutable="no">
        <type><ref refid="class_f_vector3" kindref="compound">FVector3</ref> *</type>
        <definition>FVector3* FTransform::Position</definition>
        <argsstring></argsstring>
        <name>Position</name>
        <qualifiedname>FTransform::Position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="17" column="10" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_transform_1aca636c27f09fc7cb5abdbc165a28a026" prot="public" static="no" mutable="no">
        <type><ref refid="class_f_vector3" kindref="compound">FVector3</ref> *</type>
        <definition>FVector3* FTransform::Scale</definition>
        <argsstring></argsstring>
        <name>Scale</name>
        <qualifiedname>FTransform::Scale</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="18" column="11" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_f_transform_1a2b7f02e8cd45e3a0216e92bfe1f291b7" prot="public" static="no" mutable="no">
        <type><ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref> *</type>
        <definition>FQuaternion* FTransform::Rotation</definition>
        <argsstring></argsstring>
        <name>Rotation</name>
        <qualifiedname>FTransform::Rotation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="19" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_f_transform_1a0e072a08f30724da83c707faba849438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTransform::FTransform</definition>
        <argsstring>()</argsstring>
        <name>FTransform</name>
        <qualifiedname>FTransform::FTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="11" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="6" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a46107a6d70411f20b167cd73d92411f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTransform::FTransform</definition>
        <argsstring>(const FTransform &amp;transform)</argsstring>
        <name>FTransform</name>
        <qualifiedname>FTransform::FTransform</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="12" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="13" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a7ce9fe46b6d4fb3f3113de6ac050bd04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTransform::FTransform</definition>
        <argsstring>(const FVector3 &amp;position, const FQuaternion &amp;rotation, const FVector3 &amp;scale)</argsstring>
        <name>FTransform</name>
        <qualifiedname>FTransform::FTransform</qualifiedname>
        <param>
          <type>const <ref refid="class_f_vector3" kindref="compound">FVector3</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_vector3" kindref="compound">FVector3</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="13" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a2423765e82d9549ccbe9551f39df8e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FTransform::~FTransform</definition>
        <argsstring>()</argsstring>
        <name>~FTransform</name>
        <qualifiedname>FTransform::~FTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="15" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a70014d87da8ca466ba1edf8418b4259e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_f_matrix4" kindref="compound">FMatrix4</ref></type>
        <definition>FMatrix4 FTransform::GetModelMatrix</definition>
        <argsstring>() const</argsstring>
        <name>GetModelMatrix</name>
        <qualifiedname>FTransform::GetModelMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="21" column="10" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a853becdcf792a36f994a49e550d863b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTransform::operator=</definition>
        <argsstring>(const FTransform &amp;transform)</argsstring>
        <name>operator=</name>
        <qualifiedname>FTransform::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="22" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1ac6f52405830be3b37afb2b886675fa57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FTransform::operator=</definition>
        <argsstring>(const FTransform *&amp;transform)</argsstring>
        <name>operator=</name>
        <qualifiedname>FTransform::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> *&amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="23" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1abce36743a82176782212b00c2e37f12c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTransform::operator==</definition>
        <argsstring>(const FTransform &amp;transform) const</argsstring>
        <name>operator==</name>
        <qualifiedname>FTransform::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="24" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1ac92ee08c20e5b2d3146f2bde96184109" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool FTransform::operator==</definition>
        <argsstring>(const FTransform *&amp;transform) const</argsstring>
        <name>operator==</name>
        <qualifiedname>FTransform::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> *&amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="25" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1aacf758f0557f45f3628615a81615408c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_f_transform" kindref="compound">FTransform</ref></type>
        <definition>FTransform FTransform::operator+</definition>
        <argsstring>(const FTransform &amp;transform) const</argsstring>
        <name>operator+</name>
        <qualifiedname>FTransform::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="26" column="12" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="53" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a381685efa1ed0ff64dbfa1090da7f801" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_f_transform" kindref="compound">FTransform</ref></type>
        <definition>FTransform FTransform::operator+</definition>
        <argsstring>(const FTransform *transform) const</argsstring>
        <name>operator+</name>
        <qualifiedname>FTransform::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_f_transform" kindref="compound">FTransform</ref> *</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="27" column="19" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a2379695ab15301ab9a6161012367e74d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTransform::SetPosition</definition>
        <argsstring>(const FVector3 &amp;position)</argsstring>
        <name>SetPosition</name>
        <qualifiedname>FTransform::SetPosition</qualifiedname>
        <param>
          <type>const <ref refid="class_f_vector3" kindref="compound">FVector3</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="29" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1a8846e889364a5c58e32d162ef3601c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTransform::SetRotation</definition>
        <argsstring>(const FQuaternion &amp;rotation)</argsstring>
        <name>SetRotation</name>
        <qualifiedname>FTransform::SetRotation</qualifiedname>
        <param>
          <type>const <ref refid="class_f_quaternion" kindref="compound">FQuaternion</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="30" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="struct_f_transform_1af48f218e4d31f0e50345f128e07e8771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FTransform::SetScale</definition>
        <argsstring>(const FVector3 &amp;scale)</argsstring>
        <name>SetScale</name>
        <qualifiedname>FTransform::SetScale</qualifiedname>
        <param>
          <type>const <ref refid="class_f_vector3" kindref="compound">FVector3</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="31" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>FQuaternion</label>
        <link refid="class_f_quaternion"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>FTransform</label>
        <link refid="struct_f_transform"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Position</edgelabel>
          <edgelabel>Scale</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>Rotation</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>FVector3</label>
        <link refid="class_f_vector3"/>
      </node>
      <node id="4">
        <label>FVector4</label>
        <link refid="class_f_vector4"/>
      </node>
    </collaborationgraph>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" line="8" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Math/FTransform.h" bodystart="9" bodyend="32"/>
    <listofallmembers>
      <member refid="struct_f_transform_1a0e072a08f30724da83c707faba849438" prot="public" virt="non-virtual"><scope>FTransform</scope><name>FTransform</name></member>
      <member refid="struct_f_transform_1a46107a6d70411f20b167cd73d92411f1" prot="public" virt="non-virtual"><scope>FTransform</scope><name>FTransform</name></member>
      <member refid="struct_f_transform_1a7ce9fe46b6d4fb3f3113de6ac050bd04" prot="public" virt="non-virtual"><scope>FTransform</scope><name>FTransform</name></member>
      <member refid="struct_f_transform_1a70014d87da8ca466ba1edf8418b4259e" prot="public" virt="non-virtual"><scope>FTransform</scope><name>GetModelMatrix</name></member>
      <member refid="struct_f_transform_1aacf758f0557f45f3628615a81615408c" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator+</name></member>
      <member refid="struct_f_transform_1a381685efa1ed0ff64dbfa1090da7f801" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator+</name></member>
      <member refid="struct_f_transform_1a853becdcf792a36f994a49e550d863b2" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator=</name></member>
      <member refid="struct_f_transform_1ac6f52405830be3b37afb2b886675fa57" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator=</name></member>
      <member refid="struct_f_transform_1abce36743a82176782212b00c2e37f12c" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator==</name></member>
      <member refid="struct_f_transform_1ac92ee08c20e5b2d3146f2bde96184109" prot="public" virt="non-virtual"><scope>FTransform</scope><name>operator==</name></member>
      <member refid="struct_f_transform_1a87cf7a43bc519df3ec9280716dc8d532" prot="public" virt="non-virtual"><scope>FTransform</scope><name>Position</name></member>
      <member refid="struct_f_transform_1a2b7f02e8cd45e3a0216e92bfe1f291b7" prot="public" virt="non-virtual"><scope>FTransform</scope><name>Rotation</name></member>
      <member refid="struct_f_transform_1aca636c27f09fc7cb5abdbc165a28a026" prot="public" virt="non-virtual"><scope>FTransform</scope><name>Scale</name></member>
      <member refid="struct_f_transform_1a2379695ab15301ab9a6161012367e74d" prot="public" virt="non-virtual"><scope>FTransform</scope><name>SetPosition</name></member>
      <member refid="struct_f_transform_1a8846e889364a5c58e32d162ef3601c30" prot="public" virt="non-virtual"><scope>FTransform</scope><name>SetRotation</name></member>
      <member refid="struct_f_transform_1af48f218e4d31f0e50345f128e07e8771" prot="public" virt="non-virtual"><scope>FTransform</scope><name>SetScale</name></member>
      <member refid="struct_f_transform_1a2423765e82d9549ccbe9551f39df8e99" prot="public" virt="non-virtual"><scope>FTransform</scope><name>~FTransform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
