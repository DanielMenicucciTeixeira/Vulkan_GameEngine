<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_oct_spatial_partition" kind="class" language="C++" prot="public">
    <compoundname>OctSpatialPartition</compoundname>
    <includes refid="_oct_spatial_partition_8h" local="no">OctSpatialPartition.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_oct_spatial_partition_1a9c0bb18c2fec9c6f1203b742527d31ec" prot="private" static="no" mutable="no">
        <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
        <definition>OctNode* OctSpatialPartition::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <qualifiedname>OctSpatialPartition::root</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="98" column="9" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_oct_spatial_partition_1aee055e17de47d8297c63e1b97fe9f2b6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> * &gt;</type>
        <definition>std::vector&lt;C_CollisionComponent*&gt; OctSpatialPartition::intersectionList</definition>
        <argsstring></argsstring>
        <name>intersectionList</name>
        <qualifiedname>OctSpatialPartition::intersectionList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="99" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_oct_spatial_partition_1a0b51720177a711397ec0c9845974ed30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OctSpatialPartition::OctSpatialPartition</definition>
        <argsstring>(float worldSize, unsigned int depth=3)</argsstring>
        <name>OctSpatialPartition</name>
        <qualifiedname>OctSpatialPartition::OctSpatialPartition</qualifiedname>
        <param>
          <type>float</type>
          <declname>worldSize</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
          <defval>3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="68" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1af0f9148ba9a47243de3b89232c2a3777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OctSpatialPartition::~OctSpatialPartition</definition>
        <argsstring>()</argsstring>
        <name>~OctSpatialPartition</name>
        <qualifiedname>OctSpatialPartition::~OctSpatialPartition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="70" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1acaf8c30ccb9f5de9a6a635120cdff9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::AddCollider</definition>
        <argsstring>(C_CollisionComponent *collider)</argsstring>
        <name>AddCollider</name>
        <qualifiedname>OctSpatialPartition::AddCollider</qualifiedname>
        <param>
          <type><ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> *</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="72" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="87" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1ab6baaa3b1c8331724abcd97ede3b58e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::set&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
        <definition>std::set&lt; OctNode * &gt; OctSpatialPartition::GetActiveLeaves</definition>
        <argsstring>() const</argsstring>
        <name>GetActiveLeaves</name>
        <qualifiedname>OctSpatialPartition::GetActiveLeaves</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="74" column="10" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="105" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a56539404d679edf5f0c6046a9b477d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> * &gt;</type>
        <definition>std::vector&lt; C_CollisionComponent * &gt; OctSpatialPartition::GetCollision</definition>
        <argsstring>(Ray &amp;ray)</argsstring>
        <name>GetCollision</name>
        <qualifiedname>OctSpatialPartition::GetCollision</qualifiedname>
        <param>
          <type><ref refid="class_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="76" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="112" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1aa6587b2a247704d3ada8fa024413b093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> * &gt;</type>
        <definition>std::vector&lt; C_CollisionComponent * &gt; OctSpatialPartition::GetCollision</definition>
        <argsstring>(Sphere &amp;sphere)</argsstring>
        <name>GetCollision</name>
        <qualifiedname>OctSpatialPartition::GetCollision</qualifiedname>
        <param>
          <type><ref refid="class_sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="77" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="133" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1af8d264687dc121d5cf15993f2b3daa3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> * &gt;</type>
        <definition>std::vector&lt; C_CollisionComponent * &gt; OctSpatialPartition::GetCollision</definition>
        <argsstring>(S_BoxBounds &amp;bounds)</argsstring>
        <name>GetCollision</name>
        <qualifiedname>OctSpatialPartition::GetCollision</qualifiedname>
        <param>
          <type><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="78" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="151" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1ad56e215258b64cbef9a8c22f5c900832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_c___collision_component" kindref="compound">C_CollisionComponent</ref> * &gt;</type>
        <definition>std::vector&lt; C_CollisionComponent * &gt; OctSpatialPartition::GetCollision</definition>
        <argsstring>(Box &amp;box)</argsstring>
        <name>GetCollision</name>
        <qualifiedname>OctSpatialPartition::GetCollision</qualifiedname>
        <param>
          <type><ref refid="class_box" kindref="compound">Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="79" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="169" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a609ac58c98e62193c46e8a85b668f861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::UpdateColliderNode</definition>
        <argsstring>(C_BoundingBox *collider)</argsstring>
        <name>UpdateColliderNode</name>
        <qualifiedname>OctSpatialPartition::UpdateColliderNode</qualifiedname>
        <param>
          <type><ref refid="class_c___bounding_box" kindref="compound">C_BoundingBox</ref> *</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="84" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="187" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a1f9cc46577de0665fe11ae28d3e07cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::UpdateColliderNode</definition>
        <argsstring>(C_SphereCollider *collider)</argsstring>
        <name>UpdateColliderNode</name>
        <qualifiedname>OctSpatialPartition::UpdateColliderNode</qualifiedname>
        <param>
          <type><ref refid="class_c___sphere_collider" kindref="compound">C_SphereCollider</ref> *</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="85" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="199" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1ad06869036dccfbe8c0828668ffdf5d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::UpdateColliderNode</definition>
        <argsstring>(C_BoxCollider *collider)</argsstring>
        <name>UpdateColliderNode</name>
        <qualifiedname>OctSpatialPartition::UpdateColliderNode</qualifiedname>
        <param>
          <type><ref refid="class_c___box_collider" kindref="compound">C_BoxCollider</ref> *</type>
          <declname>collider</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="86" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="211" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1af5513a0c48ba7e5ec4c5fdb682d2c329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
        <definition>OctNode * OctSpatialPartition::GetRoot</definition>
        <argsstring>()</argsstring>
        <name>GetRoot</name>
        <qualifiedname>OctSpatialPartition::GetRoot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="88" column="16" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a1bd157844e35173c247568704d8a7cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::Update</definition>
        <argsstring>(const float deltaTime_)</argsstring>
        <name>Update</name>
        <qualifiedname>OctSpatialPartition::Update</qualifiedname>
        <param>
          <type>const float</type>
          <declname>deltaTime_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="92" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="223" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_oct_spatial_partition_1aab95146e712ed0c4dfb5625cc4a098e7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::GetActiveLeaves</definition>
        <argsstring>(OctNode *cell, std::set&lt; OctNode * &gt; &amp;outSet) const</argsstring>
        <name>GetActiveLeaves</name>
        <qualifiedname>OctSpatialPartition::GetActiveLeaves</qualifiedname>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::set&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt; &amp;</type>
          <declname>outSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="95" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="234" bodyend="239"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_oct_spatial_partition_1a58a65c207ab6b33433547f17dd1ce61a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
        <definition>std::vector&lt; OctNode * &gt; OctSpatialPartition::GetCollidingNodes</definition>
        <argsstring>(Ray &amp;ray)</argsstring>
        <name>GetCollidingNodes</name>
        <qualifiedname>OctSpatialPartition::GetCollidingNodes</qualifiedname>
        <param>
          <type><ref refid="class_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="102" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a16da6a896a1d8f2a84923428a868154b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
        <definition>std::vector&lt; OctNode * &gt; OctSpatialPartition::GetCollidingNodes</definition>
        <argsstring>(S_BoxBounds bounds)</argsstring>
        <name>GetCollidingNodes</name>
        <qualifiedname>OctSpatialPartition::GetCollidingNodes</qualifiedname>
        <param>
          <type><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref></type>
          <declname>bounds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="103" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="250" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a8af22bf9538e8db3a0147db6b45e8340" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
        <definition>std::vector&lt; OctNode * &gt; OctSpatialPartition::GetCollidingNodes</definition>
        <argsstring>(Sphere sphere)</argsstring>
        <name>GetCollidingNodes</name>
        <qualifiedname>OctSpatialPartition::GetCollidingNodes</qualifiedname>
        <param>
          <type><ref refid="class_sphere" kindref="compound">Sphere</ref></type>
          <declname>sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="104" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="259" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a6ceafb45bd86ae48efa80d273b79d680" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
        <definition>std::vector&lt; OctNode * &gt; OctSpatialPartition::GetCollidingNodes</definition>
        <argsstring>(Box box)</argsstring>
        <name>GetCollidingNodes</name>
        <qualifiedname>OctSpatialPartition::GetCollidingNodes</qualifiedname>
        <param>
          <type><ref refid="class_box" kindref="compound">Box</ref></type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="105" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="268" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a90940513fdb983bb21a4168a4ba251c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::GetIntersectedLeaves</definition>
        <argsstring>(Ray &amp;ray, OctNode *cell, std::vector&lt; OctNode * &gt; nodes)</argsstring>
        <name>GetIntersectedLeaves</name>
        <qualifiedname>OctSpatialPartition::GetIntersectedLeaves</qualifiedname>
        <param>
          <type><ref refid="class_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>ray</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="108" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="277" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1ab48a70c228e8ac5c6d373c18d5aa7f87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::GetIntersectedLeaves</definition>
        <argsstring>(Sphere &amp;sphere, OctNode *cell, std::vector&lt; OctNode * &gt; nodes)</argsstring>
        <name>GetIntersectedLeaves</name>
        <qualifiedname>OctSpatialPartition::GetIntersectedLeaves</qualifiedname>
        <param>
          <type><ref refid="class_sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>sphere</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="109" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="292" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a2544499e1ffccb794d4d37fabe8abb09" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::GetIntersectedLeaves</definition>
        <argsstring>(S_BoxBounds bounds, OctNode *cell, std::vector&lt; OctNode * &gt; nodes)</argsstring>
        <name>GetIntersectedLeaves</name>
        <qualifiedname>OctSpatialPartition::GetIntersectedLeaves</qualifiedname>
        <param>
          <type><ref refid="struct_s___box_bounds" kindref="compound">S_BoxBounds</ref></type>
          <declname>bounds</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="110" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="303" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a03bb047dc849c77c175a1a98a6657821" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::GetIntersectedLeaves</definition>
        <argsstring>(Box &amp;box, OctNode *cell, std::vector&lt; OctNode * &gt; nodes)</argsstring>
        <name>GetIntersectedLeaves</name>
        <qualifiedname>OctSpatialPartition::GetIntersectedLeaves</qualifiedname>
        <param>
          <type><ref refid="class_box" kindref="compound">Box</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_oct_node" kindref="compound">OctNode</ref> * &gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="111" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="314" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a911ae50c3404c34459274368fcad1aa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::AddColliderToCell</definition>
        <argsstring>(C_BoundingBox *collider, OctNode *cell)</argsstring>
        <name>AddColliderToCell</name>
        <qualifiedname>OctSpatialPartition::AddColliderToCell</qualifiedname>
        <param>
          <type><ref refid="class_c___bounding_box" kindref="compound">C_BoundingBox</ref> *</type>
          <declname>collider</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="114" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="326" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a69a1febef998d4b3ba1e9fe9f5980867" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::AddColliderToCell</definition>
        <argsstring>(C_SphereCollider *collider, OctNode *cell)</argsstring>
        <name>AddColliderToCell</name>
        <qualifiedname>OctSpatialPartition::AddColliderToCell</qualifiedname>
        <param>
          <type><ref refid="class_c___sphere_collider" kindref="compound">C_SphereCollider</ref> *</type>
          <declname>collider</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="115" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="338" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_oct_spatial_partition_1a63e2fdd4a27c37708a1938d440af5bd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OctSpatialPartition::AddColliderToCell</definition>
        <argsstring>(C_BoxCollider *collider, OctNode *cell)</argsstring>
        <name>AddColliderToCell</name>
        <qualifiedname>OctSpatialPartition::AddColliderToCell</qualifiedname>
        <param>
          <type><ref refid="class_c___box_collider" kindref="compound">C_BoxCollider</ref> *</type>
          <declname>collider</declname>
        </param>
        <param>
          <type><ref refid="class_oct_node" kindref="compound">OctNode</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="116" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.cpp" bodystart="350" bodyend="360"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" line="64" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Core/OctSpatialPartition.h" bodystart="65" bodyend="120"/>
    <listofallmembers>
      <member refid="class_oct_spatial_partition_1acaf8c30ccb9f5de9a6a635120cdff9b4" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>AddCollider</name></member>
      <member refid="class_oct_spatial_partition_1a911ae50c3404c34459274368fcad1aa0" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>AddColliderToCell</name></member>
      <member refid="class_oct_spatial_partition_1a69a1febef998d4b3ba1e9fe9f5980867" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>AddColliderToCell</name></member>
      <member refid="class_oct_spatial_partition_1a63e2fdd4a27c37708a1938d440af5bd1" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>AddColliderToCell</name></member>
      <member refid="class_oct_spatial_partition_1ab6baaa3b1c8331724abcd97ede3b58e4" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetActiveLeaves</name></member>
      <member refid="class_oct_spatial_partition_1aab95146e712ed0c4dfb5625cc4a098e7" prot="protected" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetActiveLeaves</name></member>
      <member refid="class_oct_spatial_partition_1a58a65c207ab6b33433547f17dd1ce61a" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollidingNodes</name></member>
      <member refid="class_oct_spatial_partition_1a16da6a896a1d8f2a84923428a868154b" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollidingNodes</name></member>
      <member refid="class_oct_spatial_partition_1a8af22bf9538e8db3a0147db6b45e8340" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollidingNodes</name></member>
      <member refid="class_oct_spatial_partition_1a6ceafb45bd86ae48efa80d273b79d680" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollidingNodes</name></member>
      <member refid="class_oct_spatial_partition_1a56539404d679edf5f0c6046a9b477d32" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollision</name></member>
      <member refid="class_oct_spatial_partition_1aa6587b2a247704d3ada8fa024413b093" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollision</name></member>
      <member refid="class_oct_spatial_partition_1af8d264687dc121d5cf15993f2b3daa3d" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollision</name></member>
      <member refid="class_oct_spatial_partition_1ad56e215258b64cbef9a8c22f5c900832" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetCollision</name></member>
      <member refid="class_oct_spatial_partition_1a90940513fdb983bb21a4168a4ba251c8" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetIntersectedLeaves</name></member>
      <member refid="class_oct_spatial_partition_1ab48a70c228e8ac5c6d373c18d5aa7f87" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetIntersectedLeaves</name></member>
      <member refid="class_oct_spatial_partition_1a2544499e1ffccb794d4d37fabe8abb09" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetIntersectedLeaves</name></member>
      <member refid="class_oct_spatial_partition_1a03bb047dc849c77c175a1a98a6657821" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetIntersectedLeaves</name></member>
      <member refid="class_oct_spatial_partition_1af5513a0c48ba7e5ec4c5fdb682d2c329" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>GetRoot</name></member>
      <member refid="class_oct_spatial_partition_1aee055e17de47d8297c63e1b97fe9f2b6" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>intersectionList</name></member>
      <member refid="class_oct_spatial_partition_1a0b51720177a711397ec0c9845974ed30" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>OctSpatialPartition</name></member>
      <member refid="class_oct_spatial_partition_1a9c0bb18c2fec9c6f1203b742527d31ec" prot="private" virt="non-virtual"><scope>OctSpatialPartition</scope><name>root</name></member>
      <member refid="class_oct_spatial_partition_1a1bd157844e35173c247568704d8a7cc9" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>Update</name></member>
      <member refid="class_oct_spatial_partition_1a609ac58c98e62193c46e8a85b668f861" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>UpdateColliderNode</name></member>
      <member refid="class_oct_spatial_partition_1a1f9cc46577de0665fe11ae28d3e07cc2" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>UpdateColliderNode</name></member>
      <member refid="class_oct_spatial_partition_1ad06869036dccfbe8c0828668ffdf5d26" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>UpdateColliderNode</name></member>
      <member refid="class_oct_spatial_partition_1af0f9148ba9a47243de3b89232c2a3777" prot="public" virt="non-virtual"><scope>OctSpatialPartition</scope><name>~OctSpatialPartition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
