<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="class_open_g_l_shader_manager" kind="class" language="C++" prot="public">
    <compoundname>OpenGLShaderManager</compoundname>
    <includes refid="_open_g_l_shader_manager_8h" local="no">OpenGLShaderManager.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_open_g_l_shader_manager_1a4be83beaf735609b26635a4a9d151d3b" prot="protected" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, unsigned &gt;</type>
        <definition>std::unordered_map&lt;std::string, unsigned&gt; OpenGLShaderManager::Programs</definition>
        <argsstring></argsstring>
        <name>Programs</name>
        <qualifiedname>OpenGLShaderManager::Programs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="26" column="20" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_open_g_l_shader_manager_1ad1fd616cffadd3f1c2e81d8d17434644" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenGLShaderManager::OpenGLShaderManager</definition>
        <argsstring>(const OpenGLShaderManager &amp;)=delete</argsstring>
        <name>OpenGLShaderManager</name>
        <qualifiedname>OpenGLShaderManager::OpenGLShaderManager</qualifiedname>
        <param>
          <type>const <ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="11" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a4ea3b99a10dd92569a932a4a9934bf03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenGLShaderManager::OpenGLShaderManager</definition>
        <argsstring>(OpenGLShaderManager &amp;&amp;)=delete</argsstring>
        <name>OpenGLShaderManager</name>
        <qualifiedname>OpenGLShaderManager::OpenGLShaderManager</qualifiedname>
        <param>
          <type><ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="12" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a4852298cded45a008b3a05ed019c6cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;</type>
        <definition>OpenGLShaderManager &amp; OpenGLShaderManager::operator=</definition>
        <argsstring>(const OpenGLShaderManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>OpenGLShaderManager::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="13" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a6056fbe55b941ac0b23a49da98540c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;</type>
        <definition>OpenGLShaderManager &amp; OpenGLShaderManager::operator=</definition>
        <argsstring>(OpenGLShaderManager &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>OpenGLShaderManager::operator=</qualifiedname>
        <param>
          <type><ref refid="class_open_g_l_shader_manager" kindref="compound">OpenGLShaderManager</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="14" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a7bde861eb7cb5ce7b4efa1ef7341993f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenGLShaderManager::OpenGLShaderManager</definition>
        <argsstring>()</argsstring>
        <name>OpenGLShaderManager</name>
        <qualifiedname>OpenGLShaderManager::OpenGLShaderManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="16" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a6947610e81bde8798e54c6a30260552f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>OpenGLShaderManager::~OpenGLShaderManager</definition>
        <argsstring>()</argsstring>
        <name>~OpenGLShaderManager</name>
        <qualifiedname>OpenGLShaderManager::~OpenGLShaderManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="17" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a6fb65fb8a7d16be2fefb2f7dc8724f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenGLShaderManager::CreateShaderProgram</definition>
        <argsstring>(const std::string &amp;shaderName, const std::string &amp;vertexShaderPath, const std::string &amp;fragmentShaderPath)</argsstring>
        <name>CreateShaderProgram</name>
        <qualifiedname>OpenGLShaderManager::CreateShaderProgram</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>shaderName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>vertexShaderPath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fragmentShaderPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="19" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="15" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1aad4274d965d9f28a2d3b5cb3c8020c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int OpenGLShaderManager::GetShader</definition>
        <argsstring>(const std::string &amp;shaderName)</argsstring>
        <name>GetShader</name>
        <qualifiedname>OpenGLShaderManager::GetShader</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>shaderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="20" column="14" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a90ebcf4cf4564b78726621daf1a16923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OpenGLShaderManager::CleanUp</definition>
        <argsstring>()</argsstring>
        <name>CleanUp</name>
        <qualifiedname>OpenGLShaderManager::CleanUp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="21" column="6" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_open_g_l_shader_manager_1adc981decf8de2aa7072318f32498971a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string OpenGLShaderManager::ReadShader</definition>
        <argsstring>(const std::string &amp;filePath)</argsstring>
        <name>ReadShader</name>
        <qualifiedname>OpenGLShaderManager::ReadShader</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="24" column="13" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="71" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_open_g_l_shader_manager_1a9d23b07654c5c10f67eb416afbef3e7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int OpenGLShaderManager::CreateShader</definition>
        <argsstring>(unsigned int shaderType, const std::string &amp;source, const std::string &amp;shaderName)</argsstring>
        <name>CreateShader</name>
        <qualifiedname>OpenGLShaderManager::CreateShader</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>shaderType</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>shaderName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="25" column="14" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.cpp" bodystart="92" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" line="8" column="1" bodyfile="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/OpenGL/OpenGLShaderManager.h" bodystart="9" bodyend="28"/>
    <listofallmembers>
      <member refid="class_open_g_l_shader_manager_1a90ebcf4cf4564b78726621daf1a16923" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>CleanUp</name></member>
      <member refid="class_open_g_l_shader_manager_1a9d23b07654c5c10f67eb416afbef3e7c" prot="protected" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>CreateShader</name></member>
      <member refid="class_open_g_l_shader_manager_1a6fb65fb8a7d16be2fefb2f7dc8724f5f" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>CreateShaderProgram</name></member>
      <member refid="class_open_g_l_shader_manager_1aad4274d965d9f28a2d3b5cb3c8020c59" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>GetShader</name></member>
      <member refid="class_open_g_l_shader_manager_1ad1fd616cffadd3f1c2e81d8d17434644" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>OpenGLShaderManager</name></member>
      <member refid="class_open_g_l_shader_manager_1a4ea3b99a10dd92569a932a4a9934bf03" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>OpenGLShaderManager</name></member>
      <member refid="class_open_g_l_shader_manager_1a7bde861eb7cb5ce7b4efa1ef7341993f" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>OpenGLShaderManager</name></member>
      <member refid="class_open_g_l_shader_manager_1a4852298cded45a008b3a05ed019c6cae" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>operator=</name></member>
      <member refid="class_open_g_l_shader_manager_1a6056fbe55b941ac0b23a49da98540c10" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>operator=</name></member>
      <member refid="class_open_g_l_shader_manager_1a4be83beaf735609b26635a4a9d151d3b" prot="protected" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>Programs</name></member>
      <member refid="class_open_g_l_shader_manager_1adc981decf8de2aa7072318f32498971a" prot="protected" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>ReadShader</name></member>
      <member refid="class_open_g_l_shader_manager_1a6947610e81bde8798e54c6a30260552f" prot="public" virt="non-virtual"><scope>OpenGLShaderManager</scope><name>~OpenGLShaderManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
