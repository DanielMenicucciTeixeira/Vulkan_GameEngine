<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="_vulkan_manager_8cpp" kind="file" language="C++">
    <compoundname>VulkanManager.cpp</compoundname>
    <includes refid="_vulkan_manager_8h" local="yes">VulkanManager.h</includes>
    <includes refid="_level_graph_8h" local="yes">LevelGraph.h</includes>
    <includes refid="_core_engine_8h" local="yes">CoreEngine.h</includes>
    <includes refid="_f_vector2_8h" local="yes">Math/FVector2.h</includes>
    <includes refid="_material_8h" local="yes">Renderers/Materials/Material.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes refid="_vulkan_debugger_8h" local="yes">VulkanDebugger.h</includes>
    <includes refid="_vulkan_devices_8h" local="yes">VulkanDevices.h</includes>
    <includes refid="_vulkan_pipeline_manager_8h" local="yes">VulkanPipelineManager.h</includes>
    <includes refid="_vulkan_swapchain_manager_8h" local="yes">VulkanSwapchainManager.h</includes>
    <includes refid="_vertex_8h" local="yes">Renderers/Vertex.h</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes local="no">SDL_vulkan.h</includes>
    <includes local="no">SDL.h</includes>
    <includes refid="_render_object_8h" local="yes">Renderers/RenderObject.h</includes>
    <includes refid="_render_initialization_data_8h" local="yes">Renderers/RenderInitializationData.h</includes>
    <incdepgraph>
      <node id="25">
        <label>Clock.h</label>
        <link refid="_clock_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>CoreEngine.h</label>
        <link refid="_core_engine_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>Core/DebugLogger.h</label>
        <link refid="_debug_logger_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>GameInterface.h</label>
        <link refid="_game_interface_8h"/>
      </node>
      <node id="8">
        <label>LevelGraph.h</label>
        <link refid="_level_graph_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>Window.h</label>
        <link refid="_window_8h"/>
      </node>
      <node id="13">
        <label>../Math/FMatrix4.h</label>
        <link refid="_f_matrix4_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Math/FVector2.h</label>
        <link refid="_f_vector2_8h"/>
      </node>
      <node id="18">
        <label>Math/FVector3.h</label>
        <link refid="_f_vector3_8h"/>
      </node>
      <node id="14">
        <label>FVector4.h</label>
        <link refid="_f_vector4_8h"/>
      </node>
      <node id="44">
        <label>Component.h</label>
        <link refid="_component_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>RenderableComponent.h</label>
        <link refid="_renderable_component_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>Objects/Components/StaticMeshComponent.h</label>
        <link refid="_static_mesh_component_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>TransformComponent.h</label>
        <link refid="_transform_component_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Objects/GameObjects/GameObject.h</label>
        <link refid="_game_object_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../Objects/Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Renderers/Materials/Material.h</label>
        <link refid="_material_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Renderers/RenderInitializationData.h</label>
        <link refid="_render_initialization_data_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>Renderers/RenderObject.h</label>
        <link refid="_render_object_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Renderers/Renderer.h</label>
        <link refid="_renderer_8h"/>
      </node>
      <node id="17">
        <label>UniformBufferObject.h</label>
        <link refid="_uniform_buffer_object_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Vertex.h</label>
        <link refid="_vertex_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>VulkanDebugger.h</label>
        <link refid="_vulkan_debugger_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>VulkanDevices.h</label>
        <link refid="_vulkan_devices_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanManager.cpp</label>
        <link refid="_vulkan_manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>VulkanManager.h</label>
        <link refid="_vulkan_manager_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>VulkanPipelineManager.h</label>
        <link refid="_vulkan_pipeline_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>VulkanSwapchainManager.h</label>
        <link refid="_vulkan_swapchain_manager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>SDL.h</label>
      </node>
      <node id="20">
        <label>SDL_image.h</label>
      </node>
      <node id="37">
        <label>SDL_vulkan.h</label>
      </node>
      <node id="34">
        <label>array</label>
      </node>
      <node id="26">
        <label>chrono</label>
      </node>
      <node id="27">
        <label>cstdlib</label>
      </node>
      <node id="30">
        <label>fstream</label>
      </node>
      <node id="29">
        <label>iostream</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="10">
        <label>set</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="36">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_manager_8h" kindref="compound">VulkanManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_level_graph_8h" kindref="compound">LevelGraph.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_core_engine_8h" kindref="compound">CoreEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_vector2_8h" kindref="compound">Math/FVector2.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_material_8h" kindref="compound">Renderers/Materials/Material.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//Basic<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_debugger_8h" kindref="compound">VulkanDebugger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_devices_8h" kindref="compound">VulkanDevices.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_pipeline_manager_8h" kindref="compound">VulkanPipelineManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vulkan_swapchain_manager_8h" kindref="compound">VulkanSwapchainManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_vertex_8h" kindref="compound">Renderers/Vertex.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//Vulkan<sp/>API<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//SDL<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL_vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SDL.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//ExtraIncludes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>TINYOBJLOADER_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;tiny_obj_loader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_object_8h" kindref="compound">Renderers/RenderObject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_render_initialization_data_8h" kindref="compound">Renderers/RenderInitializationData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_vulkan_manager_1a4afd1df437579b3bfa25335161b67586" refkind="member"><highlight class="normal"><ref refid="class_vulkan_manager_1a4afd1df437579b3bfa25335161b67586" kindref="member">VulkanManager::VulkanManager</ref>()<sp/>:<sp/><ref refid="class_renderer" kindref="compound">Renderer</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_renderer_1a32cee2c0cf19d5fb1ef6d0f116adaac8" kindref="member">Type</ref><sp/>=<sp/><ref refid="_renderer_8h_1ab3631679e12986a42ced57267776c459a7ab1655e224e3b992000513d4ed1154c" kindref="member">VULKAN</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_debugger" kindref="compound">VulkanDebugger</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_devices" kindref="compound">VulkanDevices</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_pipeline_manager" kindref="compound">VulkanPipelineManager</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_swapchain_manager" kindref="compound">VulkanSwapchainManager</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_queue_struct" kindref="compound">QueueStruct</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_vulkan_manager_1a4c104bd08d885970ce801eb7625bda23" refkind="member"><highlight class="normal"><ref refid="class_vulkan_manager_1a4c104bd08d885970ce801eb7625bda23" kindref="member">VulkanManager::~VulkanManager</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="class_vulkan_manager_1a6caf7ff23e6843c357be07f7d047b5f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a6caf7ff23e6843c357be07f7d047b5f8" kindref="member">VulkanManager::FramebufferResizeCallback</ref>()</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1af2ef81db8c3d0a265c847574aa579859" kindref="member">FramebufferResized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="class_vulkan_manager_1ac72648f118b7e64f8c53ab7ecf152940" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ac72648f118b7e64f8c53ab7ecf152940" kindref="member">VulkanManager::UpdateWithNewObjects</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ab1a147e9bc74c2dd17bf0bb2335edcb4" kindref="member">CreateVertexBuffers</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a1d0cda14957e9371dffbe89cfb61a02d" kindref="member">CreateIndexBuffers</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a1fb4d08af0053fd690cdf10b2aeaa4c4" kindref="member">CreateDescriptorSetLayouts</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a8065f8027198ed42a4b6213f4ee0e418" kindref="member">CreateTextureImage</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a1aa5229606095582ea49a91ab6a2df95" kindref="member">RecreateSwapchain</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" refkind="member"><highlight class="normal">VkDevice_T*<sp/><ref refid="class_vulkan_manager_1a2abbca60c32106a830862ee5b2c62324" kindref="member">VulkanManager::GetLogicalDevice</ref>()</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check<sp/>=<sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_vulkan_manager_1aa2b520b38ac96355a3c6f435b6519d03" refkind="member"><highlight class="normal">VkPhysicalDevice_T*<sp/><ref refid="class_vulkan_manager_1aa2b520b38ac96355a3c6f435b6519d03" kindref="member">VulkanManager::GetPhysicalDevice</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a863c71c74a3cbab440b1ab0cf0493fcf" kindref="member">GetPhysicalDevice</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_vulkan_manager_1ae389bc59927a3c47de38545a13d78376" refkind="member"><highlight class="normal"><ref refid="struct_swapchain_support_details" kindref="compound">SwapchainSupportDetails</ref><sp/><ref refid="class_vulkan_manager_1ae389bc59927a3c47de38545a13d78376" kindref="member">VulkanManager::GetSwapchainSupportDetails</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1ae1089e44f5fc6f5c75a59aff9ec2f7d2" kindref="member">GetSwapchainSupportDetails</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_vulkan_manager_1a0162037b619139d8ef5f3d669865fe1f" refkind="member"><highlight class="normal">VkExtent2D*<sp/><ref refid="class_vulkan_manager_1a0162037b619139d8ef5f3d669865fe1f" kindref="member">VulkanManager::GetSwapchainExtent</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a4c610260ff5d865b331a4f7a5ec503c8" kindref="member">GetExtent</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_vulkan_manager_1ab1195a9015bb201e748021132b94b17a" refkind="member"><highlight class="normal">std::unordered_map&lt;std::string,<sp/>VkDescriptorSetLayout_T*&gt;<sp/><ref refid="class_vulkan_manager_1ab1195a9015bb201e748021132b94b17a" kindref="member">VulkanManager::GetDescriptorSetLayoutsByShader</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1af1be918f69f619b5acda0809329e57d1" kindref="member">GetDescriptorLayoutsByShader</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_vulkan_manager_1a3374e79b099201dbd8854177763255f3" refkind="member"><highlight class="normal">VkRenderPass_T*<sp/><ref refid="class_vulkan_manager_1a3374e79b099201dbd8854177763255f3" kindref="member">VulkanManager::GetRenderPass</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a10d461a65cf265a985826ffa2ee3cc45" kindref="member">GetRenderPass</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_vulkan_manager_1a83fa696ceab6dee9118110033db23a7d" refkind="member"><highlight class="normal"><ref refid="struct_queue_family_indices" kindref="compound">QueueFamilyIndices</ref><sp/><ref refid="class_vulkan_manager_1a83fa696ceab6dee9118110033db23a7d" kindref="member">VulkanManager::FindQueueFamilies</ref>(VkPhysicalDevice_T*<sp/>physicalDevice)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_queue_family_indices" kindref="compound">QueueFamilyIndices</ref><sp/>indices;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>queueFamilyCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,<sp/>&amp;queueFamilyCount,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;VkQueueFamilyProperties&gt;<sp/>queueFamilies(queueFamilyCount);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,<sp/>&amp;queueFamilyCount,<sp/>queueFamilies.data());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>queueFamily<sp/>:<sp/>queueFamilies)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queueFamily.queueFlags<sp/>&amp;<sp/>VK_QUEUE_GRAPHICS_BIT)<sp/>indices.<ref refid="struct_queue_family_indices_1af8fbfd2dfdf24e0741ebe51a1a84055f" kindref="member">GraphicsFamily</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBool32<sp/>presentSupport<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice,<sp/>i,<sp/><ref refid="class_vulkan_manager_1ac54b3c21dd8b2be993bcf93b22d89dbf" kindref="member">Surface</ref>,<sp/>&amp;presentSupport);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(presentSupport)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.<ref refid="struct_queue_family_indices_1acc6594f5576b6e83be67e89733e9e380" kindref="member">PresentationFamily</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indices.<ref refid="struct_queue_family_indices_1aa76a81b99ede5c37d75423298765b41c" kindref="member">IsComplete</ref>())<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_vulkan_manager_1a00263d73a509a1314c313cf494d5543e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a00263d73a509a1314c313cf494d5543e" kindref="member">VulkanManager::FindMemoryType</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>typeFilter,<sp/><ref refid="_vulkan_manager_8h_1a06f71178c68bf5712dbec35d6f124122" kindref="member">VkMemoryPropertyFlags</ref><sp/>properties)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPhysicalDeviceMemoryProperties<sp/>memProperties;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetPhysicalDeviceMemoryProperties(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a863c71c74a3cbab440b1ab0cf0493fcf" kindref="member">GetPhysicalDevice</ref>(),<sp/>&amp;memProperties);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>memProperties.memoryTypeCount;<sp/>i++)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((typeFilter<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>&amp;&amp;<sp/>(memProperties.memoryTypes[i].propertyFlags<sp/>&amp;<sp/>properties)<sp/>==<sp/>properties)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>suitable<sp/>memory<sp/>type!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">VulkanManager::CreateBuffer</ref>(<ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>size,<sp/><ref refid="_vulkan_manager_8h_1ab221f627433dcae79b6a004fc42b50a9" kindref="member">VkBufferUsageFlags</ref><sp/>usage,<sp/><ref refid="_vulkan_manager_8h_1a06f71178c68bf5712dbec35d6f124122" kindref="member">VkMemoryPropertyFlags</ref><sp/>properties,<sp/>VkBuffer_T*&amp;<sp/>buffer,<sp/>VkDeviceMemory_T*&amp;<sp/>bufferMemory)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBufferCreateInfo<sp/>bufferInfo{};</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.usage<sp/>=<sp/>usage;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.sharingMode<sp/>=<sp/>VK_SHARING_MODE_EXCLUSIVE;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateBuffer(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;bufferInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;buffer)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>buffer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>VkMemoryRequirements<sp/>memRequirements;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>vkGetBufferMemoryRequirements(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>buffer,<sp/>&amp;memRequirements);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>VkMemoryAllocateInfo<sp/>allocInfo{};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.allocationSize<sp/>=<sp/>memRequirements.size;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.memoryTypeIndex<sp/>=<sp/><ref refid="class_vulkan_manager_1a00263d73a509a1314c313cf494d5543e" kindref="member">FindMemoryType</ref>(memRequirements.memoryTypeBits,<sp/>properties);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkAllocateMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;allocInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;bufferMemory)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>allocate<sp/>buffer<sp/>memory!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>vkBindBufferMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>buffer,<sp/>bufferMemory,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_vulkan_manager_1a1aa5229606095582ea49a91ab6a2df95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a1aa5229606095582ea49a91ab6a2df95" kindref="member">VulkanManager::RecreateSwapchain</ref>()</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a65efa17d731847cee0f6c85607f37faa" kindref="member">RecreationCleanUp</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>vkFreeCommandBuffers(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.size()),<sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.data());</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a7723137432b6d07f111510dd4fab6f4e" kindref="member">CreateSwapChain</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1ad073c1e97745d57d28a1b8d5d66a1e0b" kindref="member">CreateImageViews</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a9687d1e5b5289269e183c3d8f0674c4c" kindref="member">CreateRenderPass</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ac1475be6f80a0b250b86e03b58a063d5" kindref="member">CreateGraphicsPipelines</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a7b354080d3cfbb054fdc9772db643b56" kindref="member">CreateDepthResources</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a0f5362626d30524092d3c1f2cd89ce1c" kindref="member">CreateFramebuffers</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a22df6a1996a2afc5b3cee779ded2c7d6" kindref="member">CreateUniformBuffers</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a78317ec976a8be58656dda76310d24c4" kindref="member">CreateDescriptorPool</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a5f87eaa2ed9df4c246df5b0136c647eb" kindref="member">CreateDescriptorSets</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acf8e57a71e7cf0d824b415361aa6c835" kindref="member">CreateCommandBuffers</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_vulkan_manager_1a4915d3e8ef605e04666cf5c333bcaa59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a4915d3e8ef605e04666cf5c333bcaa59" kindref="member">VulkanManager::CreateCommandPool</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_queue_family_indices" kindref="compound">QueueFamilyIndices</ref><sp/>queueFamilyIndices<sp/>=<sp/><ref refid="class_vulkan_manager_1a83fa696ceab6dee9118110033db23a7d" kindref="member">FindQueueFamilies</ref>(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a863c71c74a3cbab440b1ab0cf0493fcf" kindref="member">GetPhysicalDevice</ref>());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandPoolCreateInfo<sp/>poolInfo{};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.queueFamilyIndex<sp/>=<sp/>queueFamilyIndices.<ref refid="struct_queue_family_indices_1af8fbfd2dfdf24e0741ebe51a1a84055f" kindref="member">GraphicsFamily</ref>.value();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.flags<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateCommandPool(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;poolInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>create<sp/>command<sp/>pool!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_vulkan_manager_1acf8e57a71e7cf0d824b415361aa6c835" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1acf8e57a71e7cf0d824b415361aa6c835" kindref="member">VulkanManager::CreateCommandBuffers</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.resize(<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a8124d82d5088cd3aa3bcfb2fe509ec81" kindref="member">GetFramebuffers</ref>().size());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferAllocateInfo<sp/>allocInfo{};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.commandPool<sp/>=<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.level<sp/>=<sp/>VK_COMMAND_BUFFER_LEVEL_PRIMARY;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.commandBufferCount<sp/>=<sp/>(uint32_t)<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.size();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkAllocateCommandBuffers(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;allocInfo,<sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.data())<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>allocate<sp/>command<sp/>buffers!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.size();<sp/>i++)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkCommandBufferBeginInfo<sp/>beginInfo{};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginInfo.flags<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginInfo.pInheritanceInfo<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkBeginCommandBuffer(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>&amp;beginInfo)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>begin<sp/>recording<sp/>command<sp/>buffer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkRenderPassBeginInfo<sp/>renderPassInfo{};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.renderPass<sp/>=<sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a10d461a65cf265a985826ffa2ee3cc45" kindref="member">GetRenderPass</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.framebuffer<sp/>=<sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a8124d82d5088cd3aa3bcfb2fe509ec81" kindref="member">GetFramebuffers</ref>()[i];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.renderArea.offset<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.renderArea.extent<sp/>=<sp/>*<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a4c610260ff5d865b331a4f7a5ec503c8" kindref="member">GetExtent</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;VkClearValue,<sp/>2&gt;<sp/>clearValues{};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearValues[0].color<sp/>=<sp/>{<sp/>0.0f,<sp/>0.0f,<sp/>0.0f,<sp/>1.0f<sp/>};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clearValues[1].depthStencil<sp/>=<sp/>{<sp/>1.0f,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.clearValueCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(clearValues.size());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>renderPassInfo.pClearValues<sp/>=<sp/>clearValues.data();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>offsets[]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkViewport<sp/>viewport{};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.x<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.y<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.width<sp/>=<sp/>(float)<ref refid="class_vulkan_manager_1a0162037b619139d8ef5f3d669865fe1f" kindref="member">GetSwapchainExtent</ref>()-&gt;width;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.height<sp/>=<sp/>(float)<ref refid="class_vulkan_manager_1a0162037b619139d8ef5f3d669865fe1f" kindref="member">GetSwapchainExtent</ref>()-&gt;height;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.minDepth<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.maxDepth<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkRect2D<sp/>scissor{};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.offset<sp/>=<sp/>{<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.extent<sp/>=<sp/>*<ref refid="class_vulkan_manager_1a0162037b619139d8ef5f3d669865fe1f" kindref="member">GetSwapchainExtent</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBeginRenderPass(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>&amp;renderPassInfo,<sp/>VK_SUBPASS_CONTENTS_INLINE);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdSetViewport(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>0,<sp/>1,<sp/>&amp;viewport);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdSetScissor(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>0,<sp/>1,<sp/>&amp;scissor);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shader<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindPipeline(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,<sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ad45ea7559aba44bf31bedc59072de077" kindref="member">GetPipelinesMap</ref>()[(*shader.second.begin())-&gt;GetShaderInfo().Name].first);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>material<sp/>:<sp/>shader.second)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1a938429c168b5df4f866e91eee4b261c6" kindref="member">MeshesByMaterial</ref>[material])</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindVertexBuffers(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>0,<sp/>1,<sp/>&amp;<ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;VertexBuffer,<sp/>offsets);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindIndexBuffer(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;IndexBuffer,<sp/>0,<sp/>VK_INDEX_TYPE_UINT32);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>model<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1a1bec261b5b349558a142606a11fb4aca" kindref="member">InstancesByMesh</ref>[mesh])</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1a0d6060302669152f6bf18b59ebc8d35f" kindref="member">Models</ref>[model])</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindDescriptorSets(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,<sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ad45ea7559aba44bf31bedc59072de077" kindref="member">GetPipelinesMap</ref>()[(*shader.second.begin())-&gt;GetShaderInfo().Name].second,<sp/>0,<sp/>1,<sp/>&amp;<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1af842a4c57909121a978f28d1e2fae1b0" kindref="member">GetDescriptorSetsMap</ref>()[model][i],<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdDrawIndexed(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i],<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mesh-&gt;Indices.size()),<sp/>1,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdEndRenderPass(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i]);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkEndCommandBuffer(<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[i])<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>record<sp/>command<sp/>buffer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="class_vulkan_manager_1ab1a147e9bc74c2dd17bf0bb2335edcb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ab1a147e9bc74c2dd17bf0bb2335edcb4" kindref="member">VulkanManager::CreateVertexBuffers</ref>()</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1aeeee63d17a25010a2b1ed585d74d5b6b" kindref="member">Meshes</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>bufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s___vertex" kindref="compound">S_Vertex</ref>)<sp/>*<sp/>mesh-&gt;Vertices.size();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBuffer<sp/>stagingBuffer;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceMemory<sp/>stagingBufferMemory;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(bufferSize,<sp/>VK_BUFFER_USAGE_TRANSFER_SRC_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/>stagingBuffer,<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/>0,<sp/>bufferSize,<sp/>0,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/>mesh-&gt;Vertices.data(),<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)bufferSize);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_s___mesh_data" kindref="compound">S_MeshData</ref>();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(bufferSize,<sp/>VK_BUFFER_USAGE_TRANSFER_DST_BIT<sp/>|<sp/>VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;VertexBuffer,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;VertexBufferMemory);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a11630c856442048b0f08cb0094ac5e68" kindref="member">CopyBuffer</ref>(stagingBuffer,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;VertexBuffer,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_vulkan_manager_1a1d0cda14957e9371dffbe89cfb61a02d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a1d0cda14957e9371dffbe89cfb61a02d" kindref="member">VulkanManager::CreateIndexBuffers</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1aeeee63d17a25010a2b1ed585d74d5b6b" kindref="member">Meshes</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>bufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>*<sp/>mesh-&gt;Indices.size();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBuffer<sp/>stagingBuffer;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkDeviceMemory<sp/>stagingBufferMemory;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(bufferSize,<sp/>VK_BUFFER_USAGE_TRANSFER_SRC_BIT,<sp/>VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT<sp/>|<sp/>VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,<sp/>stagingBuffer,<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkMapMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/>0,<sp/>bufferSize,<sp/>0,<sp/>&amp;data);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/>mesh-&gt;Indices.data(),<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)bufferSize);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkUnmapMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acb9828b6ef1d6e64e1cefe7c664136bf" kindref="member">CreateBuffer</ref>(bufferSize,<sp/>VK_BUFFER_USAGE_TRANSFER_DST_BIT<sp/>|<sp/>VK_BUFFER_USAGE_INDEX_BUFFER_BIT,<sp/>VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;IndexBuffer,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;IndexBufferMemory);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a11630c856442048b0f08cb0094ac5e68" kindref="member">CopyBuffer</ref>(stagingBuffer,<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>[mesh]-&gt;IndexBuffer,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>stagingBufferMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_vulkan_manager_1a11630c856442048b0f08cb0094ac5e68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a11630c856442048b0f08cb0094ac5e68" kindref="member">VulkanManager::CopyBuffer</ref>(VkBuffer_T*<sp/>srcBuffer,<sp/>VkBuffer_T*<sp/>dstBuffer,<sp/><ref refid="_vulkan_manager_8h_1a990404191b278871ffcc40552a4893ed" kindref="member">VkDeviceSize</ref><sp/>size)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>commandBuffer<sp/>=<sp/><ref refid="class_vulkan_manager_1ae365fdf6e22fd07dab94a2e3e6d912ed" kindref="member">BeginSingleTimeCommands</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBufferCopy<sp/>copyRegion{};</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>copyRegion.size<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdCopyBuffer(commandBuffer,<sp/>srcBuffer,<sp/>dstBuffer,<sp/>1,<sp/>&amp;copyRegion);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a13d4e800fbbfef7726f5fdcad7ade31e" kindref="member">EndSingleTimeCommands</ref>(commandBuffer);</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_vulkan_manager_1acdf284bc2ebbf0eec5ebcf45f1cd1855" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1acdf284bc2ebbf0eec5ebcf45f1cd1855" kindref="member">VulkanManager::CreateSyncObjects</ref>()</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphoreCreateInfo<sp/>semaphoreInfo{};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>semaphoreInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1aa6503df70b3135047dd541d0b24aca82" kindref="member">ImageAvailableSemaphores</ref>.resize(<ref refid="class_vulkan_manager_1a4bbe077c6274b3ae5cdb4f801e7c8189" kindref="member">MAX_FRAMES_IN_FLIGHT</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a727aa29181877eb25509bf80f20877bb" kindref="member">RenderFinishedSemaphores</ref>.resize(<ref refid="class_vulkan_manager_1a4bbe077c6274b3ae5cdb4f801e7c8189" kindref="member">MAX_FRAMES_IN_FLIGHT</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFenceCreateInfo<sp/>fenceInfo{};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>fenceInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>fenceInfo.flags<sp/>=<sp/>VK_FENCE_CREATE_SIGNALED_BIT;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>.resize(<ref refid="class_vulkan_manager_1a4bbe077c6274b3ae5cdb4f801e7c8189" kindref="member">MAX_FRAMES_IN_FLIGHT</ref>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a87b101b66235d3748b34dfdc3aaf778e" kindref="member">ImagesInFlight</ref>.resize(<ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a6d261ab435d653af4d137083441739ba" kindref="member">GetImages</ref>().size(),<sp/>VK_NULL_HANDLE);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vulkan_manager_1a4bbe077c6274b3ae5cdb4f801e7c8189" kindref="member">MAX_FRAMES_IN_FLIGHT</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCreateSemaphore(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;semaphoreInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_manager_1aa6503df70b3135047dd541d0b24aca82" kindref="member">ImageAvailableSemaphores</ref>[i])<sp/>!=<sp/>VK_SUCCESS<sp/>||</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCreateSemaphore(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;semaphoreInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_manager_1a727aa29181877eb25509bf80f20877bb" kindref="member">RenderFinishedSemaphores</ref>[i])<sp/>!=<sp/>VK_SUCCESS<sp/>||</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCreateFence(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;fenceInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>[i])<sp/>!=<sp/>VK_SUCCESS</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>synchronization<sp/>objects<sp/>for<sp/>a<sp/>frame!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="class_vulkan_manager_1ae365fdf6e22fd07dab94a2e3e6d912ed" refkind="member"><highlight class="normal">VkCommandBuffer_T*<sp/><ref refid="class_vulkan_manager_1ae365fdf6e22fd07dab94a2e3e6d912ed" kindref="member">VulkanManager::BeginSingleTimeCommands</ref>()</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferAllocateInfo<sp/>allocInfo{};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.level<sp/>=<sp/>VK_COMMAND_BUFFER_LEVEL_PRIMARY;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.commandPool<sp/>=<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.commandBufferCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>commandBuffer;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>vkAllocateCommandBuffers(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>&amp;allocInfo,<sp/>&amp;commandBuffer);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>TODO<sp/>It<sp/>should<sp/>be<sp/>noted<sp/>that<sp/>in<sp/>a<sp/>real<sp/>world<sp/>application,<sp/>you&apos;re<sp/>not<sp/>supposed<sp/>to<sp/>actually<sp/>call<sp/>vkAllocateMemory<sp/>for<sp/>every<sp/>individual<sp/>buffer.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>simultaneous<sp/>memory<sp/>allocations<sp/>is<sp/>limited<sp/>by<sp/>the<sp/>maxMemoryAllocationCount<sp/>physical<sp/>device<sp/>limit,<sp/>which<sp/>may<sp/>be<sp/>as<sp/>low<sp/>as</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>4096<sp/>even<sp/>on<sp/>high<sp/>end<sp/>hardware<sp/>like<sp/>an<sp/>NVIDIA<sp/>GTX<sp/>1080.<sp/>The<sp/>right<sp/>way<sp/>to<sp/>allocate<sp/>memory<sp/>for<sp/>a<sp/>large<sp/>number<sp/>of<sp/>objects<sp/>at<sp/>the<sp/>same<sp/>time<sp/>is<sp/>to</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>create<sp/>a<sp/>custom<sp/>allocator<sp/>that<sp/>splits<sp/>up<sp/>a<sp/>single<sp/>allocation<sp/>among<sp/>many<sp/>different<sp/>objects<sp/>by<sp/>using<sp/>the<sp/>offset<sp/>parameters<sp/>that<sp/>we&apos;ve<sp/>seen<sp/>in<sp/>many</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>functions.</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>can<sp/>either<sp/>implement<sp/>such<sp/>an<sp/>allocator<sp/>yourself,<sp/>or<sp/>use<sp/>the<sp/>VulkanMemoryAllocator<sp/>library<sp/>provided<sp/>by<sp/>the<sp/>GPUOpen<sp/>initiative.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>for<sp/>this<sp/>tutorial<sp/>it&apos;s<sp/>okay<sp/>to<sp/>use<sp/>a<sp/>separate<sp/>allocation<sp/>for<sp/>every<sp/>resource,<sp/>because<sp/>we<sp/>won&apos;t<sp/>come<sp/>close<sp/>to<sp/>hitting<sp/>any<sp/>of<sp/>these<sp/>limits<sp/>for<sp/>now.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferBeginInfo<sp/>beginInfo{};</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>beginInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>beginInfo.flags<sp/>=<sp/>VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>vkBeginCommandBuffer(commandBuffer,<sp/>&amp;beginInfo);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandBuffer;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_vulkan_manager_1a13d4e800fbbfef7726f5fdcad7ade31e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a13d4e800fbbfef7726f5fdcad7ade31e" kindref="member">VulkanManager::EndSingleTimeCommands</ref>(VkCommandBuffer_T*<sp/>commandBuffer)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>vkEndCommandBuffer(commandBuffer);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubmitInfo<sp/>submitInfo{};</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SUBMIT_INFO;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.commandBufferCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.pCommandBuffers<sp/>=<sp/>&amp;commandBuffer;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>vkQueueSubmit(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>-&gt;<ref refid="struct_queue_struct_1ae57150fdd38f013b350774f8458f443d" kindref="member">GraphicsQueue</ref>,<sp/>1,<sp/>&amp;submitInfo,<sp/>VK_NULL_HANDLE);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>vkQueueWaitIdle(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>-&gt;<ref refid="struct_queue_struct_1ae57150fdd38f013b350774f8458f443d" kindref="member">GraphicsQueue</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>vkFreeCommandBuffers(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>,<sp/>1,<sp/>&amp;commandBuffer);</highlight></codeline>
<codeline lineno="415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417" refid="class_vulkan_manager_1ab8a1f19b7c1d6aca212d0aee94f7957b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1ab8a1f19b7c1d6aca212d0aee94f7957b" kindref="member">VulkanManager::Initialize</ref>()</highlight></codeline>
<codeline lineno="418"><highlight class="normal">{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref><sp/>=<sp/><ref refid="class_level_graph_1af839ca0a57e92a85dbd3997a1da1dc95" kindref="member">LevelGraph::GetInstance</ref>()-&gt;<ref refid="class_level_graph_1a704cdf7da2d406c8f14d14788a461791" kindref="member">GetRenderData</ref>();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a894ddfcca38042e4f90103fd92407ffa" kindref="member">CreateInstance</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1a2754c2f4f3ebae63ff891056b3939349" kindref="member">SetUpDebugMessenger</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1aacf24e959eaa8e1f279c7d00b2b6992c" kindref="member">CreateSurface</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a6a98a71e998c29b4a70a97b7c16a4ce2" kindref="member">PickPhysicalDevice</ref>();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a327bd53739253fd181710c7cd14d9810" kindref="member">CreateLogicalDevice</ref>();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a7723137432b6d07f111510dd4fab6f4e" kindref="member">CreateSwapChain</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1ad073c1e97745d57d28a1b8d5d66a1e0b" kindref="member">CreateImageViews</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a9687d1e5b5289269e183c3d8f0674c4c" kindref="member">CreateRenderPass</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a1fb4d08af0053fd690cdf10b2aeaa4c4" kindref="member">CreateDescriptorSetLayouts</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ac1475be6f80a0b250b86e03b58a063d5" kindref="member">CreateGraphicsPipelines</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a4915d3e8ef605e04666cf5c333bcaa59" kindref="member">CreateCommandPool</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a7b354080d3cfbb054fdc9772db643b56" kindref="member">CreateDepthResources</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a0f5362626d30524092d3c1f2cd89ce1c" kindref="member">CreateFramebuffers</ref>();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a8065f8027198ed42a4b6213f4ee0e418" kindref="member">CreateTextureImage</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a0011eae4dfa7a67867f803f80f0965c7" kindref="member">LoadModel</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1ab1a147e9bc74c2dd17bf0bb2335edcb4" kindref="member">CreateVertexBuffers</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a1d0cda14957e9371dffbe89cfb61a02d" kindref="member">CreateIndexBuffers</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a22df6a1996a2afc5b3cee779ded2c7d6" kindref="member">CreateUniformBuffers</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a78317ec976a8be58656dda76310d24c4" kindref="member">CreateDescriptorPool</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a5f87eaa2ed9df4c246df5b0136c647eb" kindref="member">CreateDescriptorSets</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acf8e57a71e7cf0d824b415361aa6c835" kindref="member">CreateCommandBuffers</ref>();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acdf284bc2ebbf0eec5ebcf45f1cd1855" kindref="member">CreateSyncObjects</ref>();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="class_vulkan_manager_1a1958c6adc9752c318c874df630dcfd71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a1958c6adc9752c318c874df630dcfd71" kindref="member">VulkanManager::CleanUp</ref>()</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>());</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1aa8ce875c0b30d7706b7ecd18094c2e59" kindref="member">FinalCleanUp</ref>();</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>vkFreeCommandBuffers(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>,<sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.size(),<sp/><ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>.data());</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shader<sp/>:<sp/><ref refid="class_vulkan_manager_1a2ff6be1a0d610f764eb53078e9d98102" kindref="member">RenderData</ref>-&gt;<ref refid="struct_s___render_data_1aa28750e97872e7b04ccbe767f3ae632b" kindref="member">MaterialsByShader</ref>)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipeline(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ad45ea7559aba44bf31bedc59072de077" kindref="member">GetPipelinesMap</ref>()[(*shader.second.begin())-&gt;GetShaderInfo().Name].first,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1a8ebb0a06b48e21faaba0dfe382b2f3e1" kindref="member">GraphicsPipelineManager</ref>-&gt;<ref refid="class_vulkan_pipeline_manager_1ad45ea7559aba44bf31bedc59072de077" kindref="member">GetPipelinesMap</ref>()[(*shader.second.begin())-&gt;GetShaderInfo().Name].second,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>semaphore<sp/>:<sp/><ref refid="class_vulkan_manager_1a727aa29181877eb25509bf80f20877bb" kindref="member">RenderFinishedSemaphores</ref>)<sp/>vkDestroySemaphore(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>semaphore,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>semaphore<sp/>:<sp/><ref refid="class_vulkan_manager_1aa6503df70b3135047dd541d0b24aca82" kindref="member">ImageAvailableSemaphores</ref>)<sp/>vkDestroySemaphore(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>semaphore,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fence<sp/>:<sp/><ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>)<sp/>vkDestroyFence(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>fence,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyCommandPool(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1ac0c1ce7ff4c55ef9c63e4516f72cc178" kindref="member">CommandPool</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>meshData<sp/>:<sp/><ref refid="class_vulkan_manager_1a263be3850d7f1108c25b5490c1598d66" kindref="member">MeshDataMap</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>meshData.second-&gt;IndexBuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>meshData.second-&gt;IndexBufferMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyBuffer(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>meshData.second-&gt;VertexBuffer,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkFreeMemory(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>meshData.second-&gt;VertexBufferMemory,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(meshData.second);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyDevice(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1ac4671367305d770c7f8588d5096f4fea" kindref="member">IsEnabled</ref>())<sp/><ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1aee5853fc65cbd5b57f4a37324ba62743" kindref="member">DestroyDebugUtilsMessengerEXT</ref>(<ref refid="class_vulkan_manager_1aa0d7d6f40736aa251e2d3319d8779754" kindref="member">Instance</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroySurfaceKHR(<ref refid="class_vulkan_manager_1aa0d7d6f40736aa251e2d3319d8779754" kindref="member">Instance</ref>,<sp/><ref refid="class_vulkan_manager_1ac54b3c21dd8b2be993bcf93b22d89dbf" kindref="member">Surface</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyInstance(<ref refid="class_vulkan_manager_1aa0d7d6f40736aa251e2d3319d8779754" kindref="member">Instance</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_vulkan_manager_1aacf24e959eaa8e1f279c7d00b2b6992c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1aacf24e959eaa8e1f279c7d00b2b6992c" kindref="member">VulkanManager::CreateSurface</ref>()</highlight></codeline>
<codeline lineno="479"><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_Vulkan_CreateSurface(<ref refid="class_core_engine_1ac17a29df79fd8f87ecf51a6c0ebf86fa" kindref="member">CoreEngine::GetInstance</ref>()-&gt;GetWindowSDL(),<sp/><ref refid="class_vulkan_manager_1aa0d7d6f40736aa251e2d3319d8779754" kindref="member">Instance</ref>,<sp/>&amp;<ref refid="class_vulkan_manager_1ac54b3c21dd8b2be993bcf93b22d89dbf" kindref="member">Surface</ref>)<sp/>!=<sp/>SDL_TRUE)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>window<sp/>surface!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="class_vulkan_manager_1abaf6fc5d929e5b1b7a125b8591db873d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1abaf6fc5d929e5b1b7a125b8591db873d" kindref="member">VulkanManager::Render</ref>(SDL_Window**<sp/>windowArray,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfWindows,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arrayOffset)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>vkWaitForFences(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>1,<sp/>&amp;<ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>],<sp/>VK_TRUE,<sp/>UINT64_MAX);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>imageIndex;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>VkResult<sp/>swapChainResult<sp/>=<sp/>vkAcquireNextImageKHR(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a1ce838552d74fb2652ef65f9830dac26" kindref="member">GetSwapchain</ref>(),<sp/>UINT64_MAX,<sp/><ref refid="class_vulkan_manager_1aa6503df70b3135047dd541d0b24aca82" kindref="member">ImageAvailableSemaphores</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>],<sp/>VK_NULL_HANDLE,<sp/>&amp;imageIndex);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapChainResult<sp/>==<sp/>VK_ERROR_OUT_OF_DATE_KHR)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a1aa5229606095582ea49a91ab6a2df95" kindref="member">RecreateSwapchain</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapChainResult<sp/>!=<sp/>VK_SUCCESS<sp/>&amp;&amp;<sp/>swapChainResult<sp/>!=<sp/>VK_SUBOPTIMAL_KHR)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>acquire<sp/>swap<sp/>chain<sp/>image!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>a<sp/>previous<sp/>frame<sp/>is<sp/>using<sp/>this<sp/>image<sp/>(i.e.<sp/>there<sp/>is<sp/>its<sp/>fence<sp/>to<sp/>wait<sp/>on)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1a87b101b66235d3748b34dfdc3aaf778e" kindref="member">ImagesInFlight</ref>[imageIndex]<sp/>!=<sp/>VK_NULL_HANDLE)<sp/>vkWaitForFences(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>1,<sp/>&amp;<ref refid="class_vulkan_manager_1a87b101b66235d3748b34dfdc3aaf778e" kindref="member">ImagesInFlight</ref>[imageIndex],<sp/>VK_TRUE,<sp/>UINT64_MAX);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>image<sp/>as<sp/>now<sp/>being<sp/>in<sp/>use<sp/>by<sp/>this<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a87b101b66235d3748b34dfdc3aaf778e" kindref="member">ImagesInFlight</ref>[imageIndex]<sp/>=<sp/><ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a0498973d310eb7ed7f3f37fad78c279e" kindref="member">UpdateBuffers</ref>(imageIndex);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubmitInfo<sp/>submitInfo{};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SUBMIT_INFO;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphore<sp/>waitSemaphores[]<sp/>=<sp/>{<sp/><ref refid="class_vulkan_manager_1aa6503df70b3135047dd541d0b24aca82" kindref="member">ImageAvailableSemaphores</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>]<sp/>};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineStageFlags<sp/>waitStages[]<sp/>=<sp/>{<sp/>VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT<sp/>};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.waitSemaphoreCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.pWaitSemaphores<sp/>=<sp/>waitSemaphores;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.pWaitDstStageMask<sp/>=<sp/>waitStages;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.commandBufferCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.pCommandBuffers<sp/>=<sp/>&amp;<ref refid="class_vulkan_manager_1ac1f88a1d9c50753da384d736528654b1" kindref="member">CommandBuffers</ref>[imageIndex];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphore<sp/>signalSemaphores[]<sp/>=<sp/>{<sp/><ref refid="class_vulkan_manager_1a727aa29181877eb25509bf80f20877bb" kindref="member">RenderFinishedSemaphores</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>]<sp/>};</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.signalSemaphoreCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>submitInfo.pSignalSemaphores<sp/>=<sp/>signalSemaphores;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>vkResetFences(<ref refid="class_vulkan_manager_1ad1b138b42e2c9ef3bbe4b863f052e9de" kindref="member">Devices</ref>-&gt;<ref refid="class_vulkan_devices_1a12fd12084e54444b3ede729a25e6e9d0" kindref="member">GetLogicalDevice</ref>(),<sp/>1,<sp/>&amp;<ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>]);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>check<sp/>=<sp/>vkQueueSubmit(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>-&gt;<ref refid="struct_queue_struct_1ae57150fdd38f013b350774f8458f443d" kindref="member">GraphicsQueue</ref>,<sp/>1,<sp/>&amp;submitInfo,<sp/><ref refid="class_vulkan_manager_1a58fee2bd83a3e8e79019e6d552746095" kindref="member">InFlightFences</ref>[<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref>]);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(check<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>submit<sp/>draw<sp/>command<sp/>buffer!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPresentInfoKHR<sp/>presentInfo{};</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.waitSemaphoreCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.pWaitSemaphores<sp/>=<sp/>signalSemaphores;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSwapchainKHR<sp/>swapChains[]<sp/>=<sp/>{<sp/><ref refid="class_vulkan_manager_1a09b0e7b66fd6e58b9b953bf9e2d41fd9" kindref="member">SwapchainManager</ref>-&gt;<ref refid="class_vulkan_swapchain_manager_1a1ce838552d74fb2652ef65f9830dac26" kindref="member">GetSwapchain</ref>()<sp/>};</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.swapchainCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.pSwapchains<sp/>=<sp/>swapChains;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.pImageIndices<sp/>=<sp/>&amp;imageIndex;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>presentInfo.pResults<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>swapChainResult<sp/>=<sp/>vkQueuePresentKHR(<ref refid="class_vulkan_manager_1a406fddc4d0690b22d6720df95e8ce1ba" kindref="member">Queues</ref>-&gt;<ref refid="struct_queue_struct_1ac06590ead8214dbb53306e34ffced65d" kindref="member">PresentationQueue</ref>,<sp/>&amp;presentInfo);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapChainResult<sp/>==<sp/>VK_ERROR_OUT_OF_DATE_KHR<sp/>||<sp/>swapChainResult<sp/>==<sp/>VK_SUBOPTIMAL_KHR<sp/>||<sp/><ref refid="class_vulkan_manager_1af2ef81db8c3d0a265c847574aa579859" kindref="member">FramebufferResized</ref>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1af2ef81db8c3d0a265c847574aa579859" kindref="member">FramebufferResized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_vector2" kindref="compound">FVector2</ref><sp/>size<sp/>=<sp/><ref refid="class_core_engine_1ac17a29df79fd8f87ecf51a6c0ebf86fa" kindref="member">CoreEngine::GetInstance</ref>()-&gt;<ref refid="class_core_engine_1ae4e015e1ffd3121bee9026eac2dcfae8" kindref="member">GetWindowSize</ref>();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>size.<ref refid="class_f_vector2_1a4149790b0bcdb391bc575cd008df9bdb" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>size.<ref refid="class_f_vector2_1a1ec9ae56c36cbf0f4cdb0861d623a1b0" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//SDL_GetWindowSize(CoreEngine::GetInstance()-&gt;GetWindowSize(),<sp/>&amp;width,<sp/>&amp;height);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while<sp/>(width<sp/>==<sp/>0<sp/>||<sp/>height<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>SDL_GetWindowSize(CoreEngine::GetInstance()-&gt;GetWindowSize(),<sp/>&amp;width,<sp/>&amp;height);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>SDL_WaitEvent(nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a1aa5229606095582ea49a91ab6a2df95" kindref="member">RecreateSwapchain</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swapChainResult<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>acquire<sp/>swap<sp/>chain<sp/>image!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref><sp/>=<sp/>(<ref refid="class_vulkan_manager_1a62319d491431ed899aba67d98c562ffa" kindref="member">CurrentFrame</ref><sp/>+<sp/>1)<sp/>%<sp/><ref refid="class_vulkan_manager_1a4bbe077c6274b3ae5cdb4f801e7c8189" kindref="member">MAX_FRAMES_IN_FLIGHT</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="class_vulkan_manager_1a894ddfcca38042e4f90103fd92407ffa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a894ddfcca38042e4f90103fd92407ffa" kindref="member">VulkanManager::CreateInstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>applicationName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>engineName,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>appVersion)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1ac4671367305d770c7f8588d5096f4fea" kindref="member">IsEnabled</ref>()<sp/>&amp;&amp;<sp/>!<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1a446351dd565a1bcf59f2fc36cc1074a7" kindref="member">CheckValidationLayerSupport</ref>())</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Validation<sp/>layers<sp/>requested,<sp/>but<sp/>not<sp/>available!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>VkApplicationInfo<sp/>appInfo{};</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>appInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_APPLICATION_INFO;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>appInfo.pApplicationName<sp/>=<sp/>applicationName;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!appVersion)<sp/>appInfo.applicationVersion<sp/>=<sp/>VK_MAKE_VERSION(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>appInfo.applicationVersion<sp/>=<sp/>VK_MAKE_VERSION(*appVersion,<sp/>*(appVersion<sp/>+<sp/>1),<sp/>*(appVersion<sp/>+<sp/>2));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>appInfo.pEngineName<sp/>=<sp/>engineName;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>appInfo.engineVersion<sp/>=<sp/>VK_MAKE_VERSION(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>appInfo.apiVersion<sp/>=<sp/>VK_API_VERSION_1_2;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstanceCreateInfo<sp/>createInfo{};</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.pApplicationInfo<sp/>=<sp/>&amp;appInfo;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char*&gt;<sp/>sdlExtensions<sp/>=<sp/><ref refid="class_vulkan_manager_1ab1c12de505db11418c690974d735d6f7" kindref="member">GetSDLExetensions</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>sdlExtensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.enabledExtensionCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sdlExtensions.size());</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.ppEnabledExtensionNames<sp/>=<sp/>sdlExtensions.data();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDebugUtilsMessengerCreateInfoEXT<sp/>debugCreateInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1ac4671367305d770c7f8588d5096f4fea" kindref="member">IsEnabled</ref>())</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1ac200ef5c2e68323f4a77b6a5913a3a08" kindref="member">PopulateDebugMessengerCreateInfo</ref>(debugCreateInfo);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.pNext<sp/>=<sp/>(VkDebugUtilsMessengerCreateInfoEXT*)&amp;debugCreateInfo;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.enabledLayerCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1af54895386d8ccbe0ff47347858e96312" kindref="member">GetValidationLayerNames</ref>()-&gt;size());</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.ppEnabledLayerNames<sp/>=<sp/><ref refid="class_vulkan_manager_1acfdb2510a708ed775a2d14975b5a5072" kindref="member">Debugger</ref>-&gt;<ref refid="class_vulkan_debugger_1af54895386d8ccbe0ff47347858e96312" kindref="member">GetValidationLayerNames</ref>()-&gt;data();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.enabledLayerCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>createInfo.pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vkCreateInstance(&amp;createInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="class_vulkan_manager_1aa0d7d6f40736aa251e2d3319d8779754" kindref="member">Instance</ref>)<sp/>!=<sp/>VK_SUCCESS)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>instance!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="class_vulkan_manager_1ab1c12de505db11418c690974d735d6f7" refkind="member"><highlight class="normal">std::vector&lt;const<sp/>char*&gt;<sp/><ref refid="class_vulkan_manager_1ab1c12de505db11418c690974d735d6f7" kindref="member">VulkanManager::GetSDLExetensions</ref>()</highlight></codeline>
<codeline lineno="618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>char*&gt;<sp/>sdlExtensions;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>extensionCount;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(SDL_Vulkan_GetInstanceExtensions(<ref refid="class_core_engine_1ac17a29df79fd8f87ecf51a6c0ebf86fa" kindref="member">CoreEngine::GetInstance</ref>()-&gt;GetWindowSDL(),<sp/>&amp;extensionCount,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>==<sp/>SDL_FALSE);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>sdlExtensions.resize(extensionCount);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Vulkan_GetInstanceExtensions(<ref refid="class_core_engine_1ac17a29df79fd8f87ecf51a6c0ebf86fa" kindref="member">CoreEngine::GetInstance</ref>()-&gt;GetWindowSDL(),<sp/>&amp;extensionCount,<sp/>sdlExtensions.data());</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sdlExtensions;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="class_vulkan_manager_1a0011eae4dfa7a67867f803f80f0965c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vulkan_manager_1a0011eae4dfa7a67867f803f80f0965c7" kindref="member">VulkanManager::LoadModel</ref>()</highlight><highlight class="comment">//TODO<sp/>remove<sp/>depricated<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>(const<sp/>auto&amp;<sp/>pair<sp/>:<sp/>InitializationData-&gt;MeshToMaterialMap)</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertices<sp/>=<sp/>pair.first-&gt;Vertices;</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indices<sp/>=<sp/>pair.first-&gt;Indices;</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*tinyobj::attrib_t<sp/>attrib;</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;tinyobj::shape_t&gt;<sp/>shapes;</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/>std::vector&lt;tinyobj::material_t&gt;<sp/>materials;</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/>std::string<sp/>warn,<sp/>err;</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!tinyobj::LoadObj(&amp;attrib,<sp/>&amp;shapes,<sp/>&amp;materials,<sp/>&amp;warn,<sp/>&amp;err,<sp/>MODEL_PATH.c_str()))</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>std::runtime_error(warn<sp/>+<sp/>err);</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="comment"></highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(const<sp/>auto&amp;<sp/>shape<sp/>:<sp/>shapes)</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(const<sp/>auto&amp;<sp/>index<sp/>:<sp/>shape.mesh.indices)</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertex<sp/>vertex<sp/>=<sp/>Vertex();</highlight></codeline>
<codeline lineno="651"><highlight class="comment"></highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.Position<sp/>=</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.vertices[3<sp/>*<sp/>index.vertex_index<sp/>+<sp/>2]</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="658"><highlight class="comment"></highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.TextureCoordinates<sp/>=</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attrib.texcoords[2<sp/>*<sp/>index.texcoord_index<sp/>+<sp/>0],</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f<sp/>-<sp/>attrib.texcoords[2<sp/>*<sp/>index.texcoord_index<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="665"><highlight class="comment"></highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vertices.push_back(vertex);</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indices.push_back(Indices.size());</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="struct_swapchain_support_details_1ac57e2a303d193fe782fe5fb1b2fd8802" refkind="member"><highlight class="normal">VkSurfaceCapabilitiesKHR*<sp/><ref refid="struct_swapchain_support_details_1ac57e2a303d193fe782fe5fb1b2fd8802" kindref="member">SwapchainSupportDetails::InitializeCapabilities</ref>()</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>VkSurfaceCapabilitiesKHR();</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Dev/Vulkan_Engine/Vulkan_GameEngine/Engine/Renderers/Vulkan/VulkanManager.cpp"/>
  </compounddef>
</doxygen>
